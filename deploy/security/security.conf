# CellFrame Python SDK - Security Configuration
# Version: 1.0.0
# Environment: Production

[authentication]
# Authentication settings
enabled = true
method = "token"
token_algorithm = "HS256"
token_secret_key = "CHANGE_THIS_SECRET_KEY_IN_PRODUCTION"
token_expiration = 3600
token_refresh_enabled = true
token_refresh_expiration = 86400

# Multi-factor authentication
mfa_enabled = false
mfa_methods = ["totp", "sms"]
mfa_backup_codes = 10

# Password policy
password_min_length = 12
password_require_uppercase = true
password_require_lowercase = true
password_require_numbers = true
password_require_symbols = true
password_history_size = 5
password_expiration_days = 90

[authorization]
# Authorization settings
enabled = true
default_policy = "deny"
admin_users = ["admin"]
service_accounts = ["service"]

# Role-based access control
rbac_enabled = true
roles = {
    "admin": ["*"],
    "user": ["read", "write"],
    "readonly": ["read"],
    "service": ["service"]
}

# Permissions
permissions = {
    "read": ["GET:/api/*", "GET:/health", "GET:/metrics"],
    "write": ["POST:/api/*", "PUT:/api/*", "DELETE:/api/*"],
    "admin": ["*"],
    "service": ["POST:/api/internal/*", "GET:/api/internal/*"]
}

[input_validation]
# Input validation settings
enabled = true
max_request_size = "10MB"
max_json_depth = 10
max_array_length = 1000
max_string_length = 10000

# Content type validation
allowed_content_types = [
    "application/json",
    "application/x-www-form-urlencoded",
    "multipart/form-data"
]

# File upload validation
file_upload_enabled = false
file_upload_max_size = "5MB"
file_upload_allowed_extensions = [".txt", ".json", ".csv"]
file_upload_scan_viruses = true

# SQL injection prevention
sql_injection_prevention = true
sql_statement_timeout = 30
sql_max_connections = 50

# XSS prevention
xss_protection = true
xss_filter_enabled = true
xss_escape_html = true

[rate_limiting]
# Rate limiting settings
enabled = true
algorithm = "sliding_window"
storage = "memory"

# Global rate limits
global_requests_per_minute = 1000
global_requests_per_hour = 10000
global_requests_per_day = 100000

# Per-IP rate limits
ip_requests_per_minute = 100
ip_requests_per_hour = 1000
ip_requests_per_day = 10000

# Per-user rate limits
user_requests_per_minute = 200
user_requests_per_hour = 2000
user_requests_per_day = 20000

# Burst limits
burst_limit = 50
burst_window = 60

# Rate limit responses
rate_limit_status_code = 429
rate_limit_message = "Rate limit exceeded"
rate_limit_headers = true

[encryption]
# Encryption settings
algorithm = "AES-256-GCM"
key_size = 256
iv_size = 96
tag_size = 128

# Key management
key_rotation_enabled = true
key_rotation_interval = 86400
key_backup_enabled = true
key_backup_path = "/opt/cellframe/var/lib/python-sdk/keys"

# TLS/SSL settings
tls_enabled = true
tls_version = "1.3"
tls_cipher_suites = [
    "TLS_AES_256_GCM_SHA384",
    "TLS_CHACHA20_POLY1305_SHA256",
    "TLS_AES_128_GCM_SHA256"
]
tls_cert_path = "/opt/cellframe/etc/ssl/cert.pem"
tls_key_path = "/opt/cellframe/etc/ssl/key.pem"
tls_ca_path = "/opt/cellframe/etc/ssl/ca.pem"

# Certificate validation
cert_validation_enabled = true
cert_expiration_warning_days = 30
cert_auto_renewal = true

[firewall]
# Firewall settings
enabled = true
default_policy = "deny"

# Allowed IPs
allowed_ips = [
    "127.0.0.1/32",
    "::1/128",
    "10.0.0.0/8",
    "172.16.0.0/12",
    "192.168.0.0/16"
]

# Blocked IPs
blocked_ips = []

# Port restrictions
allowed_ports = [8080, 8443, 9090, 9091, 9092, 9093, 9094]
blocked_ports = []

# Geographic restrictions
geo_blocking_enabled = false
allowed_countries = ["US", "EU", "CA"]
blocked_countries = []

[intrusion_detection]
# Intrusion detection settings
enabled = true
sensitivity = "medium"
log_level = "info"

# Attack detection
detect_brute_force = true
detect_sql_injection = true
detect_xss = true
detect_csrf = true
detect_dos = true
detect_suspicious_patterns = true

# Brute force protection
brute_force_threshold = 5
brute_force_window = 300
brute_force_lockout_duration = 3600

# Suspicious activity detection
suspicious_activity_threshold = 10
suspicious_activity_window = 600
suspicious_activity_actions = ["log", "alert", "block"]

[audit_logging]
# Audit logging settings
enabled = true
log_level = "info"
log_format = "json"
log_file = "/opt/cellframe/var/log/python-sdk/audit.log"
log_rotation = true
log_retention_days = 365

# Audit events
audit_events = [
    "authentication",
    "authorization",
    "data_access",
    "data_modification",
    "configuration_changes",
    "security_violations",
    "admin_actions"
]

# Log fields
log_fields = [
    "timestamp",
    "event_type",
    "user_id",
    "ip_address",
    "user_agent",
    "request_method",
    "request_path",
    "response_status",
    "response_time",
    "data_accessed",
    "data_modified",
    "security_context"
]

# SIEM integration
siem_enabled = false
siem_endpoint = "https://siem.example.com/api/logs"
siem_api_key = "YOUR_SIEM_API_KEY"
siem_batch_size = 100
siem_batch_interval = 60

[vulnerability_scanning]
# Vulnerability scanning settings
enabled = true
scan_interval = 86400
scan_types = ["dependency", "code", "configuration", "container"]

# Dependency scanning
dependency_scan_enabled = true
dependency_scan_databases = ["nvd", "ossindex", "github"]
dependency_scan_severity_threshold = "medium"

# Code scanning
code_scan_enabled = true
code_scan_languages = ["python", "javascript", "json"]
code_scan_rules = ["security", "quality", "performance"]

# Container scanning
container_scan_enabled = true
container_scan_registries = ["docker.io", "quay.io"]
container_scan_severity_threshold = "high"

[compliance]
# Compliance settings
standards = ["SOC2", "ISO27001", "GDPR", "HIPAA"]
compliance_reporting = true
compliance_report_interval = 2592000

# Data protection
data_classification = true
data_retention_policies = {
    "personal": 2592000,
    "sensitive": 7776000,
    "public": 31536000
}

# Privacy settings
privacy_mode = true
data_anonymization = true
data_encryption_at_rest = true
data_encryption_in_transit = true

# Right to be forgotten
right_to_be_forgotten = true
data_deletion_verification = true
data_portability = true

[incident_response]
# Incident response settings
enabled = true
response_team = ["security@cellframe.net"]
escalation_levels = ["low", "medium", "high", "critical"]

# Notification settings
notification_channels = ["email", "sms", "slack"]
notification_thresholds = {
    "low": 3600,
    "medium": 1800,
    "high": 900,
    "critical": 0
}

# Automated responses
automated_response_enabled = true
automated_actions = {
    "block_ip": true,
    "disable_user": true,
    "isolate_container": true,
    "rotate_keys": true
}

[backup_security]
# Backup security settings
backup_encryption = true
backup_integrity_check = true
backup_access_control = true
backup_retention = 90

# Backup storage
backup_storage_type = "encrypted"
backup_storage_location = "/opt/cellframe/var/lib/python-sdk/secure-backups"
backup_storage_permissions = "600"

# Backup verification
backup_verification_enabled = true
backup_verification_interval = 86400
backup_restore_testing = true

[monitoring_security]
# Security monitoring settings
security_monitoring_enabled = true
security_metrics_enabled = true
security_alerting_enabled = true

# Metrics collection
security_metrics = [
    "authentication_attempts",
    "authorization_failures",
    "rate_limit_violations",
    "security_rule_violations",
    "vulnerability_scan_results",
    "incident_count"
]

# Alert thresholds
alert_thresholds = {
    "failed_authentication": 10,
    "authorization_failure": 5,
    "rate_limit_violation": 100,
    "security_violation": 1,
    "vulnerability_high": 1,
    "vulnerability_critical": 1
}

# Integration with monitoring systems
prometheus_metrics = true
grafana_dashboard = true
alertmanager_integration = true 