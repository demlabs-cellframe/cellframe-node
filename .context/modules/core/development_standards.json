{
  "title": "Общие стандарты разработки",
  "description": "Стандарты и шаблоны для разработки проектов",
  "category": "core",
  "type": "standards",
  "version": "1.0.0",
  "created": "2025-01-21",
  "updated": "2025-01-21",
  
  "ci_cd_standards": {
    "description": "Стандартные шаблоны для CI/CD конфигураций",
    "gitlab_ci_template": {
      "description": "Базовый шаблон для GitLab CI/CD файлов",
      "template": ".build:\n  tags:\n    - ci-polygon\n  image: demlabs/debian/amd64:qt5\n  timeout: 3 hours 30 minutes\n  dependencies: []\n  interruptible: true",
      "usage": "Использовать как основу для всех .gitlab-ci.yml файлов",
      "mandatory_fields": [
        "tags: - ci-polygon",
        "image: demlabs/debian/amd64:qt5", 
        "timeout: 3 hours 30 minutes",
        "dependencies: []",
        "interruptible: true"
      ],
      "explanation": "Этот шаблон обеспечивает стандартную конфигурацию для всех CI/CD pipeline в организации"
    },
    "docker_standards": {
      "base_image": "demlabs/debian/amd64:qt5",
      "timeout_policy": "3 hours 30 minutes максимум для любой сборки",
      "interruptible_policy": "Все джобы должны быть interruptible: true",
      "dependencies_policy": "Явно указывать dependencies: [] если нет зависимостей"
    }
  },
  
  "python_binding_rules": {
    "description": "Критически важные правила для Python биндингов",
    "never_simplify_rule": {
      "rule": "КРИТИЧЕСКИ ВАЖНО: НЕ УПРОЩАТЬ Python биндинги DAP SDK НИКОГДА!",
      "explanation": "Всегда использовать полные реальные биндинги ко всем DAP SDK модулям (crypto, network, system, core, config)",
      "problem_solving_approach": "Решать проблемы сборки через исправление схемы сборки DAP SDK, include paths, линковки библиотек, но биндинги должны оставаться полными и функциональными",
      "priority": "critical",
      "enforcement": "Это правило должно соблюдаться во всех проектах Python биндингов"
    },
    "modular_organization": {
      "core_modules": [
        "python_dap_core.c - основные DAP функции",
        "python_dap_config.c - конфигурация",
        "python_dap_crypto.c - криптографические функции", 
        "python_dap_network.c - сетевые функции",
        "python_dap_system.c - системные функции",
        "python_gdb.c - Global Database функции"
      ],
      "separation_principle": "Каждый модуль отвечает за свою область функциональности",
      "naming_convention": "python_[module_name].c для файлов биндингов"
    }
  },
  
  "code_organization": {
    "description": "Принципы организации кода",
    "file_structure": {
      "header_files": "include/ - все заголовочные файлы",
      "source_files": "src/ - все исходные файлы",
      "build_files": "build/ - результаты сборки", 
      "config_files": "config/ - конфигурационные файлы"
    },
    "naming_conventions": {
      "functions": "snake_case с префиксом модуля",
      "variables": "snake_case с типовыми префиксами (l_, a_, g_, s_)",
      "constants": "UPPER_CASE с префиксом модуля",
      "files": "snake_case.c/.h"
    }
  },
  
  "documentation_standards": {
    "description": "Стандарты документирования кода",
    "comment_style": "/* многострочные */ для заголовков, // для однострочных",
    "function_documentation": "Каждая публичная функция должна иметь описание параметров и возвращаемого значения",
    "module_headers": "Каждый .c файл должен начинаться с комментария описывающего назначение модуля"
  },
  
  "build_standards": {
    "description": "Стандарты сборки проектов",
    "cmake_requirements": {
      "minimum_version": "3.10",
      "c_standard": "11",
      "warning_level": "-Wall -Wextra",
      "optimization": "-O3 для release, -O0 -g для debug"
    },
    "library_linking": {
      "dap_sdk_modules": "Подключать только необходимые модули DAP SDK",
      "external_libs": "Минимизировать внешние зависимости",
      "static_vs_dynamic": "Предпочитать статическую линковку для внутренних библиотек"
    }
  },
  
  "git_workflow": {
    "description": "Стандарты работы с Git",
    "commit_messages": {
      "language": "English",
      "format": "type(scope): description",
      "types": ["feat", "fix", "docs", "style", "refactor", "test", "chore"]
    },
    "branch_naming": {
      "feature": "feature/description",
      "bugfix": "bugfix/issue-number",
      "hotfix": "hotfix/critical-issue"
    },
    "never_git_add_all": "НИКОГДА не использовать 'git add .' - всегда добавлять файлы поименно"
  },
  
  "testing_standards": {
    "description": "Стандарты тестирования",
    "unit_tests": "Обязательные unit тесты для всех публичных функций",
    "integration_tests": "Тесты интеграции между модулями",
    "build_tests": "Проверка сборки на разных платформах",
    "module_test_synchronization": {
      "rule": "КРИТИЧЕСКИ ВАЖНО: При создании, изменении или удалении модуля - соответственно создавай, изменяй и удаляй связанный с ним юнит тест",
      "rationale": "Поддержание актуальности тестов является фундаментальным требованием качественной разработки",
      "enforcement": "Обязательно для всех модулей и компонентов системы",
      "examples": {
        "new_module": "Создан новый модуль src/utils/helper.py → создать tests/unit/test_helper.py",
        "modified_module": "Изменена функция в src/core/processor.py → обновить соответствующий тест в tests/unit/test_processor.py",
        "deleted_module": "Удален модуль src/deprecated/old_feature.py → удалить tests/unit/test_old_feature.py"
      },
      "test_coverage_requirement": "Каждый модуль должен иметь минимум 80% покрытия unit тестами",
      "test_naming_convention": "tests/unit/test_[module_name].py для src/[module_name].py",
      "priority": "critical"
    }
  },
  
  "project_structure_template": {
    "description": "Рекомендуемая структура проекта",
    "directories": {
      "src/": "Исходные файлы",
      "include/": "Заголовочные файлы", 
      "build/": "Сборка (в .gitignore)",
      "tests/": "Тесты",
      "docs/": "Документация",
      "config/": "Конфигурационные файлы",
      ".context/": "SLC система управления контекстом"
    },
    "files": {
      "CMakeLists.txt": "Основной файл сборки",
      "README.md": "Описание проекта",
      ".gitignore": "Исключения для Git",
      ".cursorrules": "Правила для Cursor IDE"
    }
  },
  
  "navigation_system": {
    "purpose": "Стандарты разработки для всех проектов организации",
    "file_role": "DEVELOPMENT_STANDARDS",
    "usage": "Автоматически загружается при создании новых задач разработки",
    "related_files": [
      ".context/modules/core/standards.json",
      ".context/modules/core/project.json"
    ]
  }
} 