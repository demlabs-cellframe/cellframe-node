{
  "type": "project_module",
  "domain": "cellframe_sdk",
  "version": "3.4-0",
  "created": "2025-01-07T00:00:00Z",
  "updated": "2025-10-26T05:25:00Z",
  "template_source": "Cellframe SDK v3.4-0 + Consensus & Certificates Deep Dive",
  "navigation_system": {
    "purpose": "–§–∞–π–ª –°–õ–ö: cellframe_sdk.json",
    "recovery_path": ".context/manifest.json",
    "current_file": ".context/modules/projects/cellframe_sdk.json",
    "file_role": "PROJECT_MODULE",
    "related_files": [
      ".context/manifest.json",
      ".context/modules/standards/dap_sdk_coding_standards.json",
      ".context/modules/projects/dap_sdk.json",
      ".context/modules/projects/dap_sdk/python_bindings_coding_standards.json"
    ],
    "quick_navigation": {
      "üè† –ì–ª–∞–≤–Ω–∞—è": ".context/manifest.json - –≥–ª–∞–≤–Ω—ã–π –Ω–∞–≤–∏–≥–∞—Ç–æ—Ä —Å–∏—Å—Ç–µ–º—ã",
      "üõ†Ô∏è CLI": ".context/tools/scripts/slc_cli.py - –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è",
      "üìã DAP SDK": ".context/modules/projects/dap_sdk.json - –±–∞–∑–æ–≤—ã–π —É—Ä–æ–≤–µ–Ω—å",
      "üîß –°—Ç–∞–Ω–¥–∞—Ä—Ç—ã": ".context/modules/standards/dap_sdk_coding_standards.json - –ø—Ä–∞–≤–∏–ª–∞ –∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è"
    },
    "usage_hint": "–ê–≤—Ç–æ–∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å Cellframe SDK —Ñ–∞–π–ª–∞–º–∏",
    "ai_context": "–§–∞–π–ª –°–õ–ö —Å–∏—Å—Ç–µ–º—ã: cellframe_sdk.json"
  },
  "template_info": {
    "name": "Cellframe SDK Architecture & Development Guide",
    "description": "–ö–æ–º–ø–ª–µ–∫—Å–Ω–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ –∏ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ Cellframe SDK",
    "version": "3.4-0",
    "domain": "blockchain_development",
    "specialization": "modular_blockchain_platform",
    "applicability": "–í—Å–µ –ø—Ä–æ–µ–∫—Ç—ã –∏—Å–ø–æ–ª—å–∑—É—é—â–∏–µ Cellframe SDK",
    "auto_load_triggers": [
      "cellframe-sdk",
      "cellframe-node", 
      "dap_chain_",
      "cellframe",
      "consensus",
      "srv-stake",
      "srv-voting",
      "srv-bridge",
      "srv-xchange",
      "cs-dag-poa",
      "cs-esbocs"
    ],
    "depends_on": [
      ".context/modules/standards/dap_sdk_coding_standards.json",
      ".context/modules/projects/dap_sdk.json"
    ]
  },

  "architecture_overview": {
    "description": "Cellframe SDK - –º–æ–¥—É–ª—å–Ω–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –±–ª–æ–∫—á–µ–π–Ω –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π",
    "base_foundation": "DAP SDK - –≤—Å–µ –ø—Ä–∞–≤–∏–ª–∞ –∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –Ω–∞—Å–ª–µ–¥—É—é—Ç—Å—è",
    "architecture_layers": {
      "layer_1": {
        "name": "DAP SDK Foundation", 
        "description": "–ë–∞–∑–æ–≤—ã–π —É—Ä–æ–≤–µ–Ω—å: –∫—Ä–∏–ø—Ç–æ–≥—Ä–∞—Ñ–∏—è, —Å–µ—Ç—å, –ø–∞–º—è—Ç—å, —Å–æ–±—ã—Ç–∏—è",
        "auto_loads": ".context/modules/standards/dap_sdk_coding_standards.json"
      },
      "layer_2": {
        "name": "Cellframe Core",
        "description": "–Ø–¥—Ä–æ: —Ü–µ–ø–∏, –∫–æ—à–µ–ª—å–∫–∏, –æ–±—â–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã",
        "modules": ["common", "chain", "wallet"]
      },
      "layer_3": {
        "name": "Consensus Layer", 
        "description": "–ú–æ–¥—É–ª–∏ –∫–æ–Ω—Å–µ–Ω—Å—É—Å–∞",
        "types": ["dag", "blocks"],
        "algorithms": ["dag-poa", "esbocs", "block-pow", "none"]
      },
      "layer_4": {
        "name": "Network & Services",
        "description": "–°–µ—Ç–µ–≤–æ–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ –∏ —Å–µ—Ä–≤–∏—Å—ã",
        "components": ["net", "mempool", "mining", "srv-*"]
      },
      "layer_5": {
        "name": "Python Bindings",
        "description": "Python –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å",
        "auto_loads": ".context/modules/projects/dap_sdk/python_bindings_coding_standards.json"
      }
    }
  },

  "module_structure": {
    "core_modules": {
      "common": {
        "library": "dap_chain_common",
        "path": "cellframe-sdk/modules/common/",
        "description": "–û–±—â–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –±–ª–æ–∫—á–µ–π–Ω–∞",
        "dependencies": ["dap_core", "dap_crypto", "dap_chain_net"],
        "key_files": {
          "headers": ["dap_chain_datum.h", "dap_chain_common.h"],
          "sources": ["dap_chain_*.c"]
        },
        "cmake_target": "dap_chain_common"
      },
      "chain": {
        "library": "dap_chain", 
        "path": "cellframe-sdk/modules/chain/",
        "description": "–û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ –±–ª–æ–∫—á–µ–π–Ω —Ü–µ–ø–µ–π",
        "dependencies": ["dap_chain_common", "dap_global_db", "dap_notify_srv", "dap_stream"],
        "key_files": {
          "main": ["dap_chain.c", "dap_chain_cell.c", "dap_chain_ch.c"],
          "consensus": ["dap_chain_cs.c"],
          "policy": ["dap_chain_policy.c"],
          "transactions": ["dap_chain_tx.c"]
        },
        "cmake_target": "dap_chain"
      },
      "wallet": {
        "library": "dap_chain_wallet",
        "path": "cellframe-sdk/modules/wallet/", 
        "description": "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ—à–µ–ª—å–∫–∞–º–∏ –∏ –∫–ª—é—á–∞–º–∏",
        "dependencies": ["dap_chain_common"],
        "cmake_target": "dap_chain_wallet"
      }
    },

    "network_modules": {
      "net": {
        "library": "dap_chain_net",
        "path": "cellframe-sdk/modules/net/",
        "description": "–°–µ—Ç–µ–≤–æ–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ –º–µ–∂–¥—É —É–∑–ª–∞–º–∏",
        "key_components": {
          "ledger": "dap_chain_ledger.c - —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π —Ä–µ–µ—Å—Ç—Ä",
          "networking": "dap_chain_net.c - —Å–µ—Ç–µ–≤–æ–π –ø—Ä–æ—Ç–æ–∫–æ–ª",
          "node": "dap_chain_node.c - —É–∑–µ–ª —Å–µ—Ç–∏",
          "cli": "dap_chain_node_cli.c - –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏"
        },
        "cli_support": true
      },
      "mempool": {
        "library": "dap_chain_mempool",
        "path": "cellframe-sdk/modules/mempool/",
        "description": "–ü—É–ª –æ–∂–∏–¥–∞—é—â–∏—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π"
      }
    },

    "consensus_modules": {
      "types": {
        "dag": {
          "library": "dap_chain_cs_dag",
          "path": "cellframe-sdk/modules/type/dag/",
          "description": "DAG —Ç–æ–ø–æ–ª–æ–≥–∏—è –±–ª–æ–∫—á–µ–π–Ω–∞"
        },
        "blocks": {
          "library": "dap_chain_cs_blocks", 
          "path": "cellframe-sdk/modules/type/blocks/",
          "description": "–ë–ª–æ—á–Ω–∞—è —Ç–æ–ø–æ–ª–æ–≥–∏—è –±–ª–æ–∫—á–µ–π–Ω–∞"
        },
        "none": {
          "path": "cellframe-sdk/modules/type/none/",
          "description": "–¢–æ–ø–æ–ª–æ–≥–∏—è –±–µ–∑ –∫–æ–Ω—Å–µ–Ω—Å—É—Å–∞"
        }
      },
      "algorithms": {
        "dag_poa": {
          "library": "dap_chain_cs_dag_poa",
          "path": "cellframe-sdk/modules/consensus/dag-poa/",
          "description": "Proof of Authority –¥–ª—è DAG",
          "enable_flag": "cs-dag-poa"
        },
        "esbocs": {
          "library": "dap_chain_cs_esbocs",
          "path": "cellframe-sdk/modules/consensus/esbocs/", 
          "description": "ESBOCS –∫–æ–Ω—Å–µ–Ω—Å—É—Å –¥–ª—è –±–ª–æ–∫–æ–≤",
          "enable_flag": "cs-esbocs"
        },
        "block_pow": {
          "library": "dap_chain_cs_block_pow",
          "path": "cellframe-sdk/modules/consensus/block-pow/",
          "description": "Proof of Work –¥–ª—è –±–ª–æ–∫–æ–≤",
          "enable_flag": "cs-block-pow"
        }
      }
    },

    "certificate_architecture": {
      "description": "–°–∏—Å—Ç–µ–º–∞ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤ –∏ –∫—Ä–∏–ø—Ç–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –≤ Cellframe",
      "critical_distinction": "–¢–†–ò —Ç–∏–ø–∞ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤ —Å –†–ê–ó–ù–´–ú–ò –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è–º–∏",
      
      "certificate_types": {
        "node_addr_certificate": {
          "purpose": "–ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è —É–∑–ª–∞ –≤ P2P —Å–µ—Ç–∏ (–∫–æ—Ä–Ω–µ–≤–æ–π —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –Ω–æ–¥—ã)",
          "file_name": "node-addr.dcert",
          "location": "/var/lib/ca/node-addr.dcert",
          "address_format": "dap_stream_node_addr_t - –∫–æ—Ä–æ—Ç–∫–∏–π —Ñ–æ—Ä–º–∞—Ç IPv6-like: 8598::57B2::FE83::5F16",
          "generation": {
            "function": "dap_cert_generate() —Å —Ç–∏–ø–æ–º –∫–ª—é—á–∞ (–æ–±—ã—á–Ω–æ Dilithium)",
            "address_extraction": "dap_stream_node_addr_from_cert() –∏–∑–≤–ª–µ–∫–∞–µ—Ç –∞–¥—Ä–µ—Å –∏–∑ –ø—É–±–ª–∏—á–Ω–æ–≥–æ –∫–ª—é—á–∞"
          },
          "usage": [
            "–ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è —É–∑–ª–∞ –≤ P2P —Å–µ—Ç–∏ (node list, topology)",
            "–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ authorized_nodes_addrs –¥–ª—è DAG-PoA",
            "–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ validators_addrs –¥–ª—è ESBocs",
            "–ù–ï –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –ø–æ–¥–ø–∏—Å–∏ –±–ª–æ–∫–æ–≤/events!",
            "–ì–µ–Ω–µ—Ä–∞—Ü–∏—è validator address (–æ–Ω–∏ –∏–¥–µ–Ω—Ç–∏—á–Ω—ã!)"
          ],
          "storage": "node_addr.txt —Ñ–∞–π–ª —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –∞–¥—Ä–µ—Å–∞",
          "critical_note": "–≠—Ç–æ –ö–û–†–ù–ï–í–û–ô —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –Ω–æ–¥—ã! master.N —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –¢–û–õ–¨–ö–û –¥–ª—è –ø–æ–¥–ø–∏—Å–∏!"
        },
        
        "validator_private_certificate": {
          "purpose": "–ü–æ–¥–ø–∏—Å—å –±–ª–æ–∫–æ–≤/events (–ü–†–ò–í–ê–¢–ù–´–ô –∫–ª—é—á)",
          "file_name_pattern": "pvt.{network}.master.{idx}.dcert",
          "example": "pvt.stagenet.master.0.dcert",
          "location": "/var/lib/ca/pvt.stagenet.master.N.dcert (—Ç–æ–ª—å–∫–æ –Ω–∞ —Å–≤–æ–µ–π –Ω–æ–¥–µ!)",
          "contains": "–ü—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á –¥–ª—è –ø–æ–¥–ø–∏—Å–∏ (dap_enc_key_t —Å private key)",
          "generation": "dap_cert_generate_mem() —Å DAP_ENC_KEY_TYPE_SIG_DILITHIUM",
          "usage": [
            "CLI –∫–æ–º–∞–Ω–¥—ã: -certs pvt.stagenet.master.0",
            "–ü–æ–¥–ø–∏—Å—å datums: token_decl, token_emit, tx_create",
            "–ü–æ–¥–ø–∏—Å—å –±–ª–æ–∫–æ–≤ –≤ ESBocs (blocks-sign-cert config)",
            "–ü–æ–¥–ø–∏—Å—å events –≤ DAG-PoA (events-sign-cert config)"
          ],
          "distribution": "–ö–∞–∂–¥–∞—è –Ω–æ–¥–∞ –∏–º–µ–µ—Ç –¢–û–õ–¨–ö–û —Å–≤–æ–π –ø—Ä–∏–≤–∞—Ç–Ω—ã–π —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç",
          "security": "–ù–ò–ö–û–ì–î–ê –Ω–µ –∫–æ–ø–∏—Ä—É–µ—Ç—Å—è –Ω–∞ –¥—Ä—É–≥–∏–µ –Ω–æ–¥—ã!"
        },
        
        "validator_public_certificate": {
          "purpose": "–í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è –ø–æ–¥–ø–∏—Å–µ–π –¥—Ä—É–≥–∏—Ö –≤–∞–ª–∏–¥–∞—Ç–æ—Ä–æ–≤ (–ü–£–ë–õ–ò–ß–ù–´–ô –∫–ª—é—á)",
          "file_name_pattern": "{network}.master.{idx}.dcert",
          "example": "stagenet.master.0.dcert",
          "location": [
            "/var/lib/ca/stagenet.master.N.dcert (–≤—Å–µ –ø—É–±–ª–∏—á–Ω—ã–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –Ω–∞ –≤—Å–µ—Ö –Ω–æ–¥–∞—Ö)",
            "/share/ca/stagenet.master.N.dcert (shared directory –¥–ª—è Docker)"
          ],
          "contains": "–¢–æ–ª—å–∫–æ –ø—É–±–ª–∏—á–Ω—ã–π –∫–ª—é—á (–±–µ–∑ private key)",
          "generation": "dap_cert_to_pkey() + dap_cert_from_pkey() –∏–∑ –ø—Ä–∏–≤–∞—Ç–Ω–æ–≥–æ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞",
          "usage": [
            "–ó–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è –≤ –ø–∞–º—è—Ç—å DAG-PoA/ESBocs –∫–æ–Ω—Å–µ–Ω—Å—É—Å–æ–º",
            "–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–µ–π –æ—Ç –¥—Ä—É–≥–∏—Ö –≤–∞–ª–∏–¥–∞—Ç–æ—Ä–æ–≤",
            "dap_cert_find_by_name('stagenet.master.0') –∏–ª–∏ 'stagenet.master.0.pub'"
          ],
          "distribution": "–í–°–ï –ø—É–±–ª–∏—á–Ω—ã–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –í–°–ï–• –≤–∞–ª–∏–¥–∞—Ç–æ—Ä–æ–≤ –∫–æ–ø–∏—Ä—É—é—Ç—Å—è –Ω–∞ –í–°–ï –Ω–æ–¥—ã",
          "critical_note": "–ë–ï–ó pvt. prefix! –§–∞–π–ª stagenet.master.N.dcert, –ù–ï pvt.stagenet.master.N.dcert"
        }
      },
      
      "certificate_loading_flow": {
        "step_1_generation": {
          "tool": "dap-cert –∏–ª–∏ cf-cert-generator",
          "creates": [
            "pvt.stagenet.master.N.dcert (–ø—Ä–∏–≤–∞—Ç–Ω—ã–π —Å private key)",
            "stagenet.master.N.dcert (–ø—É–±–ª–∏—á–Ω—ã–π, —ç–∫—Å–ø–æ—Ä—Ç –∏–∑ –ø—Ä–∏–≤–∞—Ç–Ω–æ–≥–æ)",
            "node-addr.dcert (–∞–¥—Ä–µ—Å–Ω—ã–π —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç)"
          ]
        },
        "step_2_distribution": {
          "private_certs": "–¢–æ–ª—å–∫–æ –Ω–∞ —Å–≤–æ—é –Ω–æ–¥—É: /var/lib/ca/pvt.stagenet.master.{own_idx}.dcert",
          "public_certs": "–ù–∞ –í–°–ï –Ω–æ–¥—ã: /var/lib/ca/stagenet.master.{0..N}.dcert",
          "node_addr": "–ù–∞ —Å–≤–æ—é –Ω–æ–¥—É: /var/lib/ca/node-addr.dcert"
        },
        "step_3_loading_into_memory": {
          "when": "–ü—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ chain –∏ consensus –º–æ–¥—É–ª–µ–π",
          "function": "dap_cert_folder_load() - —Å–∫–∞–Ω–∏—Ä—É–µ—Ç /var/lib/ca/",
          "registration": "dap_cert_add() —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –≤ –≥–ª–æ–±–∞–ª—å–Ω–æ–º —Ö—Ä–∞–Ω–∏–ª–∏—â–µ",
          "lookup": "dap_cert_find_by_name() –∏—â–µ—Ç –ø–æ –∏–º–µ–Ω–∏ –ë–ï–ó .dcert —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è"
        },
        "step_4_consensus_initialization": {
          "dag_poa": {
            "config_param": "auth_certs_prefix=stagenet.master",
            "cert_count": "auth_certs_number=3",
            "loading_code": "dap_chain_cs_dag_poa.c:385-394",
            "lookup_pattern": [
              "1. –ò—â–µ—Ç: stagenet.master.0 (–ë–ï–ó pvt.!)",
              "2. Fallback: stagenet.master.0.pub",
              "3. –û—à–∏–±–∫–∞ –µ—Å–ª–∏ –Ω–µ –Ω–∞—à—ë–ª"
            ],
            "result": "–ú–∞—Å—Å–∏–≤ l_poa_pvt->auth_certs[] —Å –ø—É–±–ª–∏—á–Ω—ã–º–∏ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞–º–∏",
            "signing": "–ò—Å–ø–æ–ª—å–∑—É–µ—Ç events-sign-cert –∏–∑ config (—Å pvt. prefix)"
          },
          "esbocs": {
            "config_param": "auth_certs_prefix=stagenet.master",
            "cert_count": "auth_certs_count=6",
            "loading_code": "dap_chain_cs_esbocs.c:327-340",
            "lookup_pattern": [
              "1. –ò—â–µ—Ç: stagenet.master.0",
              "2. Fallback: stagenet.master.0.pub",
              "3. –û—à–∏–±–∫–∞ –µ—Å–ª–∏ –Ω–µ –Ω–∞—à—ë–ª"
            ],
            "result": "–°–ø–∏—Å–æ–∫ emergency_validator_addrs –¥–ª—è –∫–æ–Ω—Å–µ–Ω—Å—É—Å–∞",
            "signing": "–ò—Å–ø–æ–ª—å–∑—É–µ—Ç blocks-sign-cert –∏–∑ config (—Å pvt. prefix)"
          }
        }
      },
      
      "naming_conventions": {
        "summary": "–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –º–∞—Ç—Ä–∏—Ü–∞ –∏–º–µ–Ω–æ–≤–∞–Ω–∏—è - –∫–æ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å pvt. prefix, –∫–æ–≥–¥–∞ –Ω–µ—Ç",
        
        "naming_matrix": {
          "filesystem": {
            "private_cert_file": "pvt.stagenet.master.0.dcert ‚Üê –° pvt. prefix!",
            "public_cert_file": "stagenet.master.0.dcert ‚Üê –ë–ï–ó pvt. prefix!",
            "node_addr_file": "node-addr.dcert ‚Üê —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ –∏–º—è"
          },
          "config_parameters": {
            "auth_certs_prefix": "stagenet.master ‚Üê –ë–ï–ó pvt.! (DAG-PoA –∏ ESBocs)",
            "blocks_sign_cert": "pvt.stagenet.master.N ‚Üê –° pvt.! (ESBocs signing)",
            "events_sign_cert": "pvt.stagenet.master.N ‚Üê –° pvt.! (DAG-PoA signing)"
          },
          "cli_commands": {
            "token_decl": "-certs pvt.stagenet.master.0 ‚Üê –° pvt.!",
            "token_emit": "-certs pvt.stagenet.master.0 ‚Üê –° pvt.!",
            "tx_create": "-cert pvt.stagenet.master.0 ‚Üê –° pvt.!",
            "validator_create": "-cert pvt.stagenet.master.0 ‚Üê –° pvt.!"
          },
          "sdk_internal": {
            "dap_cert_find_by_name": "stagenet.master.0 ‚Üê –ë–ï–ó pvt.! (–ø–æ–∏—Å–∫ –≤ –ø–∞–º—è—Ç–∏)",
            "cert_registration": "stagenet.master.0 ‚Üê –ë–ï–ó pvt.! (–∏–º—è –≤ –≥–ª–æ–±–∞–ª—å–Ω–æ–º —Ö—Ä–∞–Ω–∏–ª–∏—â–µ)",
            "fallback_with_pub": "stagenet.master.0.pub ‚Üê –µ—Å–ª–∏ –Ω–µ –Ω–∞—à—ë–ª –æ—Å–Ω–æ–≤–Ω–æ–µ –∏–º—è"
          }
        },
        
        "critical_rules": {
          "rule_1": "–§–∞–π–ª –ü–†–ò–í–ê–¢–ù–û–ì–û —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞ –í–°–ï–ì–î–ê —Å pvt.: pvt.{network}.master.{idx}.dcert",
          "rule_2": "–§–∞–π–ª –ü–£–ë–õ–ò–ß–ù–û–ì–û —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞ –í–°–ï–ì–î–ê –ë–ï–ó pvt.: {network}.master.{idx}.dcert",
          "rule_3": "Config –ø–∞—Ä–∞–º–µ—Ç—Ä—ã auth_certs_prefix –í–°–ï–ì–î–ê –ë–ï–ó pvt.: {network}.master",
          "rule_4": "Config –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –ø–æ–¥–ø–∏—Å–∏ –í–°–ï–ì–î–ê –° pvt.: blocks-sign-cert=pvt.{network}.master.{idx}",
          "rule_5": "CLI –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –ø–æ–¥–ø–∏—Å–∏ (-certs, -cert) –í–°–ï–ì–î–ê –° pvt.",
          "rule_6": "SDK –ø–æ–∏—Å–∫ –≤ –ø–∞–º—è—Ç–∏ (dap_cert_find_by_name) –í–°–ï–ì–î–ê –ë–ï–ó pvt.",
          "rule_7": "–ë–ï–ó .dcert —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è! dap_cert_find_by_name('stagenet.master.0'), –Ω–µ '.dcert'"
        },
        
        "common_mistakes": [
          "‚ùå auth_certs_prefix=pvt.stagenet.master ‚Üí –ö–æ–Ω—Å–µ–Ω—Å—É—Å –Ω–µ –Ω–∞–π–¥—ë—Ç —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã!",
          "‚ùå -certs stagenet.master.0 ‚Üí –ü–æ–¥–ø–∏—Å—å –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–µ—Ç (–Ω–µ—Ç –ø—Ä–∏–≤–∞—Ç–Ω–æ–≥–æ –∫–ª—é—á–∞)!",
          "‚ùå –¢–æ–ª—å–∫–æ pvt.stagenet.master.N.dcert –±–µ–∑ –ø—É–±–ª–∏—á–Ω—ã—Ö ‚Üí –ö–æ–Ω—Å–µ–Ω—Å—É—Å –Ω–µ –∑–∞–≥—Ä—É–∑–∏—Ç—Å—è!",
          "‚ùå –ü—É–±–ª–∏—á–Ω—ã–π —Ñ–∞–π–ª pvt.stagenet.master.0.dcert ‚Üí –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∏–º—è –¥–ª—è –ø—É–±–ª–∏—á–Ω–æ–≥–æ!",
          "‚ùå dap_cert_find_by_name('pvt.stagenet.master.0') ‚Üí –ù–µ –Ω–∞–π–¥—ë—Ç (pvt –Ω–µ –≤ –∏–º–µ–Ω–∏)!",
          "‚ùå dap_cert_find_by_name('stagenet.master.0.dcert') ‚Üí –ù–µ –Ω–∞–π–¥—ë—Ç (–±–µ–∑ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è)!"
        ],
        
        "verification_checklist": [
          "‚úì –§–∞–π–ª—ã pvt.stagenet.master.N.dcert —Å—É—â–µ—Å—Ç–≤—É—é—Ç –≤ /var/lib/ca/ (—Ç–æ–ª—å–∫–æ –Ω–∞ —Å–≤–æ–∏—Ö –Ω–æ–¥–∞—Ö)",
          "‚úì –§–∞–π–ª—ã stagenet.master.{0..N}.dcert —Å—É—â–µ—Å—Ç–≤—É—é—Ç –≤ /var/lib/ca/ (–Ω–∞ –í–°–ï–• –Ω–æ–¥–∞—Ö)",
          "‚úì –§–∞–π–ª—ã stagenet.master.{0..N}.dcert —Å—É—â–µ—Å—Ç–≤—É—é—Ç –≤ /share/ca/ (Docker shared)",
          "‚úì node-addr.dcert —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –Ω–∞ –∫–∞–∂–¥–æ–π –Ω–æ–¥–µ",
          "‚úì auth_certs_prefix –ë–ï–ó pvt. –≤ chain config",
          "‚úì blocks-sign-cert/events-sign-cert –° pvt. –≤ node config"
        ]
      },
      
      "validator_address_generation": {
        "description": "–ê–¥—Ä–µ—Å –≤–∞–ª–∏–¥–∞—Ç–æ—Ä–∞ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç—Å—è –∏–∑ node-addr —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞, –ù–ï –∏–∑ master —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞!",
        "critical_flow": [
          "1. node-addr.dcert –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç—Å—è –ø–µ—Ä–≤—ã–º",
          "2. dap_stream_node_addr_from_cert(node-addr) ‚Üí node address (–∫–æ—Ä–æ—Ç–∫–∏–π)",
          "3. Validator address = Node address (–æ–Ω–∏ –û–î–ò–ù–ê–ö–û–í–´–ï!)",
          "4. master.N.dcert –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¢–û–õ–¨–ö–û –¥–ª—è –ø–æ–¥–ø–∏—Å–∏, –ù–ï –¥–ª—è –∞–¥—Ä–µ—Å–∞!"
        ],
        "code_reference": "tests/stage-env/src/certs/cert-generator.c:378-393",
        "validation": "Validator address –¥–æ–ª–∂–µ–Ω —Å–æ–≤–ø–∞–¥–∞—Ç—å —Å –∞–¥—Ä–µ—Å–æ–º –∏–∑ node-addr.dcert"
      }
    },

    "consensus_detailed_architecture": {
      "description": "–î–µ—Ç–∞–ª—å–Ω–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ –∫–æ–Ω—Å–µ–Ω—Å—É—Å–æ–≤ Cellframe SDK",
      
      "dag_poa_consensus": {
        "full_name": "Directed Acyclic Graph - Proof of Authority",
        "file": "cellframe-sdk/modules/consensus/dag-poa/dap_chain_cs_dag_poa.c",
        "topology": "DAG (–Ω–µ blockchain!)",
        "use_case": "Zerochain - –±—ã—Å—Ç—Ä—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ (token_decl, emission, decree)",
        
        "initialization": {
          "config_section": "[dag-poa]",
          "required_params": {
            "auth_certs_prefix": "–ü—Ä–µ—Ñ–∏–∫—Å —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤ (–ë–ï–ó pvt.!): stagenet.master",
            "auth_certs_number": "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –Ω–æ–¥: 3",
            "auth_certs_number_verify": "–ú–∏–Ω–∏–º—É–º –ø–æ–¥–ø–∏—Å–µ–π: 2 (–æ–±—ã—á–Ω–æ N/2 + 1)",
            "auto_confirmation": "true - –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ events",
            "auto_round_complete": "true - –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞—É–Ω–¥–æ–≤"
          },
          "optional_params": {
            "events-sign-cert": "–ü—Ä–∏–≤–∞—Ç–Ω—ã–π —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –¥–ª—è –ø–æ–¥–ø–∏—Å–∏ (—Å pvt.!): pvt.stagenet.master.0",
            "confirmations_timeout": "–¢–∞–π–º–∞—É—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–π –≤ —Å–µ–∫—É–Ω–¥–∞—Ö: 15",
            "wait_sync_before_complete": "–û–∂–∏–¥–∞–Ω–∏–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏: 120"
          },
          "initialization_code": "s_callback_new() –≤ dap_chain_cs_dag_poa.c:343-402"
        },
        
        "certificate_loading": {
          "description": "–ü–æ—à–∞–≥–æ–≤–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ auth —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤ –≤ DAG-PoA –∫–æ–Ω—Å–µ–Ω—Å—É—Å",
          "code_location": "dap_chain_cs_dag_poa.c:385-394",
          
          "algorithm": [
            "char l_cert_name[MAX_PATH + 1];",
            "for (uint16_t i = 0; i < auth_certs_count; ++i) {",
            "  // –§–æ—Ä–º–∏—Ä—É–µ–º: auth_certs_prefix + '.' + i",
            "  l_pos = snprintf(l_cert_name, sizeof(l_cert_name), \"%s.%hu\", auth_certs_prefix, i);",
            "  // –†–µ–∑—É–ª—å—Ç–∞—Ç: 'stagenet.master.0'",
            "  ",
            "  // –ü–æ–∏—Å–∫ #1: –ò—â–µ–º –æ—Å–Ω–æ–≤–Ω–æ–µ –∏–º—è –ë–ï–ó .pub",
            "  if (!(auth_certs[i] = dap_cert_find_by_name(l_cert_name))) {",
            "    // –ü–æ–∏—Å–∫ #2: –î–æ–±–∞–≤–ª—è–µ–º .pub —Å—É—Ñ—Ñ–∏–∫—Å",
            "    dap_strncpy(l_cert_name + l_pos, '.pub', ...);",
            "    // –†–µ–∑—É–ª—å—Ç–∞—Ç: 'stagenet.master.0.pub'",
            "    ",
            "    if (!(auth_certs[i] = dap_cert_find_by_name(l_cert_name)))",
            "      return ERROR; // –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω!",
            "  }",
            "  log_it(L_NOTICE, 'Initialized auth cert \"%s\"', l_cert_name);",
            "}"
          ],
          
          "key_points": [
            "1. –ß–∏—Ç–∞–µ—Ç auth_certs_prefix –∏–∑ [dag-poa]: stagenet.master",
            "2. –î–ª—è –∫–∞–∂–¥–æ–≥–æ i –æ—Ç 0 –¥–æ auth_certs_number-1",
            "3. –§–æ—Ä–º–∏—Ä—É–µ—Ç –∏–º—è: stagenet.master.{i}",
            "4. –ò—â–µ—Ç –≤ –ø–∞–º—è—Ç–∏ —á–µ—Ä–µ–∑ dap_cert_find_by_name() - –ë–ï–ó pvt.!",
            "5. –ï—Å–ª–∏ –Ω–µ –Ω–∞—à—ë–ª: –ø—Ä–æ–±—É–µ—Ç —Å .pub —Å—É—Ñ—Ñ–∏–∫—Å–æ–º",
            "6. –ï—Å–ª–∏ –≤—Å—ë —Ä–∞–≤–Ω–æ –Ω–µ –Ω–∞—à—ë–ª: –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –æ—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏",
            "7. –°–æ—Ö—Ä–∞–Ω—è–µ—Ç —É–∫–∞–∑–∞—Ç–µ–ª—å –Ω–∞ cert –≤ –º–∞—Å—Å–∏–≤ auth_certs[]",
            "8. –õ–æ–≥–∏—Ä—É–µ—Ç —É—Å–ø–µ—Ö: 'Initialized auth cert \"stagenet.master.0\"'"
          ],
          
          "result": "–ú–∞—Å—Å–∏–≤ l_poa_pvt->auth_certs[i] —Å –ø—É–±–ª–∏—á–Ω—ã–º–∏ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞–º–∏ –¥–ª—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ –ø–æ–¥–ø–∏—Å–µ–π",
          
          "prerequisite": "–ü—É–±–ª–∏—á–Ω—ã–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã stagenet.master.N.dcert –î–û–õ–ñ–ù–´ –±—ã—Ç—å –∑–∞–≥—Ä—É–∂–µ–Ω—ã –≤ –ø–∞–º—è—Ç—å —á–µ—Ä–µ–∑ dap_cert_folder_load()"
        },
        
        "event_signing": {
          "who": "–¢–æ–ª—å–∫–æ ROOT –Ω–æ–¥—ã —Å NODE_ROLE_ROOT –∏–ª–∏ NODE_ROLE_ROOT_MASTER",
          "signing_certificate": "–ë–µ—Ä—ë—Ç—Å—è –∏–∑ node config: events-sign-cert=pvt.stagenet.master.0",
          
          "signing_flow": [
            "1. Datum –ø–æ–º–µ—â–∞–µ—Ç—Å—è –≤ mempool —á–µ—Ä–µ–∑ CLI (token_decl, token_emit)",
            "2. Root –Ω–æ–¥–∞ –≤—ã–∑—ã–≤–∞–µ—Ç mempool_proc -datum <hash>",
            "3. –°–æ–∑–¥–∞—ë—Ç—Å—è DAG event —Å —ç—Ç–∏–º datum",
            "4. Event –ø–æ–¥–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è –ü–†–ò–í–ê–¢–ù–´–ú –∫–ª—é—á–æ–º –∏–∑ pvt.stagenet.master.N.dcert",
            "5. Event —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—è–µ—Ç—Å—è –Ω–∞ –¥—Ä—É–≥–∏–µ root –Ω–æ–¥—ã —á–µ—Ä–µ–∑ P2P"
          ],
          
          "verification_flow": [
            "1. –î—Ä—É–≥–∞—è root –Ω–æ–¥–∞ –ø–æ–ª—É—á–∞–µ—Ç event",
            "2. –ò–∑–≤–ª–µ–∫–∞–µ—Ç –∏–Ω–¥–µ–∫—Å –ø–æ–¥–ø–∏—Å–∞–≤—à–µ–π –Ω–æ–¥—ã –∏–∑ event",
            "3. –ë–µ—Ä—ë—Ç –ü–£–ë–õ–ò–ß–ù–´–ô —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –∏–∑ auth_certs[idx] (stagenet.master.N)",
            "4. –í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä—É–µ—Ç –ø–æ–¥–ø–∏—Å—å –∏—Å–ø–æ–ª—å–∑—É—è –ø—É–±–ª–∏—á–Ω—ã–π –∫–ª—é—á",
            "5. –ï—Å–ª–∏ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è OK - –¥–æ–±–∞–≤–ª—è–µ—Ç —Å–≤–æ—é –ø–æ–¥–ø–∏—Å—å"
          ],
          
          "consensus_achievement": {
            "threshold": "auth_certs_number_verify –ø–æ–¥–ø–∏—Å–µ–π (–æ–±—ã—á–Ω–æ N/2 + 1)",
            "example": "–î–ª—è 3 root –Ω–æ–¥ –Ω—É–∂–Ω–æ –º–∏–Ω–∏–º—É–º 2 –ø–æ–¥–ø–∏—Å–∏",
            "when_reached": "Event —Å—á–∏—Ç–∞–µ—Ç—Å—è —Ñ–∏–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –∏ –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è –≤ DAG",
            "verification": "–ü—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ä–µ–∑: event list -chain zerochain"
          },
          
          "critical_asymmetry": {
            "signing": "–ò—Å–ø–æ–ª—å–∑—É–µ—Ç –ü–†–ò–í–ê–¢–ù–´–ô: pvt.stagenet.master.N.dcert (—Ç–æ–ª—å–∫–æ —É –ø–æ–¥–ø–∏—Å—ã–≤–∞—é—â–µ–π –Ω–æ–¥—ã)",
            "verification": "–ò—Å–ø–æ–ª—å–∑—É–µ—Ç –ü–£–ë–õ–ò–ß–ù–´–ô: stagenet.master.N.dcert (—É –≤—Å–µ—Ö –Ω–æ–¥ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏)",
            "why_it_works": "–ü—É–±–ª–∏—á–Ω—ã–π –∫–ª—é—á –º–æ–∂–µ—Ç –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å—å –æ—Ç –ø—Ä–∏–≤–∞—Ç–Ω–æ–≥–æ –∫–ª—é—á–∞"
          },
          
          "code_references": {
            "signing_check": "dap_chain_cs_dag_poa.c:405-412 - –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ä–æ–ª–∏ –Ω–æ–¥—ã",
            "event_creation": "s_callback_event_create() —Å–æ–∑–¥–∞—ë—Ç –∏ –ø–æ–¥–ø–∏—Å—ã–≤–∞–µ—Ç event",
            "event_verification": "s_callback_event_verify() –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–æ–¥–ø–∏—Å–∏"
          }
        },
        
        "node_roles_for_dag_poa": {
          "root_nodes": {
            "role": "NODE_ROLE_ROOT",
            "description": "–ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–µ –Ω–æ–¥—ã –¥–ª—è DAG-PoA",
            "responsibilities": [
              "–ü–æ–¥–ø–∏—Å—å events –ø—Ä–∏–≤–∞—Ç–Ω—ã–º —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–º",
              "–í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è events –æ—Ç –¥—Ä—É–≥–∏—Ö root –Ω–æ–¥",
              "–î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ –∫–æ–Ω—Å–µ–Ω—Å—É—Å–∞ (N/2 + 1 –ø–æ–¥–ø–∏—Å–µ–π)",
              "–§–∏–Ω–∞–ª–∏–∑–∞—Ü–∏—è events –≤ DAG"
            ],
            "certificates": [
              "pvt.stagenet.master.N.dcert - –¥–ª—è –ø–æ–¥–ø–∏—Å–∏ (—Å–≤–æ–π)",
              "stagenet.master.{0..N}.dcert - –¥–ª—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ (–≤—Å–µ)"
            ],
            "config": "node-role=root –≤ network config"
          },
          "full_nodes": {
            "role": "NODE_ROLE_FULL",
            "description": "–ü–æ–ª–Ω—ã–µ –Ω–æ–¥—ã –ë–ï–ó –ø—Ä–∞–≤–∞ –ø–æ–¥–ø–∏—Å–∏",
            "responsibilities": [
              "–ü–æ–ª—É—á–µ–Ω–∏–µ –∏ —Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤—Å–µ—Ö events",
              "–í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è –ø–æ–¥–ø–∏—Å–µ–π",
              "–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è DAG",
              "–ù–ï –ø–æ–¥–ø–∏—Å—ã–≤–∞—é—Ç events!"
            ],
            "certificates": [
              "stagenet.master.{0..N}.dcert - —Ç–æ–ª—å–∫–æ –¥–ª—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏",
              "–ù–ï–¢ –ø—Ä–∏–≤–∞—Ç–Ω—ã—Ö —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤!"
            ]
          }
        },
        
        "common_issues": {
          "certs_not_found": {
            "error": "Can't find cert \"stagenet.master.0\"",
            "causes": [
              "–ü—É–±–ª–∏—á–Ω—ã–π —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –Ω–µ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –≤ /var/lib/ca/",
              "–§–∞–π–ª –Ω–∞–∑–≤–∞–Ω —Å pvt. prefix: pvt.stagenet.master.0.dcert (–ù–ï–ü–†–ê–í–ò–õ–¨–ù–û –¥–ª—è –ø—É–±–ª–∏—á–Ω–æ–≥–æ!)",
              "auth_certs_prefix —É–∫–∞–∑–∞–Ω —Å pvt.: pvt.stagenet.master (–ù–ï–ü–†–ê–í–ò–õ–¨–ù–û!)"
            ],
            "solution": "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —á—Ç–æ —Ñ–∞–π–ª—ã stagenet.master.N.dcert (–ë–ï–ó pvt.) —Å—É—â–µ—Å—Ç–≤—É—é—Ç –≤ /var/lib/ca/"
          },
          "no_private_key": {
            "error": "Certificate \"stagenet.master.0\" has no private key",
            "cause": "–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø—É–±–ª–∏—á–Ω—ã–π —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç —Ç–∞–º –≥–¥–µ –Ω—É–∂–µ–Ω –ø—Ä–∏–≤–∞—Ç–Ω—ã–π",
            "solution": "–î–ª—è –ø–æ–¥–ø–∏—Å–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å pvt.stagenet.master.N, –Ω–µ stagenet.master.N"
          },
          "signing_failed": {
            "error": "Successful count of certificate signing is 0",
            "causes": [
              "CLI –∫–æ–º–∞–Ω–¥–∞ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –∏–º—è –ë–ï–ó pvt.: -certs stagenet.master.0",
              "–ü—Ä–∏–≤–∞—Ç–Ω—ã–π —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ /var/lib/ca/"
            ],
            "solution": "–í CLI –≤—Å–µ–≥–¥–∞ —É–∫–∞–∑—ã–≤–∞—Ç—å -certs pvt.stagenet.master.N"
          }
        }
      },
      
      "esbocs_consensus": {
        "full_name": "Enhanced Synchronous Byzantine-resilient Ordered Consensus System",
        "file": "cellframe-sdk/modules/consensus/esbocs/dap_chain_cs_esbocs.c",
        "topology": "Blockchain (–ª–∏–Ω–µ–π–Ω–∞—è —Ü–µ–ø—å –±–ª–æ–∫–æ–≤)",
        "use_case": "Main chain - —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏, anchors, —Å–ª–æ–∂–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏",
        
        "initialization": {
          "config_section": "[esbocs]",
          "required_params": {
            "auth_certs_prefix": "–ü—Ä–µ—Ñ–∏–∫—Å —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤ –≤–∞–ª–∏–¥–∞—Ç–æ—Ä–æ–≤: stagenet.master",
            "auth_certs_count": "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∞–ª–∏–¥–∞—Ç–æ—Ä–æ–≤: 6",
            "min_validators_count": "–ú–∏–Ω–∏–º—É–º –æ–Ω–ª–∞–π–Ω –≤–∞–ª–∏–¥–∞—Ç–æ—Ä–æ–≤ –¥–ª—è —Å—Ç–∞—Ä—Ç–∞: 4",
            "validators_addrs": "–°–ø–∏—Å–æ–∫ node addresses –≤–∞–ª–∏–¥–∞—Ç–æ—Ä–æ–≤ (–ù–ï validator addresses!)"
          },
          "timing_params": {
            "new_round_delay": "–ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É —Ä–∞—É–Ω–¥–∞–º–∏ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö: 10",
            "round_attempts_max": "–ú–∞–∫—Å–∏–º—É–º –ø–æ–ø—ã—Ç–æ–∫ –≤ —Ä–∞—É–Ω–¥–µ: 4",
            "round_attempt_timeout": "–¢–∞–π–º–∞—É—Ç –ø–æ–ø—ã—Ç–∫–∏ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö: 10"
          },
          "signing_params": {
            "blocks-sign-cert": "–ü—Ä–∏–≤–∞—Ç–Ω—ã–π —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –¥–ª—è –ø–æ–¥–ø–∏—Å–∏ –±–ª–æ–∫–æ–≤: pvt.stagenet.master.N"
          },
          "initialization_code": "dap_chain_cs_esbocs.c:316-351"
        },
        
        "certificate_loading": {
          "description": "–ó–∞–≥—Ä—É–∑–∫–∞ –≤–∞–ª–∏–¥–∞—Ç–æ—Ä—Å–∫–∏—Ö —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤ –≤ ESBocs –∫–æ–Ω—Å–µ–Ω—Å—É—Å",
          "code_location": "dap_chain_cs_esbocs.c:327-346",
          
          "algorithm": [
            "// –ê–Ω–∞–ª–æ–≥–∏—á–Ω–æ DAG-PoA, –Ω–æ —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–µ–π signing_addr",
            "for (i = 0; i < auth_certs_count; ++i) {",
            "  l_pos2 = snprintf(l_cert_name + l_dot_pos, 16, '.%u', i);",
            "  // –†–µ–∑—É–ª—å—Ç–∞—Ç: 'stagenet.master.0'",
            "  ",
            "  if (!(l_cert_cur = dap_cert_find_by_name(l_cert_name))) {",
            "    dap_strncpy(l_cert_name + l_dot_pos + l_pos2, '.pub', ...);",
            "    // Fallback: 'stagenet.master.0.pub'",
            "    if (!(l_cert_cur = dap_cert_find_by_name(l_cert_name))) {",
            "      log_it(L_ERROR, 'Can\\'t find cert \"%s\"', l_cert_name);",
            "      return ERROR;",
            "    }",
            "  }",
            "  ",
            "  // –í–ê–ñ–ù–û: –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º signing address –∏–∑ –ø—É–±–ª–∏—á–Ω–æ–≥–æ –∫–ª—é—á–∞",
            "  dap_chain_addr_fill_from_key(&l_signing_addr, l_cert_cur->enc_key, net_id);",
            "  ",
            "  // –î–æ–±–∞–≤–ª—è–µ–º –≤ emergency_validator_addrs –¥–ª—è –∫–æ–Ω—Å–µ–Ω—Å—É—Å–∞",
            "  l_esbocs_pvt->emergency_validator_addrs = ",
            "    dap_list_append(..., DAP_DUP(&l_signing_addr));",
            "  ",
            "  log_it(L_NOTICE, 'Initialized auth cert \"%s\"', l_cert_name);",
            "}"
          ],
          
          "key_differences_from_dag_poa": [
            "ESBocs –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç signing_addr (wallet-like –∞–¥—Ä–µ—Å)",
            "signing_addr –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –≤–∞–ª–∏–¥–∞—Ç–æ—Ä–∞ –≤ —Ä–∞—É–Ω–¥–∞—Ö",
            "–°–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –≤ emergency_validator_addrs —Å–ø–∏—Å–æ–∫",
            "–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è emergency consensus recovery"
          ],
          
          "critical": "–¢–∞–∫ –∂–µ –∏—â–µ—Ç –ü–£–ë–õ–ò–ß–ù–´–ï —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –ë–ï–ó pvt. prefix! –ê–ª–≥–æ—Ä–∏—Ç–º –∏–¥–µ–Ω—Ç–∏—á–µ–Ω DAG-PoA"
        },
        
        "validator_system": {
          "validator_orders": {
            "purpose": "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤–∞–ª–∏–¥–∞—Ç–æ—Ä–∞ –≤ —Å—Ç–µ–π–∫–∏–Ω–≥ —Å–∏—Å—Ç–µ–º–µ",
            "command": "srv_stake order create validator",
            "required_params": [
              "-net stagenet",
              "-value_min 100000000000000000000 (100 tokens)",
              "-value_max 10000000000000000000000 (10000 tokens)",
              "-tax 10.0 (–ø—Ä–æ—Ü–µ–Ω—Ç –∫–æ–º–∏—Å—Å–∏–∏)",
              "-cert pvt.stagenet.master.0 (–ü–†–ò–í–ê–¢–ù–´–ô —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç!)",
              "-node_addr 8598::57B2::FE83::5F16 (–∞–¥—Ä–µ—Å –∏–∑ node-addr.dcert)"
            ],
            "note": "–î–ª—è genesis –ù–ï —Ç—Ä–µ–±—É–µ—Ç—Å—è! Validator orders –Ω—É–∂–Ω—ã –¥–ª—è runtime —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏"
          },
          
          "master_nodes": {
            "role": "NODE_ROLE_MASTER",
            "description": "–í–∞–ª–∏–¥–∞—Ç–æ—Ä—ã –¥–ª—è ESBocs –∫–æ–Ω—Å–µ–Ω—Å—É—Å–∞ –Ω–∞ main chain",
            "responsibilities": [
              "–£—á–∞—Å—Ç–∏–µ –≤ —Ä–∞—É–Ω–¥–∞—Ö –∫–æ–Ω—Å–µ–Ω—Å—É—Å–∞",
              "–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –±–ª–æ–∫–æ–≤",
              "–ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –∑–∞ –±–ª–æ–∫–∏",
              "–ü–æ–¥–ø–∏—Å—å —Ñ–∏–Ω–∞–ª—å–Ω—ã—Ö –±–ª–æ–∫–æ–≤"
            ],
            "certificates": [
              "pvt.stagenet.master.N.dcert - –¥–ª—è –ø–æ–¥–ø–∏—Å–∏ –±–ª–æ–∫–æ–≤ (—Å–≤–æ–π)",
              "stagenet.master.{0..M}.dcert - –¥–ª—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ (–≤—Å–µ –≤–∞–ª–∏–¥–∞—Ç–æ—Ä—ã)"
            ],
            "config": "blocks-sign-cert=pvt.stagenet.master.N –≤ node config"
          }
        },
        
        "consensus_rounds": {
          "description": "ESBocs —Ä–∞–±–æ—Ç–∞–µ—Ç —á–µ—Ä–µ–∑ —Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–µ —Ä–∞—É–Ω–¥—ã –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è (Byzantine Fault Tolerant)",
          
          "round_phases": {
            "phase_1_propose": {
              "name": "PROPOSE",
              "description": "–û–¥–∏–Ω –≤–∞–ª–∏–¥–∞—Ç–æ—Ä –≤—ã–±–∏—Ä–∞–µ—Ç—Å—è proposer'–æ–º –∏ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –±–ª–æ–∫",
              "selection": "Round-robin –∏–ª–∏ stake-weighted –≤—ã–±–æ—Ä proposer'–∞",
              "action": "Proposer —Å–æ–±–∏—Ä–∞–µ—Ç datums –∏–∑ mempool –∏ —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç –±–ª–æ–∫",
              "broadcast": "–ë–ª–æ–∫ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –≤—Å–µ–º –≤–∞–ª–∏–¥–∞—Ç–æ—Ä–∞–º –¥–ª—è –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è"
            },
            "phase_2_prevote": {
              "name": "PREVOTE",
              "description": "–í–∞–ª–∏–¥–∞—Ç–æ—Ä—ã –≥–æ–ª–æ—Å—É—é—Ç –∑–∞ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã–π –±–ª–æ–∫",
              "validation": "–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ –±–ª–æ–∫–∞ (—Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏, –ø–æ–¥–ø–∏—Å–∏, balances)",
              "action": "–ï—Å–ª–∏ –±–ª–æ–∫ –≤–∞–ª–∏–¥–Ω—ã–π - –≤–∞–ª–∏–¥–∞—Ç–æ—Ä –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç PREVOTE —Å–æ–æ–±—â–µ–Ω–∏–µ",
              "threshold": "–ù—É–∂–Ω–æ 2/3+ –≥–æ–ª–æ—Å–æ–≤ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ PRECOMMIT"
            },
            "phase_3_precommit": {
              "name": "PRECOMMIT",
              "description": "–í–∞–ª–∏–¥–∞—Ç–æ—Ä—ã –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é—Ç –Ω–∞–º–µ—Ä–µ–Ω–∏–µ –∑–∞–∫–æ–º–º–∏—Ç–∏—Ç—å –±–ª–æ–∫",
              "action": "–ü–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è 2/3+ PREVOTE –≤–∞–ª–∏–¥–∞—Ç–æ—Ä—ã –æ—Ç–ø—Ä–∞–≤–ª—è—é—Ç PRECOMMIT",
              "threshold": "–ù—É–∂–Ω–æ 2/3+ PRECOMMIT –¥–ª—è —Ñ–∏–Ω–∞–ª–∏–∑–∞—Ü–∏–∏",
              "signing": "–í–∞–ª–∏–¥–∞—Ç–æ—Ä—ã –ø–æ–¥–ø–∏—Å—ã–≤–∞—é—Ç –±–ª–æ–∫ —Å–≤–æ–∏–º–∏ pvt.stagenet.master.N.dcert"
            },
            "phase_4_commit": {
              "name": "COMMIT",
              "description": "–ë–ª–æ–∫ —Ñ–∏–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è –∏ –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è –≤ blockchain",
              "action": "–ë–ª–æ–∫ —Å –ø–æ–¥–ø–∏—Å—è–º–∏ –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è –≤ chain",
              "propagation": "–ë–ª–æ–∫ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—è–µ—Ç—Å—è –Ω–∞ –≤—Å–µ –Ω–æ–¥—ã —Å–µ—Ç–∏ (–≤–∫–ª—é—á–∞—è full –Ω–æ–¥—ã)",
              "verification": "–ü—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ä–µ–∑: block list -chain main"
            }
          },
          
          "timing_parameters": {
            "new_round_delay": {
              "description": "–ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É —Ä–∞—É–Ω–¥–∞–º–∏ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö",
              "default": "10 —Å–µ–∫—É–Ω–¥",
              "critical": "new_round_delay=0 ‚Üí –∫–æ–Ω—Å–µ–Ω—Å—É—Å –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç!",
              "recommendation": "–ú–∏–Ω–∏–º—É–º 10 —Å–µ–∫—É–Ω–¥ –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ–π —Ä–∞–±–æ—Ç—ã"
            },
            "round_attempts_max": {
              "description": "–ú–∞–∫—Å–∏–º—É–º –ø–æ–ø—ã—Ç–æ–∫ –≤ –æ–¥–Ω–æ–º —Ä–∞—É–Ω–¥–µ",
              "default": "4",
              "reason": "–ï—Å–ª–∏ –∫–æ–Ω—Å–µ–Ω—Å—É—Å –Ω–µ –¥–æ—Å—Ç–∏–≥–Ω—É—Ç - –ø–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —Ä–∞—É–Ω–¥—É"
            },
            "round_attempt_timeout": {
              "description": "–¢–∞–π–º–∞—É—Ç –æ–¥–Ω–æ–π –ø–æ–ø—ã—Ç–∫–∏ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö",
              "default": "10",
              "formula": "–û–±—â–µ–µ –≤—Ä–µ–º—è —Ä–∞—É–Ω–¥–∞ = round_attempts_max * round_attempt_timeout"
            }
          },
          
          "validator_requirements": {
            "minimum_online": "min_validators_count –≤–∞–ª–∏–¥–∞—Ç–æ—Ä–æ–≤ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å ONLINE",
            "typical_value": "4 –∏–∑ 6 –≤–∞–ª–∏–¥–∞—Ç–æ—Ä–æ–≤",
            "network_state": "–í–∞–ª–∏–¥–∞—Ç–æ—Ä—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –≤ NET_STATE_ONLINE",
            "certificate": "blocks-sign-cert –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è –ø–æ–¥–ø–∏—Å–∏"
          },
          
          "consensus_failure_scenarios": {
            "not_enough_validators": "< min_validators_count –æ–Ω–ª–∞–π–Ω ‚Üí —Ä–∞—É–Ω–¥—ã –Ω–µ –∑–∞–ø—É—Å–∫–∞—é—Ç—Å—è",
            "network_partition": "–í–∞–ª–∏–¥–∞—Ç–æ—Ä—ã –Ω–µ –≤–∏–¥—è—Ç –¥—Ä—É–≥ –¥—Ä—É–≥–∞ ‚Üí —Ç–∞–π–º–∞—É—Ç —Ä–∞—É–Ω–¥–æ–≤",
            "no_sign_cert": "blocks-sign-cert –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω ‚Üí –≤–∞–ª–∏–¥–∞—Ç–æ—Ä –Ω–µ —É—á–∞—Å—Ç–≤—É–µ—Ç",
            "zero_round_delay": "new_round_delay=0 ‚Üí –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ–µ –æ–∂–∏–¥–∞–Ω–∏–µ –ø–µ—Ä–≤–æ–≥–æ –±–ª–æ–∫–∞"
          }
        },
        
        "common_issues": {
          "no_sign_cert": {
            "error": "No sign certificate provided for net stagenet, can't sign any blocks",
            "cause": "blocks-sign-cert –Ω–µ —É–∫–∞–∑–∞–Ω –≤ config –∏–ª–∏ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω",
            "solution": "–î–æ–±–∞–≤–∏—Ç—å –≤ node config: blocks-sign-cert=pvt.stagenet.master.N"
          },
          "insufficient_validators": {
            "error": "Not enough validators online",
            "cause": "–ú–µ–Ω—å—à–µ —á–µ–º min_validators_count –≤–∞–ª–∏–¥–∞—Ç–æ—Ä–æ–≤ –≤ —Å–µ—Ç–∏",
            "solution": "–£–≤–µ–ª–∏—á–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ online master –Ω–æ–¥ –∏–ª–∏ —É–º–µ–Ω—å—à–∏—Ç—å min_validators_count"
          },
          "round_timeout": {
            "error": "Round timeout exceeded",
            "cause": "new_round_delay=0 –∏–ª–∏ —Å–ª–∏—à–∫–æ–º –º–∞–ª–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ",
            "solution": "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å new_round_delay >= 10 —Å–µ–∫—É–Ω–¥"
          }
        }
      },
      
      "network_topology_and_certificates": {
        "description": "–í–∑–∞–∏–º–æ—Å–≤—è–∑—å —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤, —Ä–æ–ª–µ–π –Ω–æ–¥ –∏ –∫–æ–Ω—Å–µ–Ω—Å—É—Å–æ–≤",
        
        "typical_network_structure": {
          "root_nodes": {
            "count": "3 (–æ–±—ã—á–Ω–æ)",
            "role": "ROOT –∏–ª–∏ ROOT_MASTER",
            "consensus": "DAG-PoA –Ω–∞ zerochain",
            "certificates": {
              "node_identification": "node-addr.dcert ‚Üí 8598::57B2::FE83::5F16",
              "dag_poa_signing": "pvt.stagenet.master.{0,1,2}.dcert",
              "dag_poa_verification": "stagenet.master.{0,1,2}.dcert"
            },
            "responsibilities": [
              "Bootstrap —Å–µ—Ç–∏ —á–µ—Ä–µ–∑ seed_nodes_hosts",
              "–ü–æ–¥–ø–∏—Å—å events –Ω–∞ zerochain",
              "–û–±—Ä–∞–±–æ—Ç–∫–∞ token_decl, emission, decree",
              "–ö–æ–æ—Ä–¥–∏–Ω–∞—Ü–∏—è P2P —Ç–æ–ø–æ–ª–æ–≥–∏–∏"
            ]
          },
          
          "master_nodes": {
            "count": "3-6 (–æ–±—ã—á–Ω–æ)",
            "role": "MASTER",
            "consensus": "ESBocs –Ω–∞ main chain",
            "certificates": {
              "node_identification": "node-addr.dcert ‚Üí —Å–≤–æ–π –∞–¥—Ä–µ—Å",
              "esbocs_signing": "pvt.stagenet.master.{3,4,5,...}.dcert",
              "esbocs_verification": "stagenet.master.{0..N}.dcert (–í–°–ï –≤–∞–ª–∏–¥–∞—Ç–æ—Ä—ã)"
            },
            "responsibilities": [
              "–£—á–∞—Å—Ç–∏–µ –≤ ESBocs —Ä–∞—É–Ω–¥–∞—Ö",
              "–ü–æ–¥–ø–∏—Å—å –±–ª–æ–∫–æ–≤ –Ω–∞ main chain",
              "–û–±—Ä–∞–±–æ—Ç–∫–∞ transactions, anchors",
              "–í–∞–ª–∏–¥–∞—Ü–∏—è cross-chain –æ–ø–µ—Ä–∞—Ü–∏–π"
            ],
            "validator_registration": "srv_stake order create validator (–ù–ï —Ç—Ä–µ–±—É–µ—Ç—Å—è –¥–ª—è genesis!)"
          },
          
          "full_nodes": {
            "count": "–õ—é–±–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ",
            "role": "FULL",
            "consensus": "–ù–µ—Ç (—Ç–æ–ª—å–∫–æ –ø–æ–ª—É—á–µ–Ω–∏–µ –∏ —Ö—Ä–∞–Ω–µ–Ω–∏–µ)",
            "certificates": {
              "node_identification": "node-addr.dcert",
              "verification_only": "stagenet.master.{0..N}.dcert (–¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–µ–π)"
            },
            "responsibilities": [
              "–•—Ä–∞–Ω–µ–Ω–∏–µ –ø–æ–ª–Ω–æ–π –∫–æ–ø–∏–∏ –≤—Å–µ—Ö chains",
              "–í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è –ø–æ–¥–ø–∏—Å–µ–π",
              "–û–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–æ–≤ (RPC, HTTP)",
              "–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å —Å–µ—Ç—å—é"
            ]
          }
        },
        
        "certificate_distribution_matrix": {
          "node_addr_dcert": "–ö–∞–∂–¥–∞—è –Ω–æ–¥–∞ –∏–º–µ–µ—Ç –¢–û–õ–¨–ö–û —Å–≤–æ–π ‚Üí /var/lib/ca/node-addr.dcert",
          "pvt_master_N_dcert": "–ö–∞–∂–¥–∞—è –Ω–æ–¥–∞ –∏–º–µ–µ—Ç –¢–û–õ–¨–ö–û —Å–≤–æ–π ‚Üí /var/lib/ca/pvt.stagenet.master.N.dcert",
          "public_master_dcerts": "–í–°–ï –Ω–æ–¥—ã –∏–º–µ—é—Ç –í–°–ï –ø—É–±–ª–∏—á–Ω—ã–µ ‚Üí /var/lib/ca/stagenet.master.{0..M}.dcert",
          "shared_directory": "/share/ca/ –≤ Docker —Å–æ–¥–µ—Ä–∂–∏—Ç –í–°–ï –ø—É–±–ª–∏—á–Ω—ã–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –¥–ª—è –≤—Å–µ—Ö –Ω–æ–¥"
        },
        
        "config_files_relationship": {
          "zerochain_cfg": {
            "consensus": "dag_poa",
            "auth_certs_prefix": "stagenet.master (–ë–ï–ó pvt.!)",
            "auth_certs_number": "3 (–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ root –Ω–æ–¥)",
            "who_uses": "–í—Å–µ –Ω–æ–¥—ã –≤ —Å–µ—Ç–∏ –¥–ª—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ events",
            "signing_cert": "events-sign-cert=pvt.stagenet.master.N (—Ç–æ–ª—å–∫–æ –Ω–∞ root –Ω–æ–¥–∞—Ö!)"
          },
          "main_cfg": {
            "consensus": "esbocs",
            "auth_certs_prefix": "stagenet.master (–ë–ï–ó pvt.!)",
            "auth_certs_count": "6 (–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ master –Ω–æ–¥)",
            "validators_addrs": "–°–ø–∏—Å–æ–∫ node addresses –º–∞—Å—Ç–µ—Ä –Ω–æ–¥",
            "who_uses": "–í—Å–µ –Ω–æ–¥—ã –¥–ª—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ –±–ª–æ–∫–æ–≤",
            "signing_cert": "blocks-sign-cert=pvt.stagenet.master.N (—Ç–æ–ª—å–∫–æ –Ω–∞ master –Ω–æ–¥–∞—Ö!)"
          },
          "node_config": {
            "location": "/opt/cellframe-node/etc/node_N.cfg",
            "—Å–æ–¥–µ—Ä–∂–∏—Ç": [
              "node-role=root/master/full",
              "blocks-sign-cert=pvt.stagenet.master.N (–¥–ª—è master)",
              "events-sign-cert=pvt.stagenet.master.N (–¥–ª—è root)"
            ]
          }
        }
      },
      
      "genesis_block_mechanics": {
        "description": "–ú–µ—Ö–∞–Ω–∏–∑–º —Å–æ–∑–¥–∞–Ω–∏—è –∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ genesis –±–ª–æ–∫–∞ –≤ ESBocs blockchain",
        
        "configuration_parameters": {
          "is_static_genesis_block": {
            "location": "chain_config [blocks] section",
            "type": "boolean",
            "purpose": "–í–∫–ª—é—á–∞–µ—Ç —Å—Ç—Ä–æ–≥—É—é –ø—Ä–æ–≤–µ—Ä–∫—É genesis –±–ª–æ–∫–∞ –ø–æ hash",
            "default": "false",
            "recommendation": "true –¥–ª—è production —Å–µ—Ç–µ–π"
          },
          "static_genesis_block": {
            "location": "chain_config [blocks] section",
            "type": "hash string (0x...)",
            "purpose": "–û–∂–∏–¥–∞–µ–º—ã–π hash –ø–µ—Ä–≤–æ–≥–æ (genesis) –±–ª–æ–∫–∞",
            "validation": "–ï—Å–ª–∏ is_static_genesis_block=true, –ø–µ—Ä–≤—ã–π –±–ª–æ–∫ –î–û–õ–ñ–ï–ù –∏–º–µ—Ç—å —ç—Ç–æ—Ç hash",
            "example": "static_genesis_block=0xFBBC12E641C77E03BF8F5CBADBBBD653D65D3465BAEB73FC85516D2E98C48BDC"
          },
          "genesis_block": {
            "location": "chain_config [blocks] section (deprecated)",
            "type": "hash string",
            "purpose": "–°—Ç–∞—Ä—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏",
            "note": "–ü—Ä–µ–¥–ø–æ—á–∏—Ç–∞–π—Ç–µ static_genesis_block"
          }
        },
        
        "block_creation_flow": {
          "function": "dap_chain_block_new(dap_chain_hash_fast_t *a_prev_block, size_t *a_block_size)",
          "code_location": "cellframe-sdk/modules/type/blocks/dap_chain_block.c:62-95",
          
          "algorithm": [
            "if (a_prev_block) {",
            "  // –û–±—ã—á–Ω—ã–π –±–ª–æ–∫ - –¥–æ–±–∞–≤–ª—è–µ–º META_PREV —Å hash –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ",
            "  dap_chain_block_meta_add(&block, ..., DAP_CHAIN_BLOCK_META_PREV, a_prev_block, ...);",
            "} else {",
            "  // Genesis –±–ª–æ–∫ - –¥–æ–±–∞–≤–ª—è–µ–º META_GENESIS (–ø—É—Å—Ç–æ–π meta)",
            "  dap_chain_block_meta_add(&block, ..., DAP_CHAIN_BLOCK_META_GENESIS, NULL, 0);",
            "  log_it(L_INFO, 'Genesis block produced');",
            "}"
          ],
          
          "key_point": "Genesis –±–ª–æ–∫ —Å–æ–∑–¥–∞—ë—Ç—Å—è –∫–æ–≥–¥–∞ a_prev_block == NULL (–Ω–µ—Ç –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –±–ª–æ–∫–∞)"
        },
        
        "genesis_block_acceptance": {
          "description": "–í–∞–ª–∏–¥–∞—Ü–∏—è genesis –±–ª–æ–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –≤ chain",
          "code_location": "cellframe-sdk/modules/type/blocks/dap_chain_cs_blocks.c:2147-2169",
          
          "validation_logic": [
            "// –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –±–ª–æ–∫ –∏–º–µ–µ—Ç META_GENESIS",
            "if (dap_chain_block_meta_get(block, ..., DAP_CHAIN_BLOCK_META_GENESIS)) {",
            "  ",
            "  if (s_seed_mode) {",
            "    // Seed mode - –ø—Ä–∏–Ω–∏–º–∞–µ–º –ª—é–±–æ–π genesis",
            "    log_it(L_NOTICE, 'Accepting new genesis block %s', hash);",
            "    return ATOM_ACCEPT;",
            "  }",
            "  ",
            "  // Production mode - –ø—Ä–æ–≤–µ—Ä—è–µ–º hash",
            "  if (dap_hash_fast_compare(&block_hash, &static_genesis_block_hash) &&",
            "      !dap_hash_fast_is_blank(&block_hash)) {",
            "    log_it(L_NOTICE, 'Accepting static genesis block %s', hash);",
            "    return ATOM_ACCEPT;",
            "  }",
            "  ",
            "  // Hash –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç!",
            "  log_it(L_WARNING, 'Can\\'t accept genesis block: hash mismatch');",
            "  return ATOM_REJECT;  // ‚Üê –ö–†–ò–¢–ò–ß–ù–û!",
            "}"
          ],
          
          "critical_rules": [
            "1. –ï—Å–ª–∏ is_static_genesis_block=true –ò hash –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç ‚Üí –ë–õ–û–ö –û–¢–ö–õ–û–ù–Ø–ï–¢–°–Ø!",
            "2. Seed mode (s_seed_mode=true) –û–ë–•–û–î–ò–¢ –ø—Ä–æ–≤–µ—Ä–∫—É hash",
            "3. –ï—Å–ª–∏ static_genesis_block –ø—É—Å—Ç–æ–π (blank) ‚Üí genesis –±–ª–æ–∫ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç—Å—è"
          ]
        },
        
        "esbocs_block_creation": {
          "description": "–°–æ–∑–¥–∞–Ω–∏–µ –±–ª–æ–∫–æ–≤ —á–µ—Ä–µ–∑ ESBocs –∫–æ–Ω—Å–µ–Ω—Å—É—Å",
          "code_location": "cellframe-sdk/modules/consensus/esbocs/dap_chain_cs_esbocs.c:1702-1723",
          
          "empty_block_creation": [
            "// ESBocs –º–æ–∂–µ—Ç —Å–æ–∑–¥–∞—Ç—å –ø—É—Å—Ç–æ–π –±–ª–æ–∫ –µ—Å–ª–∏ –Ω–µ—Ç datums",
            "if (!candidate && empty_block_generation) {",
            "  if (!blocks->callback_block_create) {",
            "    log_it(L_ERROR, 'Not found chain callback for block creation');",
            "    return;",
            "  }",
            "  candidate = blocks->callback_block_create(blocks, &candidate_size);",
            "}"
          ],
          
          "callback_block_create": {
            "function": "s_block_create() –≤ dap_chain_cs_blocks.c:2693-2710",
            "logic": [
              "dap_chain_block_cache_t *last_block = HASH_LAST(blocks);",
              "if (last_block) {",
              "  // –ï—Å—Ç—å –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –±–ª–æ–∫–∏ - —Å–æ–∑–¥–∞—ë–º –æ–±—ã—á–Ω—ã–π",
              "  return dap_chain_block_new(&last_block->block_hash, &size);",
              "}",
              "// –ù–µ—Ç –±–ª–æ–∫–æ–≤ - genesis block can't be blank",
              "return NULL;  // ‚Üê –ù–ï —Å–æ–∑–¥–∞—ë—Ç genesis –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏!"
            ],
            "critical_note": "Genesis –±–ª–æ–∫ –ù–ï —Å–æ–∑–¥–∞—ë—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —á–µ—Ä–µ–∑ callback_block_create!"
          }
        },
        
        "genesis_initialization_strategies": {
          "strategy_1_manual_genesis": {
            "name": "–†—É—á–Ω–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ genesis –±–ª–æ–∫–∞",
            "steps": [
              "1. –ó–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ç—å –ë–ï–ó is_static_genesis_block –∏–ª–∏ –≤ seed mode",
              "2. –°–æ–∑–¥–∞—Ç—å –ø–µ—Ä–≤—ã–π datum (transaction, anchor, etc)",
              "3. ESBocs –∫–æ–Ω—Å–µ–Ω—Å—É—Å —Å–æ–∑–¥–∞—Å—Ç –ø–µ—Ä–≤—ã–π –±–ª–æ–∫ (genesis)",
              "4. –ü–æ–ª—É—á–∏—Ç—å hash: block list -chain main -first 1",
              "5. –ó–∞–ø–∏—Å–∞—Ç—å hash –≤ static_genesis_block –≤ –∫–æ–Ω—Ñ–∏–≥–µ",
              "6. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ç—å —Å is_static_genesis_block=true"
            ],
            "use_case": "–ù–æ–≤–∞—è —Å–µ—Ç—å, genesis hash –∑–∞—Ä–∞–Ω–µ–µ –Ω–µ–∏–∑–≤–µ—Å—Ç–µ–Ω"
          },
          
          "strategy_2_hardcoded_genesis": {
            "name": "–ñ—ë—Å—Ç–∫–æ –∑–∞–¥–∞–Ω–Ω—ã–π genesis –±–ª–æ–∫",
            "steps": [
              "1. –ó–∞—Ä–∞–Ω–µ–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å genesis –±–ª–æ–∫ –≤ dev —Å—Ä–µ–¥–µ",
              "2. –ü–æ–ª—É—á–∏—Ç—å –µ–≥–æ hash",
              "3. –ü—Ä–æ–ø–∏—Å–∞—Ç—å hash –≤ static_genesis_block –¥–ª—è –≤—Å–µ—Ö –Ω–æ–¥",
              "4. –ó–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ç—å —Å is_static_genesis_block=true",
              "5. –ü–µ—Ä–≤–∞—è –Ω–æ–¥–∞ —Å–æ–∑–¥–∞—ë—Ç genesis –±–ª–æ–∫",
              "6. –î—Ä—É–≥–∏–µ –Ω–æ–¥—ã –≤–∞–ª–∏–¥–∏—Ä—É—é—Ç –µ–≥–æ –ø–æ hash"
            ],
            "use_case": "Production —Å–µ—Ç–∏, genesis –∏–∑–≤–µ—Å—Ç–µ–Ω –∑–∞—Ä–∞–Ω–µ–µ",
            "security": "–ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç –∏–¥–µ–Ω—Ç–∏—á–Ω–æ—Å—Ç—å genesis –Ω–∞ –≤—Å–µ—Ö –Ω–æ–¥–∞—Ö"
          },
          
          "strategy_3_dynamic_genesis": {
            "name": "–î–∏–Ω–∞–º–∏—á–µ—Å–∫–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è genesis –ø—Ä–∏ –ø–µ—Ä–≤–æ–º datum",
            "steps": [
              "1. –ó–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ç—å –ë–ï–ó static_genesis_block",
              "2. –°–æ–∑–¥–∞—Ç—å –ø–µ—Ä–≤—ã–π datum (token_decl, emission, tx)",
              "3. Datum –ø–æ–ø–∞–¥—ë—Ç –≤ mempool",
              "4. ESBocs –∫–æ–Ω—Å–µ–Ω—Å—É—Å —Å–æ–±–µ—Ä—ë—Ç –µ–≥–æ –≤ –ø–µ—Ä–≤—ã–π –±–ª–æ–∫",
              "5. Genesis –±–ª–æ–∫ —Å–æ–∑–¥–∞—ë—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å datum",
              "6. –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ: –ø–æ–ª—É—á–∏—Ç—å hash –∏ –∑–∞–ø–∏—Å–∞—Ç—å –≤ –∫–æ–Ω—Ñ–∏–≥ –¥–ª—è –±—É–¥—É—â–∏—Ö –Ω–æ–¥"
            ],
            "use_case": "Stagenet, testnet –≥–¥–µ genesis –º–æ–∂–Ω–æ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å",
            "note": "–ü–µ—Ä–≤—ã–π –±–ª–æ–∫ –í–°–ï–ì–î–ê –±—É–¥–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω datum"
          }
        },
        
        "common_issues": {
          "issue_1_genesis_rejected": {
            "symptom": "Can't accept genesis block: hash mismatch with static genesis block",
            "cause": "static_genesis_block –≤ –∫–æ–Ω—Ñ–∏–≥–µ –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–∏–º hash",
            "solutions": [
              "1. –ü–æ–ª—É—á–∏—Ç—å —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–∏–π hash: block list -chain main -first 1",
              "2. –û–±–Ω–æ–≤–∏—Ç—å static_genesis_block –≤ –∫–æ–Ω—Ñ–∏–≥–µ",
              "3. –ò–ª–∏ –æ—Ç–∫–ª—é—á–∏—Ç—å is_static_genesis_block",
              "4. –ò–ª–∏ –≤–∫–ª—é—á–∏—Ç—å seed mode (–Ω–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –¥–ª—è production)"
            ]
          },
          
          "issue_2_no_genesis_created": {
            "symptom": "Main chain –ø—É—Å—Ç–æ–π, genesis –±–ª–æ–∫ –Ω–µ —Å–æ–∑–¥–∞—ë—Ç—Å—è",
            "cause": "–ù–µ—Ç datums –¥–ª—è –≤–∫–ª—é—á–µ–Ω–∏—è –≤ –ø–µ—Ä–≤—ã–π –±–ª–æ–∫",
            "explanation": "ESBocs –ù–ï —Å–æ–∑–¥–∞—ë—Ç –ø—É—Å—Ç—ã–µ genesis –±–ª–æ–∫–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏",
            "solutions": [
              "1. –°–æ–∑–¥–∞—Ç—å —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω datum (transaction, anchor)",
              "2. Datum –ø–æ–ø–∞–¥—ë—Ç –≤ mempool",
              "3. ESBocs —Å–æ–±–µ—Ä—ë—Ç –µ–≥–æ –≤ –ø–µ—Ä–≤—ã–π –±–ª–æ–∫ (genesis)",
              "4. –ò–ª–∏ –≤–∫–ª—é—á–∏—Ç—å empty_block_generation –≤ –∫–æ–Ω—Ñ–∏–≥–µ (–µ—Å–ª–∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è)"
            ]
          },
          
          "issue_3_cross_chain_tx_fails": {
            "symptom": "Specified emission not found –ø—Ä–∏ tx_create –ë–ï–ó -chain",
            "cause": "Emission –Ω–∞ zerochain, SDK –ø—ã—Ç–∞–µ—Ç—Å—è —Å–æ–∑–¥–∞—Ç—å TX –Ω–∞ main (–ø–æ default_datum_types), –Ω–æ main chain –ø—É—Å—Ç–æ–π (–Ω–µ—Ç genesis)",
            "root_cause": "Main chain –Ω–µ –∏–º–µ–µ—Ç genesis –±–ª–æ–∫–∞ ‚Üí –Ω–µ –º–æ–∂–µ—Ç –ø—Ä–∏–Ω–∏–º–∞—Ç—å datums",
            "solution": "–°–Ω–∞—á–∞–ª–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å main chain —á–µ—Ä–µ–∑ anchor/tx –Ω–∞ —Å–∞–º–æ–º main, –∑–∞—Ç–µ–º –¥–µ–ª–∞—Ç—å cross-chain –æ–ø–µ—Ä–∞—Ü–∏–∏"
          }
        },
        
        "best_practices": {
          "production_networks": [
            "‚úì –í–°–ï–ì–î–ê –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å is_static_genesis_block=true",
            "‚úì –ó–∞—Ä–∞–Ω–µ–µ –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å genesis –≤ dev —Å—Ä–µ–¥–µ",
            "‚úì –†–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—è—Ç—å static_genesis_block hash –Ω–∞ –≤—Å–µ –Ω–æ–¥—ã",
            "‚úì –ü—Ä–æ–≤–µ—Ä—è—Ç—å hash genesis –ø—Ä–∏ bootstrap –Ω–æ–≤—ã—Ö –Ω–æ–¥"
          ],
          "test_networks": [
            "‚úì –ú–æ–∂–Ω–æ –æ—Ç–∫–ª—é—á–∏—Ç—å is_static_genesis_block",
            "‚úì –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å genesis –ø—Ä–∏ –ø–µ—Ä–≤–æ–º datum",
            "‚úì –°–æ—Ö—Ä–∞–Ω—è—Ç—å hash genesis –¥–ª—è –∫–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç–∏ snapshots"
          ],
          "development": [
            "‚úì Seed mode –¥–ª—è —Å–≤–æ–±–æ–¥–Ω–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ genesis",
            "‚úì –ü–æ–ª—É—á–∞—Ç—å hash –ø–æ—Å–ª–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–ª—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏",
            "‚úì –¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –≤–∞–ª–∏–¥–∞—Ü–∏—é static_genesis_block –ø–µ—Ä–µ–¥ production"
          ]
        }
      },
      
      "datum_processing_by_consensus": {
        "dag_poa_datums": {
          "types": ["token", "emission", "decree"],
          "chain": "zerochain (DAG-PoA)",
          "processed_by": "ROOT –Ω–æ–¥—ã (3 —à—Ç—É–∫–∏ –æ–±—ã—á–Ω–æ)",
          
          "complete_flow": [
            "1. Datum —Å–æ–∑–¥–∞—ë—Ç—Å—è —á–µ—Ä–µ–∑ CLI (token_decl, token_emit, decree_create)",
            "2. CLI –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç datum –≤ mempool —á–µ—Ä–µ–∑ RPC/HTTP API",
            "3. Datum –ø–æ–ø–∞–¥–∞–µ—Ç –≤ mempool: stagenet.chain-zerochain.mempool (GDB –≥—Ä—É–ø–ø–∞)",
            "4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è: mempool_list -chain zerochain",
            "5. Root –Ω–æ–¥–∞ #1 –≤—ã–∑—ã–≤–∞–µ—Ç: mempool_proc -datum <hash> -chain zerochain",
            "6. mempool_proc —Å–æ–∑–¥–∞—ë—Ç DAG event —Å —ç—Ç–∏–º datum",
            "7. Event –ø–æ–¥–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è –ü–†–ò–í–ê–¢–ù–´–ú –∫–ª—é—á–æ–º: pvt.stagenet.master.0.dcert",
            "8. Event —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—è–µ—Ç—Å—è –Ω–∞ –¥—Ä—É–≥–∏–µ root –Ω–æ–¥—ã (node2, node3) —á–µ—Ä–µ–∑ P2P",
            "9. Root –Ω–æ–¥—ã #2 –∏ #3 –¢–û–ñ–ï –≤—ã–∑—ã–≤–∞—é—Ç mempool_proc –¥–ª—è —ç—Ç–æ–≥–æ datum",
            "10. –ö–∞–∂–¥–∞—è root –Ω–æ–¥–∞ –¥–æ–±–∞–≤–ª—è–µ—Ç –°–í–û–Æ –ø–æ–¥–ø–∏—Å—å –∫ event",
            "11. –î—Ä—É–≥–∏–µ root –Ω–æ–¥—ã –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä—É—é—Ç –ø–æ–¥–ø–∏—Å–∏ –∏—Å–ø–æ–ª—å–∑—É—è –ü–£–ë–õ–ò–ß–ù–´–ï —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã",
            "12. –ö–æ–≥–¥–∞ —Å–æ–±—Ä–∞–Ω–æ auth_certs_number_verify –ø–æ–¥–ø–∏—Å–µ–π (2 –∏–∑ 3) - event —Ñ–∏–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è",
            "13. Event –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è –≤ DAG —Å—Ç—Ä—É–∫—Ç—É—Ä—É (–ù–ï –≤ blockchain!)",
            "14. Datum —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è —á–∞—Å—Ç—å—é —Ä–∞—Å–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ–≥–æ —Ä–µ–µ—Å—Ç—Ä–∞",
            "15. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∏–Ω–∞–ª–∏–∑–∞—Ü–∏–∏: event list -chain zerochain -last 10"
          ],
          
          "mempool_proc_command": {
            "purpose": "–¢—Ä–∏–≥–≥–µ—Ä –æ–±—Ä–∞–±–æ—Ç–∫–∏ datum –≤ mempool –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è event",
            "syntax": "mempool_proc -datum <hash> -net <network> -chain <chain>",
            "who_executes": "–¢–æ–ª—å–∫–æ ROOT –Ω–æ–¥—ã! Full –Ω–æ–¥—ã –Ω–µ –º–æ–≥—É—Ç –≤—ã–∑—ã–≤–∞—Ç—å",
            "what_it_does": [
              "–ò–∑–≤–ª–µ–∫–∞–µ—Ç datum –∏–∑ mempool",
              "–°–æ–∑–¥–∞—ë—Ç DAG event",
              "–ü–æ–¥–ø–∏—Å—ã–≤–∞–µ—Ç event –ø—Ä–∏–≤–∞—Ç–Ω—ã–º –∫–ª—é—á–æ–º –Ω–æ–¥—ã",
              "–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç event –¥—Ä—É–≥–∏–º root –Ω–æ–¥–∞–º –¥–ª—è —Å–±–æ—Ä–∞ –ø–æ–¥–ø–∏—Å–µ–π"
            ],
            "frequency": "–í—ã–∑—ã–≤–∞–µ—Ç—Å—è –Ω–∞ –ö–ê–ñ–î–û–ô root –Ω–æ–¥–µ –¥–ª—è –ö–ê–ñ–î–û–ì–û datum",
            "timing": "–û–±—ã—á–Ω–æ —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –ø–æ—è–≤–ª–µ–Ω–∏—è datum –≤ mempool (< 1 —Å–µ–∫—É–Ω–¥–∞)"
          },
          
          "dag_vs_blockchain": {
            "dag_structure": "–°–æ–±—ã—Ç–∏—è (events) –æ–±—Ä–∞–∑—É—é—Ç –≥—Ä–∞—Ñ —Å –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–º–∏ —Ä–æ–¥–∏—Ç–µ–ª—è–º–∏",
            "no_blocks": "DAG-PoA –ù–ï —Å–æ–∑–¥–∞—ë—Ç blocks! –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è event list, –ù–ï block list!",
            "finalization": "Event —Ñ–∏–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è –∫–æ–≥–¥–∞ —Å–æ–±—Ä–∞–Ω–æ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø–æ–¥–ø–∏—Å–µ–π",
            "verification_command": "event list -chain zerochain (block list –≤–µ—Ä–Ω—ë—Ç –æ—à–∏–±–∫—É!)",
            "error_if_block_list": "Type of chain zerochain is not block. This chain with type dag_poa is not supported by this command"
          },
          
          "performance": {
            "speed": "–û—á–µ–Ω—å –±—ã—Å—Ç—Ä–æ - —Å–µ–∫—É–Ω–¥—ã (–Ω–µ—Ç –∑–∞–¥–µ—Ä–∂–∫–∏ –º–µ–∂–¥—É events)",
            "throughput": "–í—ã—Å–æ–∫–∏–π - –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ events –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ",
            "latency": "–ù–∏–∑–∫–∞—è - —Ç–æ–ª—å–∫–æ –≤—Ä–µ–º—è P2P —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è + –ø–æ–¥–ø–∏—Å–∏",
            "comparison": "–í 10+ —Ä–∞–∑ –±—ã—Å—Ç—Ä–µ–µ —á–µ–º ESBocs –±–ª–æ–∫–∏"
          }
        },
        
        "esbocs_datums": {
          "types": ["transaction", "anchor", "ca", "sign"],
          "chain": "main (ESBocs)",
          "flow": [
            "1. Datum —Å–æ–∑–¥–∞—ë—Ç—Å—è (tx_create)",
            "2. –ü–æ–ø–∞–¥–∞–µ—Ç –≤ mempool: stagenet.chain-main.mempool",
            "3. –û–∂–∏–¥–∞–µ—Ç –Ω–æ–≤–æ–≥–æ —Ä–∞—É–Ω–¥–∞ (new_round_delay)",
            "4. –û–¥–∏–Ω –∏–∑ master –≤–∞–ª–∏–¥–∞—Ç–æ—Ä–æ–≤ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –±–ª–æ–∫ —Å datum",
            "5. –†–∞—É–Ω–¥ –∫–æ–Ω—Å–µ–Ω—Å—É—Å–∞: PROPOSE ‚Üí PREVOTE ‚Üí PRECOMMIT",
            "6. –ë–ª–æ–∫ –ø–æ–¥–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è –≤–∞–ª–∏–¥–∞—Ç–æ—Ä–∞–º–∏: pvt.stagenet.master.N.dcert",
            "7. –ü—Ä–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–∏ –∫–æ–Ω—Å–µ–Ω—Å—É—Å–∞ –±–ª–æ–∫ —Ñ–∏–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è",
            "8. –ë–ª–æ–∫ –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è –≤ blockchain",
            "9. –ü—Ä–æ–≤–µ—Ä–∫–∞: block list -chain main"
          ],
          "timing": "–ó–∞–≤–∏—Å–∏—Ç –æ—Ç new_round_delay (–º–∏–Ω–∏–º—É–º 10 —Å–µ–∫—É–Ω–¥ –º–µ–∂–¥—É –±–ª–æ–∫–∞–º–∏)"
        },
        
        "cross_chain_operations": {
          "description": "–†–∞–±–æ—Ç–∞ —Å datums —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–Ω—ã–º–∏ –Ω–∞ —Ä–∞–∑–Ω—ã—Ö chains",
          
          "common_scenario": {
            "problem": "Emission —Å–æ–∑–¥–∞–Ω–∞ –Ω–∞ zerochain, –Ω—É–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å TX –Ω–∞ main chain",
            "error": "Specified emission not found",
            "root_cause": "tx_create —Å —è–≤–Ω—ã–º -chain main –∏—â–µ—Ç emission –¢–û–õ–¨–ö–û –Ω–∞ main chain",
            "explanation": "SDK –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –ø—Ä—è–º–æ–µ spending emission –∏–∑ –¥—Ä—É–≥–æ–≥–æ chain"
          },
          
          "solutions": {
            "solution_1_auto_detect": {
              "approach": "–ù–µ —É–∫–∞–∑—ã–≤–∞—Ç—å -chain –ø–∞—Ä–∞–º–µ—Ç—Ä –≤ tx_create",
              "command": "tx_create -token TCELL -from_emission <hash> -value 100 (–ë–ï–ó -chain!)",
              "behavior": "SDK –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç chain –ø–æ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏—é emission",
              "result": "TX –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω–∞ –Ω–∞ —Ç–æ–º –∂–µ chain –≥–¥–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è emission (zerochain)",
              "when_to_use": "–ö–æ–≥–¥–∞ –Ω–µ –≤–∞–∂–Ω–æ –Ω–∞ –∫–∞–∫–æ–º chain —Å–æ–∑–¥–∞—ë—Ç—Å—è TX"
            },
            
            "solution_2_same_chain": {
              "approach": "–°–æ–∑–¥–∞—Ç—å –≤—Å—ë –Ω–∞ –æ–¥–Ω–æ–º chain",
              "flow": [
                "token_decl -chain main",
                "token_emit -chain main", 
                "tx_create -chain main ‚Üê emission –Ω–∞ —Ç–æ–º –∂–µ chain!"
              ],
              "when_to_use": "–ö–æ–≥–¥–∞ –Ω—É–∂–µ–Ω —Å—Ç—Ä–æ–≥–∏–π –∫–æ–Ω—Ç—Ä–æ–ª—å –Ω–∞–¥ chain placement"
            },
            
            "solution_3_anchor": {
              "approach": "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å anchor datum –¥–ª—è cross-chain linking",
              "description": "Anchor —Å–æ–∑–¥–∞—ë—Ç —Å–≤—è–∑—å –º–µ–∂–¥—É chains",
              "complexity": "–¢—Ä–µ–±—É–µ—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –ª–æ–≥–∏–∫–∏ anchor creation",
              "when_to_use": "–î–ª—è –∏—Å—Ç–∏–Ω–Ω—ã—Ö cross-chain transfers"
            },
            
            "solution_4_wait_finalization": {
              "approach": "–î–æ–∂–¥–∞—Ç—å—Å—è —Ñ–∏–Ω–∞–ª–∏–∑–∞—Ü–∏–∏ emission –ø–µ—Ä–µ–¥ TX",
              "critical": "–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –¥–ª—è DAG-PoA!",
              "verification": "event list -chain zerochain | grep <emission_hash>",
              "timeout": "–û–±—ã—á–Ω–æ 3-5 —Å–µ–∫—É–Ω–¥ –¥–ª—è —Ñ–∏–Ω–∞–ª–∏–∑–∞—Ü–∏–∏",
              "monitoring": "Polling event list –∫–∞–∂–¥—ã–µ 2 —Å–µ–∫—É–Ω–¥—ã"
            }
          },
          
          "sdk_chain_detection": {
            "function": "dap_chain_net_get_default_chain_by_chain_type()",
            "behavior_when_chain_specified": "–ò—â–µ—Ç datum –¢–û–õ–¨–ö–û –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω–æ–º chain",
            "behavior_when_no_chain": "–ò—â–µ—Ç datum –Ω–∞ default chain –¥–ª—è —ç—Ç–æ–≥–æ datum type",
            "emission_lookup": "–ï—Å–ª–∏ emission –Ω–∞ –¥—Ä—É–≥–æ–º chain - –≤–µ—Ä–Ω—ë—Ç 'not found'"
          },
          
          "best_practice_for_genesis": {
            "recommendation": "–°–æ–∑–¥–∞–≤–∞—Ç—å emission –∏ –ø–µ—Ä–≤—É—é TX –Ω–∞ –û–î–ù–û–ú chain",
            "typical_flow": [
              "1. token_decl -chain zerochain",
              "2. emission -chain zerochain",
              "3. tx_create –ë–ï–ó -chain (auto-detect ‚Üí zerochain)",
              "4. Main chain –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è —á–µ—Ä–µ–∑ –¥—Ä—É–≥–æ–π –º–µ—Ö–∞–Ω–∏–∑–º (anchor –∏–ª–∏ –æ—Ç–¥–µ–ª—å–Ω—ã–π token)"
            ],
            "why": "–ò–∑–±–µ–∂–∞—Ç—å cross-chain complexity –Ω–∞ —Å—Ç–∞–¥–∏–∏ genesis"
          }
        }
      },
      
      "practical_examples": {
        "description": "–†–µ–∞–ª—å–Ω—ã–µ –ø—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤ –∏ –∫–æ–Ω—Å–µ–Ω—Å—É—Å–∞",
        
        "example_1_genesis_setup": {
          "scenario": "–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è stagenet —Å 3 root –∏ 3 master –Ω–æ–¥–∞–º–∏",
          
          "step_1_certificate_generation": {
            "command": "cf-cert-generator -net stagenet -nodes 8 -validators 6",
            "creates": [
              "8x node-addr.dcert (–ø–æ –æ–¥–Ω–æ–º—É –Ω–∞ –∫–∞–∂–¥—É—é –Ω–æ–¥—É)",
              "6x pvt.stagenet.master.{0..5}.dcert (–ø—Ä–∏–≤–∞—Ç–Ω—ã–µ –¥–ª—è –≤–∞–ª–∏–¥–∞—Ç–æ—Ä–æ–≤)",
              "6x stagenet.master.{0..5}.dcert (–ø—É–±–ª–∏—á–Ω—ã–µ –¥–ª—è –≤—Å–µ—Ö)"
            ]
          },
          
          "step_2_certificate_distribution": {
            "node1_root": [
              "/var/lib/ca/node-addr.dcert (—Å–≤–æ–π)",
              "/var/lib/ca/pvt.stagenet.master.0.dcert (—Å–≤–æ–π –ø—Ä–∏–≤–∞—Ç–Ω—ã–π)",
              "/var/lib/ca/stagenet.master.{0..5}.dcert (–≤—Å–µ –ø—É–±–ª–∏—á–Ω—ã–µ!)"
            ],
            "node4_master": [
              "/var/lib/ca/node-addr.dcert (—Å–≤–æ–π)",
              "/var/lib/ca/pvt.stagenet.master.3.dcert (—Å–≤–æ–π –ø—Ä–∏–≤–∞—Ç–Ω—ã–π)",
              "/var/lib/ca/stagenet.master.{0..5}.dcert (–≤—Å–µ –ø—É–±–ª–∏—á–Ω—ã–µ!)"
            ],
            "node7_full": [
              "/var/lib/ca/node-addr.dcert (—Å–≤–æ–π)",
              "/var/lib/ca/stagenet.master.{0..5}.dcert (–≤—Å–µ –ø—É–±–ª–∏—á–Ω—ã–µ –¥–ª—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏)",
              "–ù–ï–¢ –ø—Ä–∏–≤–∞—Ç–Ω—ã—Ö master —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤!"
            ]
          },
          
          "step_3_config_setup": {
            "zerochain_cfg": [
              "[dag-poa]",
              "auth_certs_prefix=stagenet.master  # –ë–ï–ó pvt.!",
              "auth_certs_number=3  # –¢–æ–ª—å–∫–æ root –Ω–æ–¥—ã",
              "auth_certs_number_verify=2  # 2 –∏–∑ 3"
            ],
            "main_cfg": [
              "[esbocs]",
              "auth_certs_prefix=stagenet.master  # –ë–ï–ó pvt.!",
              "auth_certs_count=6  # All validators",
              "min_validators_count=4  # –ú–∏–Ω–∏–º—É–º –æ–Ω–ª–∞–π–Ω"
            ],
            "node1_cfg": [
              "[general]",
              "node-role=root",
              "",
              "[dag-poa]",
              "events-sign-cert=pvt.stagenet.master.0  # –° pvt.!"
            ],
            "node4_cfg": [
              "[general]",
              "node-role=master",
              "",
              "[esbocs]",
              "blocks-sign-cert=pvt.stagenet.master.3  # –° pvt.!"
            ]
          },
          
          "step_4_runtime_verification": {
            "check_certs_loaded": [
              "docker exec node-1 ls -la /var/lib/ca/",
              "–î–æ–ª–∂–Ω—ã –±—ã—Ç—å: node-addr.dcert, pvt.stagenet.master.0.dcert, stagenet.master.{0..5}.dcert"
            ],
            "check_dag_poa_init": [
              "docker logs node-1 | grep 'Initialized auth cert'",
              "–î–æ–ª–∂–Ω–æ –±—ã—Ç—å: stagenet.master.0, stagenet.master.1, stagenet.master.2"
            ],
            "check_esbocs_init": [
              "docker logs node-4 | grep 'Initialized auth cert'",
              "–î–æ–ª–∂–Ω–æ –±—ã—Ç—å: stagenet.master.{0..5} (–≤—Å–µ –≤–∞–ª–∏–¥–∞—Ç–æ—Ä—ã)"
            ]
          }
        },
        
        "example_2_token_creation_on_dag_poa": {
          "scenario": "–°–æ–∑–¥–∞–Ω–∏–µ TCELL —Ç–æ–∫–µ–Ω–∞ –Ω–∞ zerochain —Å DAG-PoA",
          
          "commands": [
            "# Step 1: –î–µ–∫–ª–∞—Ä–∞—Ü–∏—è —Ç–æ–∫–µ–Ω–∞ (–≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –Ω–∞ node1 - root)",
            "cellframe-node-cli token_decl \\",
            "  -token TCELL \\",
            "  -total_supply 1000000000 \\",
            "  -decimals 18 \\",
            "  -signs_total 1 \\",
            "  -signs_emission 1 \\",
            "  -certs pvt.stagenet.master.0 \\  # –° pvt.!",
            "  -net stagenet \\",
            "  -chain zerochain",
            "",
            "# Output: Datum 0x8186F04778C96A... is placed in datum pool",
            "",
            "# Step 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤ mempool",
            "cellframe-node-cli mempool_list -net stagenet -chain zerochain",
            "",
            "# Step 3: –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞ root –Ω–æ–¥–∞—Ö",
            "# –ù–∞ node1:",
            "cellframe-node-cli mempool_proc -datum 0x8186F04778C96A... -net stagenet -chain zerochain",
            "",
            "# –ù–∞ node2 –∏ node3 - –¢–û–ñ–ï –≤—ã–∑–≤–∞—Ç—å mempool_proc!",
            "",
            "# Step 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∏–Ω–∞–ª–∏–∑–∞—Ü–∏–∏",
            "cellframe-node-cli event list -net stagenet -chain zerochain -last 10",
            "# –î–æ–ª–∂–µ–Ω –ø–æ—è–≤–∏—Ç—å—Å—è event —Å datum hash"
          ],
          
          "what_happens_internally": [
            "1. node1 —Å–æ–∑–¥–∞—ë—Ç event —Å token_decl datum",
            "2. node1 –ø–æ–¥–ø–∏—Å—ã–≤–∞–µ—Ç event —Å–≤–æ–∏–º pvt.stagenet.master.0.dcert",
            "3. Event –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –Ω–∞ node2 –∏ node3",
            "4. node2 –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä—É–µ—Ç –ø–æ–¥–ø–∏—Å—å node1 –∏—Å–ø–æ–ª—å–∑—É—è stagenet.master.0.dcert (–ø—É–±–ª–∏—á–Ω—ã–π)",
            "5. node2 –≤—ã–∑—ã–≤–∞–µ—Ç mempool_proc –∏ –¥–æ–±–∞–≤–ª—è–µ—Ç –°–í–û–Æ –ø–æ–¥–ø–∏—Å—å (pvt.stagenet.master.1)",
            "6. node3 –¥–µ–ª–∞–µ—Ç —Ç–æ –∂–µ —Å–∞–º–æ–µ (pvt.stagenet.master.2)",
            "7. –ö–æ–≥–¥–∞ —Å–æ–±—Ä–∞–Ω–æ 2 –ø–æ–¥–ø–∏—Å–∏ –∏–∑ 3 - event —Ñ–∏–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è",
            "8. Datum —Ç–µ–ø–µ—Ä—å —á–∞—Å—Ç—å DAG –∏ –¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è"
          ],
          
          "timing": "–í–µ—Å—å –ø—Ä–æ—Ü–µ—Å—Å –∑–∞–Ω–∏–º–∞–µ—Ç 3-5 —Å–µ–∫—É–Ω–¥ (–±—ã—Å—Ç—Ä–æ!)"
        },
        
        "example_3_debugging_cert_issues": {
          "scenario": "–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–æ–±–ª–µ–º —Å —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞–º–∏",
          
          "symptom_1_cant_find_cert": {
            "error_log": "[ERROR] Can't find cert \"stagenet.master.0\"",
            "diagnosis_steps": [
              "1. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ñ–∞–π–ª—ã: ls -la /var/lib/ca/ | grep master",
              "2. –î–æ–ª–∂–Ω—ã –±—ã—Ç—å: stagenet.master.0.dcert (–ë–ï–ó pvt.!)",
              "3. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥: grep auth_certs_prefix /opt/cellframe-node/etc/network/stagenet/zerochain.cfg",
              "4. –î–æ–ª–∂–Ω–æ –±—ã—Ç—å: auth_certs_prefix=stagenet.master (–ë–ï–ó pvt.!)",
              "5. –ï—Å–ª–∏ —Ñ–∞–π–ª –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è pvt.stagenet.master.0.dcert ‚Üí –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å –∏–ª–∏ –ø–µ—Ä–µ—Å–æ–∑–¥–∞—Ç—å!"
            ],
            "fix": "–°–æ–∑–¥–∞—Ç—å –ø—É–±–ª–∏—á–Ω—ã–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –ë–ï–ó pvt. prefix –≤ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞"
          },
          
          "symptom_2_no_private_key": {
            "error_log": "Certificate has no private key",
            "diagnosis": "–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø—É–±–ª–∏—á–Ω—ã–π —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –¥–ª—è –ø–æ–¥–ø–∏—Å–∏",
            "check": "CLI –∫–æ–º–∞–Ω–¥–∞ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç -certs stagenet.master.0 (–±–µ–∑ pvt.)",
            "fix": "–ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞ -certs pvt.stagenet.master.0"
          },
          
          "symptom_3_event_not_finalized": {
            "error": "Datum –Ω–µ —Ñ–∏–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è –≤ DAG",
            "possible_causes": [
              "1. Root –Ω–æ–¥—ã –Ω–µ –≤—ã–∑—ã–≤–∞—é—Ç mempool_proc",
              "2. events-sign-cert –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –≤ node config",
              "3. –ü—Ä–∏–≤–∞—Ç–Ω—ã–π —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç pvt.stagenet.master.N.dcert –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç",
              "4. –ü—É–±–ª–∏—á–Ω—ã–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –Ω–µ –Ω–∞ –≤—Å–µ—Ö root –Ω–æ–¥–∞—Ö",
              "5. < auth_certs_number_verify root –Ω–æ–¥ –æ–Ω–ª–∞–π–Ω"
            ],
            "verification": [
              "docker logs node-1 | grep 'events-sign-cert'",
              "docker logs node-1 | grep 'Initialized auth cert'",
              "docker exec node-1 ls /var/lib/ca/ | grep -c 'stagenet.master' # –î–æ–ª–∂–Ω–æ –±—ã—Ç—å 3+"
            ]
          }
        }
      }
    },

    "service_modules": {
      "stake": {
        "path": "cellframe-sdk/modules/service/stake/",
        "description": "–°—Ç–µ–π–∫–∏–Ω–≥ —Ç–æ–∫–µ–Ω–æ–≤ –∏ PoS –¥–µ–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ",
        "enable_flag": "srv-stake",
        "cmake_define": "DAP_SRV_STAKE_USED"
      },
      "voting": {
        "path": "cellframe-sdk/modules/service/voting/",
        "description": "–ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è –∏ –æ–ø—Ä–æ—Å—ã",
        "enable_flag": "srv-voting"
      },
      "bridge": {
        "path": "cellframe-sdk/modules/service/bridge/",
        "description": "–ú–æ—Å—Ç—ã –º–µ–∂–¥—É –±–ª–æ–∫—á–µ–π–Ω–∞–º–∏", 
        "enable_flag": "srv-bridge"
      },
      "xchange": {
        "path": "cellframe-sdk/modules/service/xchange/",
        "description": "–î–µ—Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–∞—è –±–∏—Ä–∂–∞",
        "enable_flag": "srv-xchange"
      },
      "vpn": {
        "path": "cellframe-sdk/modules/service/vpn/",
        "description": "VPN —Å–µ—Ä–≤–∏—Å",
        "enable_flag": "srv-vpn",
        "platforms": ["LINUX", "DARWIN"]
      }
    }
  },

  "build_system": {
    "cmake_configuration": {
      "minimum_version": "3.10",
      "project_name": "cellframe-sdk",
      "language": "C",
      "c_standard": "11",
      "version": "3.4-0",
      "version_define": "CELLFRAME_SDK_VERSION"
    },
    "default_modules": "core chains mining network cs-dag-poa cs-esbocs cs-none srv-stake srv-voting srv-bridge srv-xchange",
    "conditional_modules": {
      "srv-vpn": ["LINUX", "DARWIN"]
    },
    "module_activation_pattern": "CELLFRAME_MODULES MATCHES \"module_name\"",
    "cmake_structure": {
      "main_cmakelists": "cellframe-sdk/CMakeLists.txt",
      "modules_cmakelists": "cellframe-sdk/modules/CMakeLists.txt",
      "module_cmakelists": "–∫–∞–∂–¥—ã–π –º–æ–¥—É–ª—å –∏–º–µ–µ—Ç —Å–≤–æ–π CMakeLists.txt"
    },
    "library_linking": {
      "type": "STATIC",
      "pattern": "target_link_libraries(${PROJECT_NAME} dependencies...)",
      "installation": {
        "libraries": "lib/modules/{category}/",
        "headers": "include/modules/{category}/",
        "public_headers": "—É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é—Ç—Å—è —á–µ—Ä–µ–∑ PUBLIC_HEADER"
      }
    }
  },

  "development_guidelines": {
    "inherits_dap_rules": true,
    "auto_loads": ".context/modules/standards/dap_sdk_coding_standards.json",
    "cellframe_specific": {
      "module_creation": {
        "steps": [
          "–°–æ–∑–¥–∞—Ç—å –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ cellframe-sdk/modules/{category}/{module}",
          "–î–æ–±–∞–≤–∏—Ç—å CMakeLists.txt —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –∏–º–µ–Ω–µ–º –ø—Ä–æ–µ–∫—Ç–∞", 
          "–°–æ–∑–¥–∞—Ç—å include/ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é —Å –∑–∞–≥–æ–ª–æ–≤–æ—á–Ω—ã–º–∏ —Ñ–∞–π–ª–∞–º–∏",
          "–†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –∏—Å—Ö–æ–¥–Ω—ã–µ —Ñ–∞–π–ª—ã —Å #define LOG_TAG \"module_name\"",
          "–î–æ–±–∞–≤–∏—Ç—å –º–æ–¥—É–ª—å –≤ cellframe-sdk/modules/CMakeLists.txt",
          "–û–±–Ω–æ–≤–∏—Ç—å CELLFRAME_MODULES –≤ –≥–ª–∞–≤–Ω–æ–º CMakeLists.txt"
        ]
      },
      "naming_patterns": {
        "libraries": "dap_chain_{module_name}",
        "files": "dap_chain_{component}.c/.h",
        "cmake_projects": "dap_chain_{module_name}"
      },
      "dependencies": {
        "always_include": ["dap_chain_common"],
        "common_deps": ["dap_core", "dap_crypto", "dap_global_db"],
        "network_deps": ["dap_stream", "dap_notify_srv"]
      }
    }
  },

  "python_bindings": {
    "auto_loads": ".context/modules/projects/dap_sdk/python_bindings_coding_standards.json",
    "architecture": {
      "python_dap": {
        "description": "–ù–∏–∑–∫–æ—É—Ä–æ–≤–Ω–µ–≤—ã–µ –±–∏–Ω–¥–∏–Ω–≥–∏ DAP SDK",
        "location": "python-dap/",
        "purpose": "–ü—Ä—è–º—ã–µ 1:1 –æ–±—ë—Ä—Ç–∫–∏ –Ω–∞–¥ DAP SDK C —Ñ—É–Ω–∫—Ü–∏—è–º–∏"
      },
      "python_cellframe": {
        "description": "–í—ã—Å–æ–∫–æ—É—Ä–æ–≤–Ω–µ–≤—ã–µ –±–∏–Ω–¥–∏–Ω–≥–∏ Cellframe SDK", 
        "location": "cellframe/",
        "purpose": "–í—ã—Å–æ–∫–æ—É—Ä–æ–≤–Ω–µ–≤—ã–π Cellframe SDK —Å Python –ø–∞—Ç—Ç–µ—Ä–Ω–∞–º–∏",
        "dependencies": ["python-dap"]
      }
    },
    "exception_hierarchy": {
      "base": "DapException (python-dap)",
      "cellframe": "CellframeException (python-cellframe)",
      "rule": "–í—Å–µ –∏—Å–∫–ª—é—á–µ–Ω–∏—è –Ω–∞—Å–ª–µ–¥—É—é—Ç—Å—è –æ—Ç DAP –±–∞–∑–æ–≤—ã—Ö –∏—Å–∫–ª—é—á–µ–Ω–∏–π"
    }
  },

  "testing": {
    "unit_tests": {
      "option": "BUILD_CELLFRAME_SDK_TESTS",
      "defines": ["DAP_LEDGER_TEST", "DAP_CHAIN_BLOCKS_TEST"],
      "location": "–∫–∞–∂–¥—ã–π –º–æ–¥—É–ª—å –∏–º–µ–µ—Ç tests/ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é"
    },
    "test_organization": {
      "pattern": "dap_{module}_test.c",
      "cmake_condition": "if(BUILD_CELLFRAME_SDK_TESTS)"
    }
  },

  "token_management_system": {
    "description": "–°–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞–º–∏ –≤ Cellframe SDK",
    "token_types": {
      "CF20": {
        "description": "–û—Å–Ω–æ–≤–Ω–æ–π —Ç–∏–ø —Ç–æ–∫–µ–Ω–∞ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π UTXO –º–æ–¥–µ–ª–∏",
        "subtypes": ["SIMPLE", "PRIVATE", "NATIVE", "PUBLIC"],
        "model": "UTXO (Unspent Transaction Output)",
        "key_files": [
          "cellframe-sdk/modules/common/include/dap_chain_datum_token.h",
          "cellframe-sdk/modules/net/dap_chain_ledger.c"
        ]
      }
    },
    
    "utxo_model": {
      "description": "Cellframe –∏—Å–ø–æ–ª—å–∑—É–µ—Ç UTXO –º–æ–¥–µ–ª—å –¥–ª—è CF20 —Ç–æ–∫–µ–Ω–æ–≤ (–∫–∞–∫ Bitcoin)",
      "utxo_structure": {
        "identification": "–ü–∞—Ä–∞ (tx_hash, out_idx)",
        "tracking": "dap_ledger_tx_item_t —Å –º–∞—Å—Å–∏–≤–æ–º tx_hash_spent_fast[]",
        "validation": "s_ledger_tx_add_check() –ø—Ä–æ–≤–µ—Ä—è–µ—Ç spent status"
      },
      "output_types": {
        "dap_chain_tx_out_t": "–ë–∞–∑–æ–≤—ã–π –≤—ã—Ö–æ–¥ —Å –∞–¥—Ä–µ—Å–æ–º –∏ –∑–Ω–∞—á–µ–Ω–∏–µ–º",
        "dap_chain_tx_out_ext_t": "–†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –≤—ã—Ö–æ–¥ —Å —É–∫–∞–∑–∞–Ω–∏–µ–º —Ç–æ–∫–µ–Ω–∞",
        "dap_chain_tx_out_std_t": "–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –≤—ã—Ö–æ–¥ —Å timelock –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π"
      }
    },

    "permissions_system": {
      "description": "–ú–Ω–æ–≥–æ—É—Ä–æ–≤–Ω–µ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞ –∫–æ–Ω—Ç—Ä–æ–ª—è –¥–æ—Å—Ç—É–ø–∞ –¥–ª—è —Ç–æ–∫–µ–Ω–æ–≤",
      
      "address_based_permissions": {
        "description": "Whitelist/Blacklist –∞–¥—Ä–µ—Å–æ–≤ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª–µ–π –∏ –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π",
        "sender_lists": {
          "tx_send_allow": "Whitelist –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª–µ–π (—Ä–∞–±–æ—Ç–∞–µ—Ç —Å ALL_SENDER_BLOCKED)",
          "tx_send_block": "Blacklist –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª–µ–π (—Ä–∞–±–æ—Ç–∞–µ—Ç —Å ALL_SENDER_ALLOWED)"
        },
        "receiver_lists": {
          "tx_recv_allow": "Whitelist –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π (—Ä–∞–±–æ—Ç–∞–µ—Ç —Å ALL_RECEIVER_BLOCKED)",
          "tx_recv_block": "Blacklist –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π (—Ä–∞–±–æ—Ç–∞–µ—Ç —Å ALL_RECEIVER_ALLOWED)"
        },
        "validation": "s_ledger_addr_check() –≤ dap_chain_ledger.c:2615",
        "disable_flags": {
          "DISABLE_ADDRESS_SENDER_BLOCKING": "BIT(18) - –æ—Ç–∫–ª—é—á–∞–µ—Ç tx_send_allow/block –º–µ—Ö–∞–Ω–∏–∑–º",
          "DISABLE_ADDRESS_RECEIVER_BLOCKING": "BIT(19) - –æ—Ç–∫–ª—é—á–∞–µ—Ç tx_recv_allow/block –º–µ—Ö–∞–Ω–∏–∑–º",
          "rationale": "–ü–æ–∑–≤–æ–ª—è–µ—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ—Ç–∫–ª—é—á–∏—Ç—å address-based –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –¥–ª—è —Ç–æ–∫–µ–Ω–∞"
        }
      },

      "utxo_based_permissions": {
        "description": "–ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –Ω–µ–ø–æ—Ç—Ä–∞—á–µ–Ω–Ω—ã—Ö –≤—ã—Ö–æ–¥–æ–≤ (UTXO)",
        "implementation_status": "–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ - –∑–∞–¥–∞—á–∞ cf20_utxo_blocking_20250116",
        "mechanism": "Ban-–ª–∏—Å—Ç –¥–ª—è –ø–∞—Ä (tx_hash, out_idx) –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Ç–æ–∫–µ–Ω–∞",
        "storage": "Hash table per token –≤ dap_ledger_token_item_t",
        "flags": {
          "UTXO_BLOCKING_ENABLED": "BIT(16) - –≤–∫–ª—é—á–∞–µ—Ç –º–µ—Ö–∞–Ω–∏–∑–º –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ UTXO",
          "STATIC_UTXO_BLOCKLIST": "BIT(17) - –∑–∞–ø—Ä–µ—â–∞–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–µ blocklist –ø–æ—Å–ª–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏"
        },
        "tsd_operations": {
          "TSD_TYPE_UTXO_BLOCKED_ADD": "0x0029 - –¥–æ–±–∞–≤–∏—Ç—å UTXO –≤ blocklist —á–µ—Ä–µ–∑ token_update",
          "TSD_TYPE_UTXO_BLOCKED_REMOVE": "0x002A - —É–¥–∞–ª–∏—Ç—å UTXO –∏–∑ blocklist",
          "TSD_TYPE_UTXO_BLOCKED_CLEAR": "0x002B - –æ—á–∏—Å—Ç–∏—Ç—å –≤–µ—Å—å blocklist"
        },
        "cli_commands": {
          "token_update": "–†–∞—Å—à–∏—Ä–µ–Ω –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ -utxo_blocked_add/remove/clear",
          "token_utxo_list": "–ù–æ–≤–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö UTXO"
        },
        "validation": "–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤ s_ledger_tx_add_check –ø–µ—Ä–µ–¥ —Ç—Ä–∞—Ç–æ–π UTXO"
      },

      "token_flags": {
        "global_permissions": {
          "ALL_SENDER_BLOCKED": "BIT(1) - –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –≤—Å–µ—Ö –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª–µ–π",
          "ALL_SENDER_ALLOWED": "BIT(2) - —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –≤—Å–µ—Ö –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª–µ–π",
          "ALL_SENDER_FROZEN": "BIT(3) - –≤—Ä–µ–º–µ–Ω–Ω–∞—è –∑–∞–º–æ—Ä–æ–∑–∫–∞ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª–µ–π",
          "ALL_SENDER_UNFROZEN": "BIT(4) - —Ä–∞–∑–º–æ—Ä–æ–∑–∫–∞ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª–µ–π",
          "ALL_RECEIVER_BLOCKED": "BIT(5) - –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –≤—Å–µ—Ö –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π",
          "ALL_RECEIVER_ALLOWED": "BIT(6) - —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –≤—Å–µ—Ö –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π",
          "ALL_RECEIVER_FROZEN": "BIT(7) - –≤—Ä–µ–º–µ–Ω–Ω–∞—è –∑–∞–º–æ—Ä–æ–∑–∫–∞ –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π",
          "ALL_RECEIVER_UNFROZEN": "BIT(8) - —Ä–∞–∑–º–æ—Ä–æ–∑–∫–∞ –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π"
        },
        "static_flags": {
          "STATIC_ALL": "BIT(9) - –∑–∞–ø—Ä–µ—Ç –≤—Å–µ—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π —Ç–æ–∫–µ–Ω–∞ –ø–æ—Å–ª–µ –¥–µ–∫–ª–∞—Ä–∞—Ü–∏–∏",
          "STATIC_FLAGS": "BIT(10) - –∑–∞–ø—Ä–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ñ–ª–∞–≥–æ–≤",
          "STATIC_PERMISSIONS_ALL": "BIT(11) - –∑–∞–ø—Ä–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤—Å–µ—Ö permissions",
          "STATIC_PERMISSIONS_DATUM_TYPE": "BIT(12) - –∑–∞–ø—Ä–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è datum type permissions",
          "STATIC_PERMISSIONS_TX_SENDER": "BIT(13) - –∑–∞–ø—Ä–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è sender permissions",
          "STATIC_PERMISSIONS_TX_RECEIVER": "BIT(14) - –∑–∞–ø—Ä–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è receiver permissions"
        },
        "new_flags_utxo_blocking": {
          "UTXO_BLOCKING_ENABLED": "BIT(16) - –≤–∫–ª—é—á–µ–Ω–∏–µ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ UTXO",
          "STATIC_UTXO_BLOCKLIST": "BIT(17) - –∑–∞–ø—Ä–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è UTXO blocklist",
          "DISABLE_ADDRESS_SENDER_BLOCKING": "BIT(18) - –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ address-based sender blocking",
          "DISABLE_ADDRESS_RECEIVER_BLOCKING": "BIT(19) - –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ address-based receiver blocking",
          "implementation": "–ó–∞–¥–∞—á–∞ cf20_utxo_blocking_20250116",
          "status": "–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ"
        }
      }
    },

    "token_update_mechanism": {
      "description": "–°–∏—Å—Ç–µ–º–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ —Ç–æ–∫–µ–Ω–æ–≤ –ø–æ—Å–ª–µ –¥–µ–∫–ª–∞—Ä–∞—Ü–∏–∏",
      "command": "token_update -net <net> -chain <chain> -token <ticker> [params]",
      "implementation": "com_token_update() –≤ dap_chain_node_cli_cmd.c:5149",
      "tsd_sections": {
        "general": {
          "SET_FLAGS": "0x0001 - —É—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ñ–ª–∞–≥–æ–≤",
          "UNSET_FLAGS": "0x0002 - —Å–Ω—è—Ç–∏–µ —Ñ–ª–∞–≥–æ–≤",
          "TOTAL_SUPPLY": "0x0026 - –∏–∑–º–µ–Ω–µ–Ω–∏–µ total supply",
          "TOTAL_SIGNS_VALID": "0x0004 - –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ç—Ä–µ–±—É–µ–º–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø–æ–¥–ø–∏—Å–µ–π",
          "TOTAL_PKEYS_ADD": "0x0006 - –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤–ª–∞–¥–µ–ª—å—Ü–∞",
          "TOTAL_PKEYS_REMOVE": "0x0005 - —É–¥–∞–ª–µ–Ω–∏–µ –≤–ª–∞–¥–µ–ª—å—Ü–∞"
        },
        "permissions": {
          "TX_SENDER_ALLOWED_ADD": "0x0020",
          "TX_SENDER_ALLOWED_REMOVE": "0x0021",
          "TX_SENDER_BLOCKED_ADD": "0x0023",
          "TX_SENDER_BLOCKED_REMOVE": "0x0024",
          "TX_RECEIVER_ALLOWED_ADD": "0x0014",
          "TX_RECEIVER_ALLOWED_REMOVE": "0x0015",
          "TX_RECEIVER_BLOCKED_ADD": "0x0017",
          "TX_RECEIVER_BLOCKED_REMOVE": "0x0018"
        },
        "utxo_blocking_new": {
          "UTXO_BLOCKED_ADD": "0x0029 - –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ UTXO –≤ blocklist",
          "UTXO_BLOCKED_REMOVE": "0x002A - —É–¥–∞–ª–µ–Ω–∏–µ UTXO –∏–∑ blocklist",
          "UTXO_BLOCKED_CLEAR": "0x002B - –æ—á–∏—Å—Ç–∫–∞ blocklist",
          "implementation": "–ó–∞–¥–∞—á–∞ cf20_utxo_blocking_20250116",
          "status": "–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ"
        }
      },
      "authorization": "–¢—Ä–µ–±—É—é—Ç—Å—è valid –ø–æ–¥–ø–∏—Å–∏ –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤ —Ç–æ–∫–µ–Ω–∞",
      "storage": "TSD sections –≤ token_update datum, –ø—Ä–∏–º–µ–Ω—è—é—Ç—Å—è –≤ ledger"
    },

    "ledger_architecture": {
      "description": "–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π —Ä–µ–µ—Å—Ç—Ä —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –∏ –±–∞–ª–∞–Ω—Å–æ–≤",
      "file": "cellframe-sdk/modules/net/dap_chain_ledger.c",
      "key_structures": {
        "dap_ledger_t": "–û—Å–Ω–æ–≤–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ ledger",
        "dap_ledger_token_item_t": "–≠–ª–µ–º–µ–Ω—Ç –∫–µ—à–∞ –¥–ª—è —Ç–æ–∫–µ–Ω–∞ —Å permissions",
        "dap_ledger_tx_item_t": "–≠–ª–µ–º–µ–Ω—Ç –∫–µ—à–∞ –¥–ª—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ —Å UTXO tracking"
      },
      "thread_safety": {
        "approach": "Multiple reader-writer locks –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤",
        "locks": {
          "ledger_rwlock": "–î–ª—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π",
          "tokens_rwlock": "–î–ª—è —Ç–æ–∫–µ–Ω–æ–≤",
          "balance_accounts_rwlock": "–î–ª—è –±–∞–ª–∞–Ω—Å–æ–≤",
          "locked_outs_rwlock": "–î–ª—è timelock outs"
        }
      },
      "utxo_tracking": {
        "spent_tracking": "tx_hash_spent_fast[] –º–∞—Å—Å–∏–≤ –≤ cache_data",
        "n_outs": "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—ã—Ö–æ–¥–æ–≤ –≤ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏",
        "n_outs_used": "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Ç—Ä–∞—á–µ–Ω–Ω—ã—Ö –≤—ã—Ö–æ–¥–æ–≤",
        "validation": "s_ledger_tx_add_check() –ø—Ä–æ–≤–µ—Ä—è–µ—Ç spent status"
      }
    }
  },

  "testing_infrastructure": {
    "description": "–ò–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è Cellframe SDK",
    "base_framework": "dap-sdk/test-framework (dap_test.h)",
    "test_directory": "cellframe-sdk/tests/",
    "cmake_option": "BUILD_TESTS=On",
    "structure": {
      "fixtures": "cellframe-sdk/tests/fixtures/ - reusable test helpers",
      "unit": "cellframe-sdk/tests/unit/ - unit —Ç–µ—Å—Ç—ã –º–æ–¥—É–ª–µ–π",
      "integration": "cellframe-sdk/tests/integration/ - E2E —Ç–µ—Å—Ç—ã"
    },
    "test_execution": {
      "framework": "CTest (CMake test framework)",
      "command_all": "cd build && ctest",
      "command_verbose": "ctest -V –∏–ª–∏ ctest --verbose",
      "individual": "./build/cellframe-sdk/tests/unit/<test_name>"
    },
    "fixtures_available": {
      "test_ledger_fixtures": "Helpers –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ ledger –∏ —Å–µ—Ç–∏",
      "test_token_fixtures": "Helpers –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö —Ç–æ–∫–µ–Ω–æ–≤",
      "test_transaction_fixtures": "Helpers –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –∏ UTXO"
    },
    "quality_tools": {
      "memory_leaks": "valgrind --leak-check=full",
      "race_conditions": "valgrind --tool=helgrind",
      "sanitizers": "AddressSanitizer, ThreadSanitizer"
    },
    "related_task": ".context/tasks/cf20_utxo_blocking_20250116.json"
  },

  "code_quality": {
    "inherits_all_dap_rules": true,
    "auto_reference": ".context/modules/standards/dap_sdk_coding_standards.json",
    "additional_checks": {
      "module_structure": "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–µ –º–æ–¥—É–ª–µ–π",
      "cmake_consistency": "–°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ naming patterns –≤ CMake",
      "dependency_management": "–ü—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –º–µ–∂–¥—É –º–æ–¥—É–ª—è–º–∏"
    }
  },

  "integration_notes": {
    "with_dap_sdk": "–ü–æ–ª–Ω–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è, –≤—Å–µ –ø—Ä–∞–≤–∏–ª–∞ DAP –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏–º–µ–Ω—è—é—Ç—Å—è",
    "auto_loading": "–ü—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å Cellframe SDK –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è –ø—Ä–∞–≤–∏–ª–∞ DAP SDK",
    "template_intelligence": "–°–∏—Å—Ç–µ–º–∞ –ø–æ–Ω–∏–º–∞–µ—Ç –∏–µ—Ä–∞—Ä—Ö–∏—é DAP -> Cellframe –∏ –ø—Ä–∏–º–µ–Ω—è–µ—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –ø—Ä–∞–≤–∏–ª–∞"
  }
}