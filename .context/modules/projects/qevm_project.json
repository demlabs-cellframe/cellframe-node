{
  "version": "1.0.0",
  "created": "2025-09-16T12:00:00Z",
  "updated": "2025-09-16T12:00:00Z",
  "navigation_system": {
    "purpose": "–û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ QEVM - —Å–ª–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ Ethereum EVM",
    "recovery_path": ".context/manifest.json",
    "current_file": ".context/modules/projects/qevm_project.json",
    "file_role": "QEVM_PROJECT_DESCRIPTION",
    "related_files": [
      ".context/manifest.json",
      ".context/modules/core/project.json",
      ".context/modules/projects/dap_sdk_project.json"
    ],
    "quick_navigation": {
      "üè† –ì–ª–∞–≤–Ω–∞—è": ".context/manifest.json - –≥–ª–∞–≤–Ω—ã–π –Ω–∞–≤–∏–≥–∞—Ç–æ—Ä —Å–∏—Å—Ç–µ–º—ã",
      "üìã QEVM": ".context/modules/projects/qevm_project.json - —ç—Ç–æ—Ç —Ñ–∞–π–ª",
      "üîß DAP SDK": ".context/modules/projects/dap_sdk_project.json - DAP SDK –ø—Ä–æ–µ–∫—Ç",
      "üèóÔ∏è –°–±–æ—Ä–∫–∞": ".context/tasks/cellframe_plugin_cmake_build.json - —Ç–µ–∫—É—â–∞—è –∑–∞–¥–∞—á–∞ —Å–±–æ—Ä–∫–∏"
    },
    "usage_hint": "./slc info modules/projects/qevm_project.json –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏",
    "ai_context": "–ú–æ–¥—É–ª—å –ø—Ä–æ–µ–∫—Ç–∞ QEVM - —Å–ª–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å Ethereum EVM"
  },
  "project": {
    "name": "QEVM - Quantum Ethereum Virtual Machine",
    "architecture": "quantum_ethereum_compatibility_layer",
    "version": "1.0.0",
    "description": "QEVM —ç—Ç–æ —Å–ª–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å —ç—Ñ–∏—Ä–∏—É–º–Ω–æ–π EVM –¥–ª—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø—Ä–æ–∑—Ä–∞—á–Ω–æ–π –º–∏–≥—Ä–∞—Ü–∏–∏ —Å–º–∞—Ä—Ç –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤ —Å –∫–≤–∞–Ω—Ç–æ–≤–æ-–Ω–µ–∑–∞—â–∏—â—ë–Ω–Ω—ã—Ö –≤ –∫–≤–∞–Ω—Ç–æ–≤–æ-–∑–∞—â–∏—â—ë–Ω–Ω—É—é –±–ª–æ–∫—á–µ–π–Ω —Å–µ—Ç—å",
    "type": "Cellframe Plugin - Blockchain Compatibility Layer",
    "status": "Development",
    "release_date": "2025-Q1",
    "key_features": [
      "–ü–æ–ª–Ω–∞—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å Ethereum EVM —á–µ—Ä–µ–∑ EVMONE",
      "32-–±–∞–π—Ç–æ–≤—ã–µ –∫–≤–∞–Ω—Ç–æ–≤–æ-–±–µ–∑–æ–ø–∞—Å–Ω—ã–µ –∞–¥—Ä–µ—Å–∞",
      "Dilithium –ø–æ–¥–ø–∏—Å–∏ –¥–ª—è –∫–≤–∞–Ω—Ç–æ–≤–æ–π –∑–∞—â–∏—Ç—ã",
      "–°—Ç–∞—Ç–∏—á–µ—Å–∫–∞—è —Å–±–æ—Ä–∫–∞ –≤—Å–µ—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –≤ –µ–¥–∏–Ω—ã–π –ø–ª–∞–≥–∏–Ω",
      "JSON-RPC API —Å–æ–≤–º–µ—Å—Ç–∏–º—ã–π —Å Ethereum",
      "MDBX –¥–ª—è –≤—ã—Å–æ–∫–æ–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è"
    ]
  },
  "current_architecture": {
    "plugin_architecture": {
      "main_entry_point": "plugin_main.c - –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª –ø–ª–∞–≥–∏–Ω–∞ Cellframe",
      "plugin_interface": "–†–µ–∞–ª–∏–∑—É–µ—Ç DAP SDK plugin interface —Å plugin_init/plugin_deinit",
      "configuration": {
        "default_values": {
          "rpc_port": 8545,
          "db_path": "./var/lib/qevm",
          "rpc_addr": "127.0.0.1",
          "chain_id": "0x53A (1338)",
          "gas_limit": "30000000"
        },
        "source": "–ß–∏—Ç–∞–µ—Ç—Å—è –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Cellframe node —á–µ—Ä–µ–∑ dap_config_get_item_*"
      },
      "initialization_order": [
        "1. qevm_db_init() - –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è MDBX –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö",
        "2. qs_mempool_init() - —Å–æ–∑–¥–∞–Ω–∏–µ FIFO mempool (–Ω–µ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω –≤ RPC –ø–æ—Ç–æ–∫)", 
        "3. qevm_vm_init() - –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è EVMONE –¥–≤–∏–∂–∫–∞",
        "4. qevm_rpc_server_start() - –∑–∞–ø—É—Å–∫ HTTP/JSON-RPC —Å–µ—Ä–≤–µ—Ä–∞"
      ],
      "chain_integration": {
        "network_name": "qevm",
        "chain_name": "main",
        "consensus": "–ù–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω - —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –∏—Å–ø–æ–ª–Ω—è—é—Ç—Å—è –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ",
        "block_production": "–ù–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ - –Ω–µ—Ç –º–∞–π–Ω–∏–Ω–≥–∞/–≤–∞–ª–∏–¥–∞—Ü–∏–∏ –±–ª–æ–∫–æ–≤"
      },
      "library_output": "libcf-plugin-qevm.so - –µ–¥–∏–Ω–∞—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ —Å–æ –≤—Å–µ–º–∏ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏ —Å–ª–∏–Ω–∫–æ–≤–∞–Ω–Ω—ã–º–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è–º–∏"
    },
    "module_structure": {
      "modules/db/": {
        "description": "–ú–Ω–æ–≥–æ—Å–ª–æ–π–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –±–ª–æ–∫—á–µ–π–Ω–∞",
        "components": {
          "mdbx_layer": "dap_mdbx.c - –Ω–∏–∑–∫–æ—É—Ä–æ–≤–Ω–µ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å MDBX –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö",
          "state_layer": "state/ - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è–º–∏ –∞–∫–∫–∞—É–Ω—Ç–æ–≤, —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π, —Ö—Ä–∞–Ω–∏–ª–∏—â–∞",
          "mpt_layer": "mpt/ - —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è Merkle Patricia Trie —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π 32-–±–∞–π—Ç–æ–≤—ã—Ö –∞–¥—Ä–µ—Å–æ–≤",
          "quantum_adaptations": "–ü–æ–¥–¥–µ—Ä–∂–∫–∞ 32-–±–∞–π—Ç–æ–≤—ã—Ö –∞–¥—Ä–µ—Å–æ–≤ (vs 20-–±–∞–π—Ç–æ–≤—ã—Ö Ethereum)"
        },
        "databases": {
          "accounts": "–•—Ä–∞–Ω–µ–Ω–∏–µ qevm_account_t —Å nonce, balance, code_hash, storage_root",
          "storage": "Contract storage key-value –ø–∞—Ä—ã",
          "transactions": "–ò—Å—Ç–æ—Ä–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π —Å –∏–Ω–¥–µ–∫—Å–∞—Ü–∏–µ–π –ø–æ —Ö–µ—à—É",
          "code": "Bytecode —Å–º–∞—Ä—Ç-–∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤",
          "receipts": "–ö–≤–∏—Ç–∞–Ω—Ü–∏–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π"
        }
      },
      "modules/vm/": {
        "description": "–ü–æ–ª–Ω–æ—Ü–µ–Ω–Ω–∞—è EVM —Å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ–π EVMONE –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π —Å–º–∞—Ä—Ç-–∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤",
        "core_components": {
          "evmone_engine": "qs_vm_evmone_engine.c - –æ—Å–Ω–æ–≤–Ω–æ–π –¥–≤–∏–∂–æ–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è",
          "host_interface": "qs_vm_evmone_host.c - EVMC host interface callbacks",
          "contract_storage": "qs_vm_contract_storage.c - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ bytecode –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤",
          "instance_manager": "qs_vm_instance.c - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ VM –∏–Ω—Å—Ç–∞–Ω—Å–∞–º–∏",
          "state_access": "qs_vm_state_access.c - –¥–æ—Å—Ç—É–ø –∫ —Å–æ—Å—Ç–æ—è–Ω–∏—é –±–ª–æ–∫—á–µ–π–Ω–∞"
        },
        "contract_support": {
          "deployment": "CREATE –∏ CREATE2 –æ–ø–µ—Ä–∞—Ü–∏–∏",
          "execution": "CALL –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å –ø–æ–ª–Ω–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π EVM –æ–ø–∫–æ–¥–æ–≤",
          "gas_management": "Ethereum-—Å–æ–≤–º–µ—Å—Ç–∏–º–æ–µ –∏–∑–º–µ—Ä–µ–Ω–∏–µ –≥–∞–∑–∞",
          "revision_support": "EVMC_CANCUN - –ø–æ—Å–ª–µ–¥–Ω–∏–µ EVM –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏"
        },
        "testing": "27+ —Ç–µ—Å—Ç–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤ –≤–∫–ª—é—á–∞—è integration tests –∏ contract deployment tests"
      },
      "modules/rpc/": {
        "description": "–ü–æ–ª–Ω—ã–π JSON-RPC —Å–µ—Ä–≤–µ—Ä —Å Ethereum API –∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è–º–∏ QEVM",
        "server_stack": {
          "http_server": "mongoose.c - embedded HTTP —Å–µ—Ä–≤–µ—Ä",
          "async_processing": "libuv thread pool –¥–ª—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏",
          "json_parser": "json-c –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON-RPC –∑–∞–ø—Ä–æ—Å–æ–≤"
        },
        "api_methods": {
          "standard_ethereum": [
            "eth_getBalance", "eth_sendRawTransaction", "eth_getTransactionCount",
            "eth_accounts", "eth_getBlockByHash", "eth_getBlockByNumber", 
            "eth_getTransactionByHash", "eth_chainId (0x53A = 1338)"
          ],
          "qevm_extensions": [
            "gdb_getAccount", "gdb_setAccount", "gdb_listAccounts",
            "gdb_storeTransaction", "gdb_getTransaction", "gdb_listTransactions",
            "address_map_add", "address_map_get", "datum_eth_map_add"
          ],
          "testing_methods": [
            "eth_sendRawTransaction_test", "gdb_testSync", "gdb_createCluster"
          ]
        },
        "method_routing": "–°—Ç–∞—Ç–∏—á–µ—Å–∫–∞—è —Ç–∞–±–ª–∏—Ü–∞ g_rpc_methods[] —Å function pointers"
      },
      "modules/types/": {
        "description": "–†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ —Ç–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö Ethereum —Å –∫–≤–∞–Ω—Ç–æ–≤–æ-–±–µ–∑–æ–ø–∞—Å–Ω—ã–º–∏ –∞–¥–∞–ø—Ç–∞—Ü–∏—è–º–∏",
        "core_types": {
          "addresses": "qevm_address_t - –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –∫–∞–∫ 20-–±–∞–π—Ç–æ–≤—ã—Ö, —Ç–∞–∫ –∏ 32-–±–∞–π—Ç–æ–≤—ã—Ö –∞–¥—Ä–µ—Å–æ–≤",
          "uint256": "qevm_uint256_t - 256-–±–∏—Ç–Ω–∞—è –∞—Ä–∏—Ñ–º–µ—Ç–∏–∫–∞ –¥–ª—è –±–∞–ª–∞–Ω—Å–æ–≤ –∏ –≥–∞–∑–∞",
          "bytes": "qevm_bytes_t - –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–µ –±–∞–π—Ç–æ–≤—ã–µ –º–∞—Å—Å–∏–≤—ã —Å capacity management",
          "byte_view": "byte_view_t - –Ω–µ–∏–∑–º–µ–Ω—è–µ–º—ã–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è –±–∞–π—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö"
        },
        "transaction_types": {
          "base_transaction": "qevm_unsigned_tx_t - –±–∞–∑–æ–≤–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏",
          "complete_transaction": "qevm_tx_t - —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è —Å –∫–µ—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏",
          "eip_support": "EIP-2930 (access lists), EIP-4844 (blob transactions), EIP-7702 (authorization)",
          "quantum_signatures": "–ü–æ–¥–¥–µ—Ä–∂–∫–∞ Dilithium –ø–æ–¥–ø–∏—Å–µ–π –¥–ª—è –∫–≤–∞–Ω—Ç–æ–≤–æ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏"
        },
        "block_types": {
          "block_header": "qevm_block_header_t - –∑–∞–≥–æ–ª–æ–≤–æ–∫ –±–ª–æ–∫–∞ —Å quantum-safe —Ö–µ—à–∞–º–∏",
          "complete_block": "qevm_block_t - –±–ª–æ–∫ —Å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è–º–∏ (–º–∞–∫—Å. 1000 tx)",
          "receipts": "qevm_receipt_t - –∫–≤–∏—Ç–∞–Ω—Ü–∏–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Å –ª–æ–≥–∞–º–∏ —Å–æ–±—ã—Ç–∏–π"
        }
      },
      "modules/rlp/": {
        "description": "RLP –∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–µ/–¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å Ethereum",
        "implementation": "encode.c - —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è RLP encoding",
        "ethereum_rlp": "–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –≤–Ω–µ—à–Ω–µ–π –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ Ethereum-RLP",
        "testing": "–ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ç–µ—Å—Ç—ã RLP –æ–ø–µ—Ä–∞—Ü–∏–π"
      },
      "modules/mpt/": {
        "description": "Merkle Patricia Trie —Å –∞–¥–∞–ø—Ç–∞—Ü–∏—è–º–∏ –¥–ª—è –∫–≤–∞–Ω—Ç–æ–≤–æ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏",
        "key_encoding": "mpt_keyenc.c - –∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–ª—é—á–µ–π –¥–ª—è 32-–±–∞–π—Ç–æ–≤—ã—Ö –∞–¥—Ä–µ—Å–æ–≤",
        "mdbx_integration": "mpt_mdbx.c - –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è MPT —Å MDBX –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö",
        "trie_operations": "mpt.c - –æ—Å–Ω–æ–≤–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å –¥–µ—Ä–µ–≤–æ–º"
      },
      "modules/mempool/": {
        "description": "FIFO mempool —Å –≤–∞–ª–∏–¥–∞—Ü–∏–µ–π —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π (–ù–ï –ò–ù–¢–ï–ì–†–ò–†–û–í–ê–ù –≤ –æ—Å–Ω–æ–≤–Ω–æ–π –ø–æ—Ç–æ–∫)",
        "status": "–†–µ–∞–ª–∏–∑–æ–≤–∞–Ω –Ω–æ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è - —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –∏—Å–ø–æ–ª–Ω—è—é—Ç—Å—è –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ —á–µ—Ä–µ–∑ RPC",
        "architecture": {
          "fifo_queue": "qs_mempool_entry_t linked list –¥–ª—è FIFO –ø–æ—Ä—è–¥–∫–∞",
          "hash_tracking": "evmc_bytes32 –º–∞—Å—Å–∏–≤ –¥–ª—è O(n) –¥–µ—Ç–µ–∫—Ü–∏–∏ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤",
          "validation": "qs_state_reader_validate_transaction() –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ nonce/balance",
          "limits": "max_count –∏ max_gas_limit –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º—ã–µ –ª–∏–º–∏—Ç—ã",
          "thread_safety": "pthread_mutex —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º lock ordering"
        },
        "api_functions": [
          "qs_mempool_init() - –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å –ª–∏–º–∏—Ç–∞–º–∏",
          "qs_mempool_add_transaction() - –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å –≤–∞–ª–∏–¥–∞—Ü–∏–µ–π",
          "qs_mempool_get_next() - –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ –ø–æ FIFO",
          "qs_mempool_remove() - —É–¥–∞–ª–µ–Ω–∏–µ –ø–æ —Ö–µ—à—É",
          "qs_mempool_cleanup() - –æ—á–∏—Å—Ç–∫–∞ –∏ –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏–µ"
        ],
        "integration_note": "–¢—Ä–µ–±—É–µ—Ç—Å—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –∫–æ–Ω—Å–µ–Ω—Å—É—Å–æ–º –¥–ª—è –±–∞—Ç—á–∏–Ω–≥–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –≤ –±–ª–æ–∫–∏"
      }
    },
    "build_system": {
      "cmake_structure": {
        "root_cmakelists": "–ì–ª–∞–≤–Ω—ã–π CMakeLists.txt —Å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ–π SDK",
        "modules_cmakelists": "CMakeLists.txt –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –º–æ–¥—É–ª—è",
        "deps_cmakelists": "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è–º–∏ —Å —Å—Ç–∞—Ç–∏—á–µ—Å–∫–æ–π —Å–±–æ—Ä–∫–æ–π",
        "output": "libcf-plugin-qevm.so - –æ—Å–Ω–æ–≤–Ω–∞—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ –ø–ª–∞–≥–∏–Ω–∞"
      },
      "sdk_integration": {
        "dap_sdk": "–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∫–∞–∫ –ø—É—Ç–∏ –∫ –∑–∞–≥–æ–ª–æ–≤–∫–∞–º, –±–µ–∑ —Å–±–æ—Ä–∫–∏",
        "cellframe_sdk": "–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∫–∞–∫ –ø—É—Ç–∏ –∫ –∑–∞–≥–æ–ª–æ–≤–∫–∞–º, –±–µ–∑ —Å–±–æ—Ä–∫–∏",
        "static_linking": "–í—Å–µ –≤–Ω–µ—à–Ω–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —Å–æ–±–∏—Ä–∞—é—Ç—Å—è —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏"
      },
      "compilation_flags": {
        "debug_build": "-g -O0 -DDEBUG -Wall -Wextra",
        "platform_defines": "DAP_OS_UNIX DAP_OS_LINUX",
        "c_standard": "C11",
        "cpp_standard": "C++17"
      },
      "static_libraries": {
        "libevmone.a": "9.2MB - –ø–æ–ª–Ω–∞—è EVM —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è",
        "libmdbx-static.a": "ACID-compliant embedded database",
        "libkeccak.a": "Keccak hashing algorithms",
        "libevmc-instructions.a": "EVM instruction set",
        "libjson-c.a": "JSON processing",
        "libxkcp.a": "Cryptographic primitives"
      }
    },
    "rpc_architecture": {
      "server_implementation": "mongoose.c - embedded HTTP —Å–µ—Ä–≤–µ—Ä —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π WebSocket",
      "json_rpc_protocol": "–ü–æ–ª–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ JSON-RPC 2.0 —Å error handling",
      "method_routing": "–°—Ç–∞—Ç–∏—á–µ—Å–∫–∞—è —Ç–∞–±–ª–∏—Ü–∞ g_rpc_methods[] —Å 25+ –º–µ—Ç–æ–¥–∞–º–∏",
      "ethereum_api_methods": [
        "eth_getBalance", "eth_sendRawTransaction", "eth_getTransactionCount",
        "eth_accounts", "eth_getBlockByHash", "eth_getBlockByNumber",
        "eth_getTransactionByHash", "eth_chainId", "eth_blockNumber"
      ],
      "qevm_extensions": [
        "gdb_* –º–µ—Ç–æ–¥—ã –¥–ª—è –ø—Ä—è–º–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∫ GlobalDB",
        "address_map_* –¥–ª—è –º–∞–ø–ø–∏–Ω–≥–∞ –∞–¥—Ä–µ—Å–æ–≤",
        "datum_eth_map_* –¥–ª—è —Å–≤—è–∑–∏ —Å Cellframe datums",
        "Cluster management –º–µ—Ç–æ–¥—ã –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"
      ],
      "async_processing": "libuv thread pool –¥–ª—è non-blocking –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–æ–≤",
      "chain_integration": "–ü—Ä—è–º–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å dap_chain_net_by_name('qevm')"
    },
    "vm_architecture": {
      "evmone_integration": {
        "engine": "qs_vm_evmone_engine.c - –æ—Å–Ω–æ–≤–Ω–æ–π –¥–≤–∏–∂–æ–∫ —Å gas limit —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º",
        "host_interface": "qs_vm_evmone_host.c - EVMC host callbacks",
        "contract_storage": "qs_vm_contract_storage.c - bytecode management",
        "deployment": "evmone_deploy.c - CREATE/CREATE2 –æ–ø–µ—Ä–∞—Ü–∏–∏"
      },
      "execution_environment": {
        "revision_support": "EVMC_CANCUN - –ø–æ—Å–ª–µ–¥–Ω—è—è EVM revision",
        "gas_limit": "–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º—ã–π –ª–∏–º–∏—Ç –≥–∞–∑–∞ (30M –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)",
        "contract_calls": "–ü–æ–¥–¥–µ—Ä–∂–∫–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏—Ö –≤—ã–∑–æ–≤–æ–≤ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤",
        "precompiles": "–í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ Ethereum precompiled contracts"
      },
      "state_integration": {
        "state_access": "qs_vm_state_access.c - –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∫ —Å–æ—Å—Ç–æ—è–Ω–∏—é –±–ª–æ–∫—á–µ–π–Ω–∞",
        "account_management": "–ò—Å–ø–æ–ª—å–∑—É–µ—Ç db/state –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—É",
        "storage_operations": "Contract storage —á–µ—Ä–µ–∑ MDBX",
        "transaction_pipeline": "transaction_evm_integration.c - –ø–æ–ª–Ω—ã–π —Ü–∏–∫–ª –æ–±—Ä–∞–±–æ—Ç–∫–∏"
      },
      "testing_framework": {
        "contract_tests": "HelloWorld.sol, Storage.sol, AdvancedContract.sol",
        "deployment_tests": "–¢–µ—Å—Ç—ã —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤",
        "execution_tests": "–¢–µ—Å—Ç—ã –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏",
        "integration_tests": "–ü–æ–ª–Ω–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å blockchain state"
      }
    },
    "storage_architecture": {
      "mdbx_database": {
        "implementation": "–ü—Ä—è–º–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ MDBX API —á–µ—Ä–µ–∑ mdbx.h",
        "environment_management": "MDBX_env —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–æ–π MDBX_NOTLS | MDBX_NORDAHEAD",
        "transaction_model": "ACID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ —Å commit/rollback",
        "table_structure": "–ò–º–µ–Ω–æ–≤–∞–Ω–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã: accounts, storage, transactions, code, receipts"
      },
      "mpt_implementation": {
        "quantum_addresses": "–ü–æ–¥–¥–µ—Ä–∂–∫–∞ 32-–±–∞–π—Ç–æ–≤—ã—Ö –∞–¥—Ä–µ—Å–æ–≤ vs 20-–±–∞–π—Ç–æ–≤—ã—Ö Ethereum",
        "key_encoding": "mpt_keyenc.c - —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ –∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–ª—é—á–µ–π",
        "mdbx_backend": "mpt_mdbx.c - —Ö—Ä–∞–Ω–µ–Ω–∏–µ MPT —É–∑–ª–æ–≤ –≤ MDBX",
        "proof_generation": "–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è Merkle proof'–æ–≤"
      },
      "state_management": {
        "account_db": "account_db_t —Å –æ–ø–µ—Ä–∞—Ü–∏—è–º–∏ put/get/list",
        "storage_db": "storage_db_t –¥–ª—è contract storage",
        "transaction_db": "transaction_db_t —Å –∏–Ω–¥–µ–∫—Å–∞—Ü–∏–µ–π –ø–æ —Ö–µ—à—É",
        "state_reader": "qs_state_reader_t –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –∏ —á—Ç–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è"
      }
    },
    "data_types": {
      "quantum_adaptations": {
        "qevm_address_t": {
          "size": "32 –±–∞–π—Ç–∞ (QEVM_ADDRESS_LENGTH)",
          "compatibility": "–ü–æ–¥–¥–µ—Ä–∂–∫–∞ 20-–±–∞–π—Ç–æ–≤—ã—Ö Ethereum –∞–¥—Ä–µ—Å–æ–≤ —á–µ—Ä–µ–∑ padding",
          "definition": "typedef struct { uint8_t bytes[32]; } qevm_address_t"
        },
        "dilithium_signatures": {
          "algorithm": "Dilithium MODE_1",
          "public_key_size": "1184 –±–∞–π—Ç (QEVM_DILITHIUM_PUBKEY_SIZE)",
          "signature_size": "–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–π —Ä–∞–∑–º–µ—Ä –¥–ª—è –∫–≤–∞–Ω—Ç–æ–≤–æ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏",
          "integration": "qevm_verify_transaction_signature() –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏"
        },
        "quantum_safety_note": "–ü–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–∞ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞, –Ω–æ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–µ –∞–ª–≥–æ—Ä–∏—Ç–º—ã"
      },
      "ethereum_compatibility": {
        "qevm_uint256_t": "256-–±–∏—Ç–Ω—ã–µ —á–∏—Å–ª–∞ —Å –æ–ø–µ—Ä–∞—Ü–∏—è–º–∏ add, mul, div",
        "evmc_bytes32": "32-–±–∞–π—Ç–æ–≤—ã–µ —Ö–µ—à–∏ —Å–æ–≤–º–µ—Å—Ç–∏–º—ã–µ —Å EVMC",
        "byte_view_t": "–ù–µ–∏–∑–º–µ–Ω—è–µ–º—ã–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö",
        "qevm_bytes_t": "–î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–µ –º–∞—Å—Å–∏–≤—ã —Å capacity management"
      },
      "transaction_types": {
        "eip_support": "EIP-2930 (access lists), EIP-4844 (blob tx), EIP-7702 (authorization)",
        "qevm_unsigned_tx_t": "–ë–∞–∑–æ–≤–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –±–µ–∑ –ø–æ–¥–ø–∏—Å–∏",
        "qevm_tx_t": "–ü–æ–ª–Ω–∞—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è —Å –∫–µ—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ sender –∏ hash",
        "transaction_type_t": "–ü–æ–¥–¥–µ—Ä–∂–∫–∞ Legacy, EIP-2930, EIP-1559, EIP-4844"
      },
      "block_structure": {
        "qevm_block_header_t": "–ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å quantum-safe —Ö–µ—à–∞–º–∏ –∏ difficulty",
        "qevm_block_t": "–ë–ª–æ–∫ —Å –ª–∏–º–∏—Ç–æ–º 1000 —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π",
        "receipts": "qevm_receipt_t —Å –ª–æ–≥–∞–º–∏ —Å–æ–±—ã—Ç–∏–π –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤"
      }
    },
    "transaction_lifecycle": {
      "description": "–ü–æ–ª–Ω—ã–π –∂–∏–∑–Ω–µ–Ω–Ω—ã–π —Ü–∏–∫–ª —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –æ—Ç RPC –∑–∞–ø—Ä–æ—Å–∞ –¥–æ –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—è",
      "current_flow": {
        "1_rpc_reception": {
          "handler": "eth_sendRawTransaction",
          "actions": [
            "–ü—Ä–∏–µ–º hex-encoded —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏",
            "qevm_hex_to_bytes() –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è",
            "qevm_parse_transaction() –ø–∞—Ä—Å–∏–Ω–≥",
            "qevm_transaction_get_sender() –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∞–¥—Ä–µ—Å–∞"
          ]
        },
        "2_immediate_storage": {
          "handler": "state_set_transaction()",
          "note": "–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –≤ –±–∞–∑—É –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ –ø–æ—Å–ª–µ –ø–∞—Ä—Å–∏–Ω–≥–∞"
        },
        "3_immediate_execution": {
          "handler": "qevm_execute_transaction()",
          "steps": [
            "state_get_account() - –ø–æ–ª—É—á–µ–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–∞ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è",
            "–í–∞–ª–∏–¥–∞—Ü–∏—è nonce == account.nonce",
            "qevm_calculate_transaction_cost() - —Ä–∞—Å—á–µ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏",
            "–ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–ª–∞–Ω—Å–∞ >= total_cost",
            "–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–∏–ø–∞: –∫–æ–Ω—Ç—Ä–∞–∫—Ç –∏–ª–∏ –ø–µ—Ä–µ–≤–æ–¥"
          ]
        },
        "4_contract_execution": {
          "condition": "–ï—Å–ª–∏ to == null (CREATE) –∏–ª–∏ to.has_code (CALL)",
          "actions": [
            "qevm_host_context_init() - –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ö–æ—Å—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞",
            "qevm_evmone_engine_init() - —Å–æ–∑–¥–∞–Ω–∏–µ VM –∏–Ω—Å—Ç–∞–Ω—Å–∞",
            "qevm_evmone_engine_deploy_contract() –∏–ª–∏ call_contract()",
            "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤"
          ]
        },
        "5_simple_transfer": {
          "condition": "–ï—Å–ª–∏ –æ–±—ã—á–Ω—ã–π –ø–µ—Ä–µ–≤–æ–¥ ETH",
          "actions": [
            "–£–º–µ–Ω—å—à–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è",
            "–£–≤–µ–ª–∏—á–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—É—á–∞—Ç–µ–ª—è",
            "–ò–Ω–∫—Ä–µ–º–µ–Ω—Ç nonce –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è"
          ]
        },
        "6_receipt_generation": {
          "handler": "create_and_store_receipt()",
          "data": [
            "success/failure —Å—Ç–∞—Ç—É—Å",
            "gas_used –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ",
            "logs –æ—Ç –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤",
            "output data (–¥–ª—è CALL)"
          ]
        }
      },
      "missing_components": [
        "Mempool –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è - —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –∏—Å–ø–æ–ª–Ω—è—é—Ç—Å—è –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ",
        "–ù–µ—Ç –±–∞—Ç—á–∏–Ω–≥–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –≤ –±–ª–æ–∫–∏",
        "–ù–µ—Ç –∫–æ–Ω—Å–µ–Ω—Å—É—Å–∞ –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –±–ª–æ–∫–æ–≤",
        "–ù–µ—Ç –º–µ—Ö–∞–Ω–∏–∑–º–∞ –æ—Ç–∫–∞—Ç–∞ –ø—Ä–∏ –æ—à–∏–±–∫–∞—Ö –≤ –±–ª–æ–∫–µ"
      ]
    },
    "testing_infrastructure": {
      "unit_tests": "–¢–µ—Å—Ç—ã –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –º–æ–¥—É–ª—è (account_test.c, bytes_test.c, etc.)",
      "integration_tests": "–¢–µ—Å—Ç—ã –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è –º–µ–∂–¥—É –º–æ–¥—É–ª—è–º–∏",
      "rpc_tests": "HTTP —Ç–µ—Å—Ç—ã JSON-RPC API",
      "contract_tests": "Solidity –∫–æ–Ω—Ç—Ä–∞–∫—Ç—ã —Å deployment –∏ execution —Ç–µ—Å—Ç–∞–º–∏",
      "performance_tests": "–¢–µ—Å—Ç—ã –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ VM –∏ database",
      "python_automation": "generate_evm_test.py –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"
    },
    "external_dependencies": {
      "static_libraries": {
        "evmone": {
          "file": "libevmone.a (9.2MB)",
          "purpose": "–ü–æ–ª–Ω–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è Ethereum Virtual Machine",
          "revision": "EVMC_CANCUN - –ø–æ—Å–ª–µ–¥–Ω—è—è –≤–µ—Ä—Å–∏—è EVM"
        },
        "mdbx": {
          "file": "libmdbx-static.a",
          "purpose": "ACID-compliant embedded key-value database",
          "features": "MDBX_NOTLS | MDBX_NORDAHEAD —Ñ–ª–∞–≥–∏"
        },
        "ethash": {
          "file": "libkeccak.a",
          "purpose": "Keccak-256 —Ö–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è Ethereum —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏"
        },
        "intx": {
          "file": "libintx.a",
          "purpose": "256-–±–∏—Ç–Ω–∞—è –∞—Ä–∏—Ñ–º–µ—Ç–∏–∫–∞ –¥–ª—è uint256 –æ–ø–µ—Ä–∞—Ü–∏–π"
        },
        "json_c": {
          "file": "libjson-c.a",
          "purpose": "JSON –ø–∞—Ä—Å–∏–Ω–≥ –¥–ª—è RPC –∑–∞–ø—Ä–æ—Å–æ–≤/–æ—Ç–≤–µ—Ç–æ–≤"
        },
        "xkcp": {
          "file": "libxkcp.a",
          "purpose": "Extended Keccak Code Package –¥–ª—è –∫—Ä–∏–ø—Ç–æ–≥—Ä–∞—Ñ–∏–∏"
        }
      },
      "dynamic_libraries": {
        "libuv": "–°–∏—Å—Ç–µ–º–Ω–∞—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ –¥–ª—è async I/O –∏ thread pool",
        "pthread": "POSIX threads –¥–ª—è –º–Ω–æ–≥–æ–ø–æ—Ç–æ—á–Ω–æ—Å—Ç–∏",
        "mongoose": "–í—Å—Ç—Ä–æ–µ–Ω–∞ –≤ –∏—Å—Ö–æ–¥–Ω–∏–∫–∏ - embedded HTTP —Å–µ—Ä–≤–µ—Ä"
      },
      "sdk_dependencies": {
        "dap_sdk": "–ó–∞–≥–æ–ª–æ–≤–æ—á–Ω—ã–µ —Ñ–∞–π–ª—ã –±–µ–∑ –ª–∏–Ω–∫–æ–≤–∫–∏ –±–∏–±–ª–∏–æ—Ç–µ–∫",
        "cellframe_sdk": "–ó–∞–≥–æ–ª–æ–≤–æ—á–Ω—ã–µ —Ñ–∞–π–ª—ã –±–µ–∑ –ª–∏–Ω–∫–æ–≤–∫–∏ –±–∏–±–ª–∏–æ—Ç–µ–∫"
      }
    }
  },
  "current_limitations": {
    "consensus": "–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç - —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –∏—Å–ø–æ–ª–Ω—è—é—Ç—Å—è –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ –±–µ–∑ –≤–∞–ª–∏–¥–∞—Ü–∏–∏",
    "block_production": "–ù–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ - –Ω–µ—Ç –º–µ—Ö–∞–Ω–∏–∑–º–∞ —Å–æ–∑–¥–∞–Ω–∏—è –±–ª–æ–∫–æ–≤",
    "mempool_usage": "–†–µ–∞–ª–∏–∑–æ–≤–∞–Ω –Ω–æ –Ω–µ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω –≤ –æ—Å–Ω–æ–≤–Ω–æ–π –ø–æ—Ç–æ–∫",
    "network_sync": "–ù–µ—Ç —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –º–µ–∂–¥—É –Ω–æ–¥–∞–º–∏",
    "gas_pricing": "–§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ü–µ–Ω—ã –±–µ–∑ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–π –ø–æ–¥—Å—Ç—Ä–æ–π–∫–∏",
    "eip_support": "–ß–∞—Å—Ç–∏—á–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ EIP-2930, EIP-1559, EIP-4844"
  },
  "development_status": {
    "completed": [
      "‚úÖ EVM –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —á–µ—Ä–µ–∑ EVMONE",
      "‚úÖ RPC —Å–µ—Ä–≤–µ—Ä —Å Ethereum API",
      "‚úÖ –°–∏—Å—Ç–µ–º–∞ —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è (MDBX)",
      "‚úÖ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Å–º–∞—Ä—Ç-–∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤ (CREATE/CALL)",
      "‚úÖ –ë–∞–∑–æ–≤—ã–µ —Ç–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö –∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏",
      "‚úÖ –°—Ç–∞—Ç–∏—á–µ—Å–∫–∞—è —Å–±–æ—Ä–∫–∞ –≤—Å–µ—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"
    ],
    "in_progress": [
      "üîÑ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –∫–æ–Ω—Å–µ–Ω—Å—É—Å–æ–º Cellframe",
      "üîÑ –ú–µ—Ö–∞–Ω–∏–∑–º —Å–æ–∑–¥–∞–Ω–∏—è –±–ª–æ–∫–æ–≤",
      "üîÑ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ mempool –¥–ª—è –±–∞—Ç—á–∏–Ω–≥–∞"
    ],
    "planned": [
      "üìã –ü–æ–ª–Ω–∞—è –∫–≤–∞–Ω—Ç–æ–≤–∞—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å",
      "üìã WebSocket subscriptions –¥–ª—è RPC",
      "üìã –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏",
      "üìã –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ EIP"
    ]
  }
}
