{
  "version": "1.0.0",
  "created": "2025-01-17T11:00:00Z",
  "updated": "2025-01-17T11:00:00Z",
  "navigation_system": {
    "purpose": "–ú–æ–¥—É–ª—å –æ—Ç–ª–∞–¥–∫–∏ C/C++ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º gdb, strace –∏ valgrind –≤ –Ω–µ–∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–º —Ä–µ–∂–∏–º–µ",
    "recovery_path": ".context/manifest.json",
    "current_file": ".context/modules/languages/c/c_debugging_tools.json",
    "file_role": "C_DEBUGGING_MODULE",
    "related_files": [
      ".context/manifest.json",
      ".context/modules/languages/c/c_development.json",
      ".context/modules/languages/c/c_development_enhanced.json",
      ".context/modules/core/standards.json"
    ],
    "quick_navigation": {
      "üè† –ì–ª–∞–≤–Ω–∞—è": ".context/manifest.json - –≥–ª–∞–≤–Ω—ã–π –Ω–∞–≤–∏–≥–∞—Ç–æ—Ä —Å–∏—Å—Ç–µ–º—ã",
      "üîß C –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞": ".context/modules/languages/c/c_development.json - –±–∞–∑–æ–≤—ã–π C –º–æ–¥—É–ª—å",
      "üêõ C –û—Ç–ª–∞–¥–∫–∞": ".context/modules/languages/c/c_debugging_tools.json - –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –æ—Ç–ª–∞–¥–∫–∏",
      "üõ†Ô∏è CLI": ".context/tools/scripts/slc_cli.py - –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è"
    },
    "usage_hint": "–≠—Ç–æ—Ç –º–æ–¥—É–ª—å —Å–æ–¥–µ—Ä–∂–∏—Ç –∞–ª–≥–æ—Ä–∏—Ç–º—ã –∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è –Ω–µ–∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–π –æ—Ç–ª–∞–¥–∫–∏ C/C++ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π",
    "ai_context": "–§–∞–π–ª –°–õ–ö —Å–∏—Å—Ç–µ–º—ã: c_debugging_tools.json - –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –æ—Ç–ª–∞–¥–∫–∏ C/C++"
  },
  "debugging_methodology": {
    "non_interactive_approach": {
      "principle": "–í—Å–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–æ–ª–∂–Ω—ã —Ä–∞–±–æ—Ç–∞—Ç—å –≤ –Ω–µ–∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–º —Ä–µ–∂–∏–º–µ –¥–ª—è CI/CD –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏",
      "tools": ["gdb", "strace", "valgrind", "clang_static_analyzer"],
      "output_formats": ["json", "xml", "text"],
      "automation_ready": true
    },
    "diagnostic_pipeline": {
      "stage_1": "–ë—ã—Å—Ç—Ä—ã–π –∞–Ω–∞–ª–∏–∑ (strace + gdb)",
      "stage_2": "–ü–∞–º—è—Ç—å –∞–Ω–∞–ª–∏–∑ (valgrind)",
      "stage_3": "–°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ (clang)",
      "stage_4": "–ö–æ—Ä—Ä–µ–ª—è—Ü–∏–æ–Ω–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤"
    }
  },
  "gdb_non_interactive_debugging": {
    "configuration": {
      "gdb_commands_file": {
        "description": "–§–∞–π–ª —Å –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é gdb –∫–æ–º–∞–Ω–¥ –¥–ª—è –Ω–µ–∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è",
        "format": "bt full\ninfo registers\ninfo threads\nx/16xw $esp\nquit",
        "execution": "gdb --batch --command=commands.gdb --args ./program arg1 arg2"
      },
      "core_dump_analysis": {
        "enable_core_dumps": "ulimit -c unlimited && echo 'core.%p.%t' > /proc/sys/kernel/core_pattern",
        "gdb_core_analysis": "gdb ./program core.pid.timestamp",
        "automated_backtrace": "gdb --batch --quiet -ex 'bt full' -ex 'info registers' -ex 'quit' ./program core_file"
      }
    },
    "crash_characterization_algorithms": {
      "signal_analysis": {
        "SIGSEGV": {
          "description": "Segmentation fault - –Ω–∞—Ä—É—à–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–∞ –∫ –ø–∞–º—è—Ç–∏",
          "causes": ["null pointer dereference", "buffer overflow", "stack corruption", "heap corruption"],
          "gdb_commands": ["bt", "info registers", "x/16xw $esp", "info proc mappings"],
          "next_tools": ["valgrind", "clang_static_analyzer"]
        },
        "SIGABRT": {
          "description": "Abort signal - –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ",
          "causes": ["assert() failure", "abort() call", "double free", "corrupted heap"],
          "gdb_commands": ["bt", "info threads", "x/16xw $esp"],
          "next_tools": ["valgrind"]
        },
        "SIGFPE": {
          "description": "Floating point exception",
          "causes": ["division by zero", "invalid floating point operation"],
          "gdb_commands": ["bt", "info registers", "info float"],
          "next_tools": ["gdb_value_analysis"]
        },
        "SIGILL": {
          "description": "Illegal instruction",
          "causes": ["corrupted code", "architecture mismatch", "invalid opcode"],
          "gdb_commands": ["bt", "x/16i $pc", "info registers"],
          "next_tools": ["disassembler"]
        }
      },
      "backtrace_analysis": {
        "stack_trace_patterns": {
          "infinite_recursion": {
            "pattern": "–û–¥–∏–Ω–∞–∫–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –ø–æ–≤—Ç–æ—Ä—è—é—Ç—Å—è –≤ backtrace",
            "indicators": ["recursive function calls", "stack overflow"],
            "solution": "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —É—Å–ª–æ–≤–∏—è –≤—ã—Ö–æ–¥–∞ –∏–∑ —Ä–µ–∫—É—Ä—Å–∏–∏"
          },
          "null_pointer_dereference": {
            "pattern": "Dereference of NULL pointer –≤ backtrace",
            "indicators": ["pointer == NULL", "segmentation fault at assignment"],
            "solution": "–î–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞ NULL –ø–µ—Ä–µ–¥ —Ä–∞–∑—ã–º–µ–Ω–æ–≤–∞–Ω–∏–µ–º"
          },
          "buffer_overflow": {
            "pattern": "Write beyond array bounds",
            "indicators": ["heap corruption", "stack smashing"],
            "solution": "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–µ–∑–æ–ø–∞—Å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ (strncpy, memcpy_s)"
          }
        }
      }
    },
    "value_analysis_algorithms": {
      "invalid_parameter_detection": {
        "null_parameters": {
          "pattern": "–ü–µ—Ä–µ–¥–∞—á–∞ NULL –≤ —Ñ—É–Ω–∫—Ü–∏—é, –æ–∂–∏–¥–∞—é—â—É—é –Ω–µ-NULL",
          "gdb_check": "print param_name",
          "indicators": ["param_name == 0x0", "function expects valid pointer"],
          "solution": "–î–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –≤ –Ω–∞—á–∞–ª–µ —Ñ—É–Ω–∫—Ü–∏–π"
        },
        "out_of_range_values": {
          "pattern": "–ó–Ω–∞—á–µ–Ω–∏–µ –≤—ã—Ö–æ–¥–∏—Ç –∑–∞ –¥–æ–ø—É—Å—Ç–∏–º—ã–µ –≥—Ä–∞–Ω–∏—Ü—ã",
          "gdb_check": "print variable_name",
          "indicators": ["array_index >= array_size", "negative size for allocation"],
          "solution": "–î–æ–±–∞–≤–∏—Ç—å –≤–∞–ª–∏–¥–∞—Ü–∏—é –≤—Ö–æ–¥–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π"
        },
        "type_mismatch": {
          "pattern": "–ü–µ—Ä–µ–¥–∞—á–∞ –∑–Ω–∞—á–µ–Ω–∏—è –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ —Ç–∏–ø–∞",
          "gdb_check": "ptype variable_name",
          "indicators": ["expected int, got char*", "struct field mismatch"],
          "solution": "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å strict type checking"
        }
      },
      "memory_corruption_indicators": {
        "heap_corruption": {
          "signs": ["Invalid free()", "Double free()", "Heap overflow"],
          "gdb_detection": "info proc mappings && x/32xw heap_address",
          "transition_to_valgrind": true
        },
        "stack_corruption": {
          "signs": ["Stack smashing detected", "Return address corrupted"],
          "gdb_detection": "x/32xw $esp && info frame",
          "transition_to_valgrind": true
        }
      }
    }
  },
  "strace_system_call_tracing": {
    "configuration": {
      "basic_tracing": "strace -f -e trace=network,process,memory,signal ./program",
      "detailed_tracing": "strace -f -e trace=all -s 1024 -o trace.log ./program",
      "performance_tracing": "strace -f -c ./program"
    },
    "system_call_analysis": {
      "memory_operations": {
        "malloc_failures": {
          "pattern": "malloc() = ENOMEM –∏–ª–∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç NULL",
          "indicators": ["Out of memory", "Memory allocation failure"],
          "solution": "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–æ—Å—Ç—É–ø–Ω—É—é –ø–∞–º—è—Ç—å, –¥–æ–±–∞–≤–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É –æ—à–∏–±–æ–∫"
        },
        "invalid_memory_access": {
          "pattern": "SIGSEGV –ø–æ—Å–ª–µ —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞",
          "indicators": ["Invalid memory reference", "Memory access violation"],
          "transition_to_valgrind": true
        }
      },
      "file_operations": {
        "file_not_found": {
          "pattern": "open() = ENOENT",
          "indicators": ["File doesn't exist", "Wrong path"],
          "solution": "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø—É—Ç–∏ –∫ —Ñ–∞–π–ª–∞–º, –¥–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è"
        },
        "permission_denied": {
          "pattern": "open() = EACCES",
          "indicators": ["No read/write permissions"],
          "solution": "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞, –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –æ—à–∏–±–∫–∏"
        }
      },
      "network_operations": {
        "connection_failures": {
          "pattern": "connect() = ECONNREFUSED",
          "indicators": ["Server not available", "Wrong port"],
          "solution": "–î–æ–±–∞–≤–∏—Ç—å retry logic, –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–µ—Ç–µ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"
        }
      }
    }
  },
  "valgrind_memory_analysis": {
    "when_to_use": {
      "memory_corruption_indicators": [
        "SIGSEGV —Å –ø–æ–¥–æ–∑—Ä–µ–Ω–∏–µ–º –Ω–∞ heap corruption",
        "Double free detected",
        "Invalid free()",
        "Stack smashing detected",
        "Heap overflow/underflow suspected"
      ],
      "memory_leak_suspected": [
        "–ü—Ä–æ–≥—Ä–∞–º–º–∞ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –º–Ω–æ–≥–æ –ø–∞–º—è—Ç–∏",
        "–î–æ–ª–≥–æ–∂–∏–≤—É—â–∏–π –ø—Ä–æ—Ü–µ—Å—Å",
        "Memory usage grows over time"
      ]
    },
    "configuration": {
      "memory_check": "valgrind --tool=memcheck --leak-check=full --show-leak-kinds=all --track-origins=yes ./program",
      "memory_leak_detection": "valgrind --tool=memcheck --leak-check=full --show-reachable=yes ./program",
      "performance_analysis": "valgrind --tool=callgrind ./program"
    },
    "memory_error_patterns": {
      "invalid_read_write": {
        "description": "–ß—Ç–µ–Ω–∏–µ/–∑–∞–ø–∏—Å—å –≤ –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º—É—é –ø–∞–º—è—Ç—å",
        "valgrind_output": "Invalid read/write of size X",
        "causes": ["Buffer overflow", "Use after free", "Uninitialized memory"],
        "gdb_followup": "x/16xw address_from_valgrind"
      },
      "memory_leaks": {
        "description": "–£—Ç–µ—á–∫–∏ –ø–∞–º—è—Ç–∏",
        "valgrind_output": "X bytes in Y blocks are definitely lost",
        "causes": ["Forgotten free()", "Missing delete", "Circular references"],
        "solution": "–î–æ–±–∞–≤–∏—Ç—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ free()/delete"
      },
      "use_after_free": {
        "description": "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏ –ø–æ—Å–ª–µ –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏—è",
        "valgrind_output": "Invalid read/write after free",
        "causes": ["Dangling pointers", "Premature free()"],
        "solution": "–û–±–Ω—É–ª–∏—Ç—å —É–∫–∞–∑–∞—Ç–µ–ª–∏ –ø–æ—Å–ª–µ free(), –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å RAII"
      }
    }
  },
  "clang_static_analyzer": {
    "when_to_use": {
      "indicators": [
        "–ü–æ–¥–æ–∑—Ä–µ–Ω–∏–µ –Ω–∞ —Å–ª–æ–∂–Ω—ã–µ –æ—à–∏–±–∫–∏ –ª–æ–≥–∏–∫–∏",
        "–ù–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç—å –∞–Ω–∞–ª–∏–∑–∞ –≤—Å–µ–≥–æ –∫–æ–¥–∞",
        "–ü–æ–∏—Å–∫ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö —É—è–∑–≤–∏–º–æ—Å—Ç–µ–π",
        "–ê–Ω–∞–ª–∏–∑ –±–æ–ª—å—à–∏—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤"
      ]
    },
    "configuration": {
      "basic_analysis": "clang --analyze -Xanalyzer -analyzer-checker=core,unix,security ./source.c",
      "detailed_analysis": "clang --analyze -Xanalyzer -analyzer-output=html -o report ./source.c",
      "custom_checkers": "clang --analyze -Xanalyzer -analyzer-checker=alpha.security ./source.c"
    },
    "analyzer_findings": {
      "logic_errors": {
        "division_by_zero": {
          "pattern": "Division by zero",
          "solution": "–î–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–µ–ª–∏—Ç–µ–ª—è –Ω–∞ –Ω–æ–ª—å"
        },
        "null_dereference": {
          "pattern": "Dereference of null pointer",
          "solution": "–î–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞ NULL"
        }
      },
      "security_vulnerabilities": {
        "buffer_overflow": {
          "pattern": "Buffer overflow",
          "solution": "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–µ–∑–æ–ø–∞—Å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ (strncpy, memcpy_s)"
        },
        "format_string_vulnerabilities": {
          "pattern": "Format string vulnerability",
          "solution": "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–Ω—Å—Ç–∞–Ω—Ç–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏"
        }
      }
    }
  },
  "diagnostic_algorithms": {
    "crash_root_cause_analysis": {
      "step_1_collect_data": {
        "gdb_backtrace": "–ü–æ–ª—É—á–∏—Ç—å –ø–æ–ª–Ω—ã–π backtrace —Å –ª–æ–∫–∞–ª—å–Ω—ã–º–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏",
        "strace_syscalls": "–ó–∞–ø–∏—Å–∞—Ç—å –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –≤—ã–∑–æ–≤–æ–≤",
        "core_dump_analysis": "–ê–Ω–∞–ª–∏–∑ –¥–∞–º–ø–∞ –ø–∞–º—è—Ç–∏ –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω"
      },
      "step_2_categorize_error": {
        "signal_type": "–û–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ç–∏–ø —Å–∏–≥–Ω–∞–ª–∞ (SIGSEGV, SIGABRT, etc.)",
        "memory_vs_logic": "–†–∞–∑–¥–µ–ª–∏—Ç—å –æ—à–∏–±–∫–∏ –ø–∞–º—è—Ç–∏ –æ—Ç –ª–æ–≥–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫",
        "single_vs_multi_thread": "–û–ø—Ä–µ–¥–µ–ª–∏—Ç—å —É—á–∞—Å—Ç–∏–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –ø–æ—Ç–æ–∫–æ–≤"
      },
      "step_3_select_tools": {
        "simple_errors": "gdb + strace –¥–æ—Å—Ç–∞—Ç–æ—á–Ω—ã",
        "memory_corruption": "gdb + valgrind + clang analyzer",
        "complex_logic": "gdb + clang analyzer + manual review"
      },
      "step_4_correlation_analysis": {
        "cross_reference_findings": "–°–≤—è–∑–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ä–∞–∑–Ω—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤",
        "eliminate_false_positives": "–û—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞—Ç—å –ª–æ–∂–Ω—ã–µ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–Ω–∏—è",
        "prioritize_fixes": "–û–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ—Ä—è–¥–æ–∫ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—à–∏–±–æ–∫"
      }
    },
    "memory_integrity_violation_detection": {
      "heap_integrity_checks": {
        "double_free_detection": "–û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –ø–æ–≤—Ç–æ—Ä–Ω—ã—Ö –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏–π",
        "invalid_free_detection": "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ —É–∫–∞–∑–∞—Ç–µ–ª–µ–π",
        "heap_overflow_detection": "–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –≥—Ä–∞–Ω–∏—Ü –≤—ã–¥–µ–ª–µ–Ω–Ω–æ–π –ø–∞–º—è—Ç–∏"
      },
      "stack_integrity_checks": {
        "stack_smashing_detection": "–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–∏—è —Å—Ç–µ–∫–∞",
        "return_address_validation": "–í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è –∞–¥—Ä–µ—Å–æ–≤ –≤–æ–∑–≤—Ä–∞—Ç–∞",
        "local_variable_corruption": "–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ª–æ–∫–∞–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö"
      },
      "transition_criteria": {
        "valgrind_threshold": "–ü–µ—Ä–µ—Ö–æ–¥ –∫ valgrind –ø—Ä–∏ –ø–æ–¥–æ–∑—Ä–µ–Ω–∏–∏ –Ω–∞ heap corruption",
        "clang_threshold": "–ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–æ–º—É –∞–Ω–∞–ª–∏–∑—É –ø—Ä–∏ —Å–ª–æ–∂–Ω—ã—Ö –æ—à–∏–±–∫–∞—Ö",
        "gdb_insufficient": "–ö–æ–≥–¥–∞ gdb –Ω–µ –¥–∞–µ—Ç –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏"
      }
    },
    "parameter_validation_algorithms": {
      "input_parameter_checks": {
        "null_pointer_check": "–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö —É–∫–∞–∑–∞—Ç–µ–ª–µ–π –Ω–∞ NULL",
        "range_validation": "–ü—Ä–æ–≤–µ—Ä–∫–∞ —á–∏—Å–ª–æ–≤—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π –Ω–∞ –¥–æ–ø—É—Å—Ç–∏–º—ã–µ –¥–∏–∞–ø–∞–∑–æ–Ω—ã",
        "string_length_validation": "–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª–∏–Ω —Å—Ç—Ä–æ–∫ –∏ –±—É—Ñ–µ—Ä–æ–≤"
      },
      "output_parameter_checks": {
        "buffer_size_validation": "–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ—Å—Ç–∏ —Ä–∞–∑–º–µ—Ä–∞ –±—É—Ñ–µ—Ä–∞",
        "return_value_validation": "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π",
        "error_code_analysis": "–ê–Ω–∞–ª–∏–∑ –∫–æ–¥–æ–≤ –æ—à–∏–±–æ–∫ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –≤—ã–∑–æ–≤–æ–≤"
      },
      "type_consistency_checks": {
        "pointer_type_validation": "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–æ–≤ —É–∫–∞–∑–∞—Ç–µ–ª–µ–π",
        "structure_field_access": "–í–∞–ª–∏–¥–∞—Ü–∏—è –¥–æ—Å—Ç—É–ø–∞ –∫ –ø–æ–ª—è–º —Å—Ç—Ä—É–∫—Ç—É—Ä",
        "function_signature_matching": "–°–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ —Å–∏–≥–Ω–∞—Ç—É—Ä —Ñ—É–Ω–∫—Ü–∏–π"
      }
    }
  },
  "automation_scripts": {
    "gdb_batch_script_template": {
      "description": "–®–∞–±–ª–æ–Ω –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è gdb batch —Å–∫—Ä–∏–ø—Ç–æ–≤",
      "commands": [
        "set logging file gdb_output.log",
        "set logging on",
        "set pagination off",
        "bt full",
        "info registers",
        "info threads",
        "x/16xw $esp",
        "info proc mappings",
        "quit"
      ]
    },
    "valgrind_analysis_script": {
      "description": "–°–∫—Ä–∏–ø—Ç –¥–ª—è –∫–æ–º–ø–ª–µ–∫—Å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ —Å valgrind",
      "pipeline": [
        "–ó–∞–ø—É—Å–∫ —Å memcheck –¥–ª—è –ø–æ–∏—Å–∫–∞ –æ—à–∏–±–æ–∫ –ø–∞–º—è—Ç–∏",
        "–ê–Ω–∞–ª–∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –Ω–∞ –ø—Ä–µ–¥–º–µ—Ç —É—Ç–µ—á–µ–∫",
        "–ó–∞–ø—É—Å–∫ —Å callgrind –¥–ª—è –ø—Ä–æ—Ñ–∏–ª–∏—Ä–æ–≤–∞–Ω–∏—è",
        "–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞ —Å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º–∏"
      ]
    },
    "comprehensive_debug_script": {
      "description": "–ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –æ—Ç–ª–∞–¥–∫–∏",
      "stages": [
        "strace –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞",
        "gdb –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ backtrace",
        "valgrind –ø—Ä–∏ –ø–æ–¥–æ–∑—Ä–µ–Ω–∏–∏ –Ω–∞ –ø–∞–º—è—Ç—å",
        "clang analyzer –¥–ª—è —Å—Ç–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞"
      ]
    }
  },
  "best_practices": {
    "debugging_workflow": {
      "start_simple": "–ù–∞—á–∏–Ω–∞—Ç—å —Å –ø—Ä–æ—Å—Ç—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ (strace, gdb)",
      "escalate_gradually": "–ü–µ—Ä–µ—Ö–æ–¥–∏—Ç—å –∫ —Ç—è–∂–µ–ª—ã–º –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–º —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏",
      "collect_evidence": "–°–æ–±–∏—Ä–∞—Ç—å –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞ –ø–µ—Ä–µ–¥ –ø—Ä–∏–Ω—è—Ç–∏–µ–º —Ä–µ—à–µ–Ω–∏–π",
      "document_findings": "–î–æ–∫—É–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å –≤—Å–µ –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã –∏ —Ä–µ—à–µ–Ω–∏—è"
    },
    "tool_selection_guidelines": {
      "gdb_for": ["–±—ã—Å—Ç—Ä—ã–π –∞–Ω–∞–ª–∏–∑ –ø–∞–¥–µ–Ω–∏–π", "backtrace", "–ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–Ω–∞—á–µ–Ω–∏–π"],
      "strace_for": ["—Å–∏—Å—Ç–µ–º–Ω—ã–µ –≤—ã–∑–æ–≤—ã", "—Ñ–∞–π–ª–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏", "—Å–µ—Ç—å"],
      "valgrind_for": ["–ø–∞–º—è—Ç—å", "—É—Ç–µ—á–∫–∏", "–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å"],
      "clang_for": ["—Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑", "–ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ –æ—à–∏–±–∫–∏", "–±–æ–ª—å—à–∏–µ –ø—Ä–æ–µ–∫—Ç—ã"]
    },
    "automation_principles": {
      "ci_cd_ready": "–í—Å–µ —Å–∫—Ä–∏–ø—Ç—ã –¥–æ–ª–∂–Ω—ã —Ä–∞–±–æ—Ç–∞—Ç—å –≤ CI/CD",
      "non_interactive": "–ò–∑–±–µ–≥–∞—Ç—å –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã—Ö —Ä–µ–∂–∏–º–æ–≤",
      "structured_output": "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã –≤—ã–≤–æ–¥–∞",
      "error_codes": "–í–æ–∑–≤—Ä–∞—â–∞—Ç—å –ø–æ–Ω—è—Ç–Ω—ã–µ –∫–æ–¥—ã –æ—à–∏–±–æ–∫"
    }
  },
  "integration_requirements": {
    "auto_load_priority": "HIGH",
    "load_condition": "c_development_detected",
    "context_influence": "mandatory_for_c_debugging",
    "behavior_override": "debugging_tools_available",
    "monitoring_enabled": "true"
  }
}


