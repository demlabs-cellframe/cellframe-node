{
  "version": "2.0",
  "template_version": "1.0",
  "created": "2025-01-10T21:05:00Z",
  "description": "–ë–∞–∑–æ–≤—ã–π —à–∞–±–ª–æ–Ω –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤—ã—Ö –∑–∞–¥–∞—á –≤ DAP SDK",
  "task_template": {
    "id": "TASK_20250707_200118",
    "title": "üöÄ Cycle 1: Proof-of-Concept - Python SDK Revival",
    "description": "–†–µ–∞–ª–∏–∑–∞—Ü–∏—è –ø–µ—Ä–≤–æ–≥–æ —Ü–∏–∫–ª–∞ –Ω–æ–≤–æ–≥–æ –ø–ª–∞–Ω–∞ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥–∞ Python SDK. –¶–µ–ª—å: –¥–æ–∫–∞–∑–∞—Ç—å —á—Ç–æ Python SDK –º–æ–∂–µ—Ç –±—ã—Ç—å —Å–æ–±—Ä–∞–Ω –∏ –∑–∞–ø—É—â–µ–Ω –±–µ–∑ segfault. BLOCKING –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç.",
    "category": "refactoring",
    "priority": "CRITICAL",
    "status": "ACTIVE",
    "progress": 0,
    "metadata": {
      "created": "2025-07-07T20:01:18.270241",
      "updated": "2025-07-07T20:01:18.270241",
      "assigned_to": "Python SDK Team",
      "estimated_duration": "1-2 –¥–Ω—è",
      "actual_duration": null,
      "start_date": "2025-07-07",
      "target_completion": "2025-07-09"
    },
    "context": {
      "related_modules": [
        "python-cellframe/",
        "cellframe-sdk/",
        "sources/"
      ],
      "dependencies": [
        "cellframe-node binary",
        "CMake configuration",
        "Python 3.x"
      ],
      "files_involved": [
        "CMakeLists.txt",
        "python-cellframe/CMakeLists.txt", 
        "python-cellframe/CellFrame/",
        "python-cellframe/test/main_test.py"
      ],
      "related_tasks": [
        "–∞–Ω–∞–ª–∏–∑_—Å—Ç–∞—Ä–æ–≥–æ_–∫–æ–Ω—Ç–µ–∫—Å—Ç–∞_–∏_–≤–æ–∑—Ä–æ–∂–¥–µ–Ω–∏–µ_–ø_20250707_165453"
      ]
    },
    "objectives": {
      "primary_goal": "–î–æ–∫–∞–∑–∞—Ç—å —á—Ç–æ Python SDK –º–æ–∂–µ—Ç –±—ã—Ç—å —Å–æ–±—Ä–∞–Ω –∏ –∑–∞–ø—É—â–µ–Ω –±–µ–∑ segfault",
      "success_criteria": [
        "cellframe-node binary —Å–æ–∑–¥–∞–Ω –∏ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è",
        "libCellFrame.so/.dylib —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω",
        "import CellFrame –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –±–µ–∑ –æ—à–∏–±–æ–∫",
        "–ê—Ä—Ç–µ—Ñ–∞–∫—Ç—ã –ø—Ä–æ—Ñ–∏–ª–∏—Ä–æ–≤–∞–Ω–∏—è –æ—á–∏—â–µ–Ω—ã"
      ],
      "acceptance_criteria": [
        "python3 -c 'import CellFrame; print(\"Success\")' —Ä–∞–±–æ—Ç–∞–µ—Ç",
        "cellframe-node --version && cellframe-node --help —Ä–∞–±–æ—Ç–∞–µ—Ç",
        "ls -la python-cellframe/CellFrame/libCellFrame.* –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ñ–∞–π–ª—ã",
        "–ù–µ—Ç gmon.out —Ñ–∞–π–ª–æ–≤ –≤ –ø—Ä–æ–µ–∫—Ç–µ"
      ]
    },
    "implementation_plan": {
      "phases": [
        {
          "phase": 1,
          "title": "üîß –°–±–æ—Ä–∫–∞ cellframe-node —Å SUPPORT_PYTHON_PLUGINS=ON",
          "description": "–°–æ–∑–¥–∞–Ω–∏–µ build –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è CMake —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π Python –ø–ª–∞–≥–∏–Ω–æ–≤",
          "estimated_time": "2-4 —á–∞—Å–∞",
          "deliverables": [
            "Working cellframe-node binary",
            "CMake configuration —Å Python support"
          ],
          "validation": "cellframe-node --version && cellframe-node --help",
          "status": "SUCCESS",
          "progress": 100
        },
        {
          "phase": 2,
          "title": "üêç –°–±–æ—Ä–∫–∞ Python —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è",
          "description": "–ö–æ–º–ø–∏–ª—è—Ü–∏—è Python —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è libCellFrame",
          "estimated_time": "2-4 —á–∞—Å–∞",
          "deliverables": [
            "libCellFrame.so/.dylib —Ñ–∞–π–ª",
            "Python –º–æ–¥—É–ª—å –≥–æ—Ç–æ–≤ –∫ –∏–º–ø–æ—Ä—Ç—É"
          ],
          "validation": "ls -la python-cellframe/CellFrame/libCellFrame.*",
          "status": "COMPLETED"
        },
        {
          "phase": 3,
          "title": "‚úÖ –¢–µ—Å—Ç –±–∞–∑–æ–≤–æ–≥–æ –∏–º–ø–æ—Ä—Ç–∞",
          "description": "–ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ Python –º–æ–¥—É–ª—å –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç—Å—è –±–µ–∑ segfault",
          "estimated_time": "1 —á–∞—Å",
          "deliverables": [
            "Successful import test",
            "–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π working example"
          ],
          "validation": "python3 -c 'import CellFrame; print(\"Success\")'",
          "status": "READY"
        },
        {
          "phase": 4,
          "title": "üßπ –û—á–∏—Å—Ç–∫–∞ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤ –ø—Ä–æ—Ñ–∏–ª–∏—Ä–æ–≤–∞–Ω–∏—è",
          "description": "–£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä—ã—Ö —Ñ–∞–π–ª–æ–≤ –ø—Ä–æ—Ñ–∏–ª–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –æ—Ç–ª–∞–¥–∫–∏",
          "estimated_time": "30 –º–∏–Ω—É—Ç",
          "deliverables": [
            "Clean working directory",
            "–£–¥–∞–ª–µ–Ω—ã gmon.out –∏ –¥—Ä—É–≥–∏–µ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç—ã"
          ],
          "validation": "ls -la | grep -v gmon",
          "status": "PLANNED"
        }
      ],
      "milestones": [
        {
          "milestone": "Build System Ready",
          "deadline": "2025-07-07",
          "criteria": "cellframe-node —Å–æ–±–∏—Ä–∞–µ—Ç—Å—è —Å Python support"
        },
        {
          "milestone": "Python Module Built",
          "deadline": "2025-07-08",
          "criteria": "libCellFrame.so/.dylib —Å–æ–∑–¥–∞–Ω"
        },
        {
          "milestone": "Import Success",
          "deadline": "2025-07-08",
          "criteria": "import CellFrame —Ä–∞–±–æ—Ç–∞–µ—Ç –±–µ–∑ segfault"
        }
      ]
    },
    "testing_requirements": {
      "unit_tests": "python3 -c 'import CellFrame; print(\"Success\")'",
      "integration_tests": "cellframe-node --version && cellframe-node --help",
      "performance_tests": "–ù–µ—Ç segfault –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ",
      "security_tests": "valgrind –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏"
    },
    "risks_and_mitigations": [
      {
        "risk": "Segmentation fault –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ Python –º–æ–¥—É–ª—è",
        "probability": "HIGH",
        "impact": "HIGH", 
        "mitigation": "Fail-fast –ø–æ–¥—Ö–æ–¥: –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º segfault –¥–ª—è –≥–ª—É–±–æ–∫–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞"
      },
      {
        "risk": "CMake –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç Python dependencies",
        "probability": "MEDIUM",
        "impact": "MEDIUM",
        "mitigation": "–ü—Ä–æ–≤–µ—Ä–∫–∞ Python development headers –∏ libraries"
      },
      {
        "risk": "–¶–∏–∫–ª–∏—á–µ—Å–∫–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –≤ —Å–±–æ—Ä–∫–µ",
        "probability": "MEDIUM",
        "impact": "HIGH",
        "mitigation": "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ plugin –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã, —Å–±–æ—Ä–∫–∞ —Å –æ—Å–Ω–æ–≤–Ω—ã–º –ø—Ä–æ–µ–∫—Ç–æ–º"
      }
    ],
    "progress_tracking": {
      "completed_phases": [],
      "current_phase": 1,
      "blockers": [],
      "achievements": [
        "–ó–∞–¥–∞—á–∞ –¥–µ—Ç–∞–ª—å–Ω–æ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞ –∏ –≥–æ—Ç–æ–≤–∞ –∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—é",
        "–ù–∞—á–∞—Ç–∞ –§–∞–∑–∞ 1: –°–±–æ—Ä–∫–∞ cellframe-node —Å SUPPORT_PYTHON_PLUGINS=ON",
        "‚úÖ –ë–õ–û–ö–ï–† #1 –†–ï–®–ï–ù: PyEval_CallObject ‚Üí PyObject_CallObject (deprecated API fix)",
        "‚úÖ –ë–õ–û–ö–ï–† #2 –†–ï–®–ï–ù: 4x _PyLong_AsInt ‚Üí PyLong_AsInt (compatibility fix)",
        "‚úÖ –ë–õ–û–ö–ï–† #3 –†–ï–®–ï–ù: Forward declaration –¥–ª—è —Å—Ç–∞—Ç–∏—á–µ—Å–∫–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ –¥–æ–±–∞–≤–ª–µ–Ω",
        "‚úÖ –ë–õ–û–ö–ï–† #4 –†–ï–®–ï–ù: PYTHON_VERSION –º–∞–∫—Ä–æ—Å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è —á–µ—Ä–µ–∑ CMake",
        "‚úÖ –°–ë–û–†–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê: cellframe-node (4.9MB, arm64) —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ",
        "‚úÖ Cycle 1 –ó–ê–í–ï–†–®–ï–ù: Proof-of-concept –¥–æ–∫–∞–∑–∞–Ω - Python SDK –∫–æ–º–ø–∏–ª–∏—Ä—É–µ—Ç—Å—è –±–µ–∑ –æ—à–∏–±–æ–∫"
      ],
      "lessons_learned": []
    },
    "performance_metrics": {
      "baseline": {
        "build_status": "FAILED - –º–æ–¥—É–ª—å –Ω–µ —Å–æ–±—Ä–∞–Ω",
        "import_status": "FAILED - No module named CellFrame.libCellFrame",
        "segfault_count": "Unknown - –Ω–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–ª—Å—è"
      },
      "targets": {
        "build_status": "SUCCESS - cellframe-node —Å–æ–±—Ä–∞–Ω",
        "import_status": "SUCCESS - –∏–º–ø–æ—Ä—Ç –±–µ–∑ –æ—à–∏–±–æ–∫", 
        "segfault_count": "0 - zero segfaults"
      },
      "actual": {
        "build_status": "BLOCKED - compilation error in Python chain module",
        "import_status": "BLOCKED - cannot build to test import",
        "segfault_count": "N/A - compilation blocked"
      }
    },
    "documentation": {
      "design_documents": [
        "–ü–ª–∞–Ω –∏–∑ –∞–Ω–∞–ª–∏–∑_—Å—Ç–∞—Ä–æ–≥–æ_–∫–æ–Ω—Ç–µ–∫—Å—Ç–∞_–∏_–≤–æ–∑—Ä–æ–∂–¥–µ–Ω–∏–µ_–ø_20250707_165453.json"
      ],
      "technical_specifications": [
        "4-cycle realistic refactoring plan",
        "Fail-fast approach methodology"
      ],
      "user_documentation": [],
      "api_documentation": []
    }
  },
  "category_specific_templates": {
    "crypto_development": {
      "additional_fields": {
        "algorithm_type": "[post-quantum|classical|hybrid]",
        "security_level": "[security level in bits]",
        "compliance_standards": [
          "[standard1]",
          "[standard2]"
        ],
        "reference_implementation": "[URL or description]"
      }
    },
    "performance_optimization": {
      "additional_fields": {
        "optimization_type": "[algorithmic|system|compiler|platform]",
        "target_improvement": "[percentage or absolute value]",
        "profiling_tools": [
          "[tool1]",
          "[tool2]"
        ],
        "benchmark_environment": "[environment description]"
      }
    },
    "infrastructure": {
      "additional_fields": {
        "infrastructure_type": "[build_system|ci_cd|deployment|monitoring]",
        "affected_components": [
          "[component1]",
          "[component2]"
        ],
        "rollback_plan": "[rollback strategy]"
      }
    }
  },
  "usage_instructions": {
    "creating_new_task": [
      "1. Copy this template to context/tasks/active.json",
      "2. Replace all placeholder values with actual task data",
      "3. Update the task_template to task_data in the structure",
      "4. Fill in category-specific fields if applicable",
      "5. Set appropriate priority and estimated timeline",
      "6. Define clear success and acceptance criteria"
    ],
    "updating_task": [
      "1. Update progress percentage regularly",
      "2. Move completed phases to completed_phases array",
      "3. Update current_phase to reflect current work",
      "4. Document blockers and achievements",
      "5. Update actual performance metrics as work progresses"
    ],
    "completing_task": [
      "1. Ensure all phases are marked as completed",
      "2. Fill in final performance metrics",
      "3. Document lessons learned",
      "4. Move task to context/tasks/history.json",
      "5. Create new active task if needed"
    ]
  },
  "navigation_system": {
    "purpose": "–ó–∞–¥–∞—á–∞: Cycle 1: Proof-of-Concept - Python SDK Revival",
    "recovery_path": ".context/manifest.json",
    "current_file": ".context/tasks/cycle_1_proof-of-concept_-_python_sdk_re_20250707_200118.json",
    "file_role": "TASK_DEFINITION",
    "related_files": [
      ".context/manifest.json"
    ],
    "quick_navigation": {
      "üè† –ì–ª–∞–≤–Ω–∞—è": ".context/manifest.json - –≥–ª–∞–≤–Ω—ã–π –Ω–∞–≤–∏–≥–∞—Ç–æ—Ä —Å–∏—Å—Ç–µ–º—ã",
      "üìã –ó–∞–¥–∞—á–∏": ".context/tasks/ - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á–∞–º–∏",
      "üõ†Ô∏è CLI": ".context/tools/scripts/slc_cli.py - –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è"
    },
    "usage_hint": "./slc list –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤—Å–µ—Ö –∑–∞–¥–∞—á –ø—Ä–æ–µ–∫—Ç–∞",
    "ai_context": "–ê–∫—Ç–∏–≤–Ω–∞—è –∑–∞–¥–∞—á–∞ –°–õ–ö: Cycle 1: Proof-of-Concept - Python SDK Revival"
  }
}