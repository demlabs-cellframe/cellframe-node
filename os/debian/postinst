#!/bin/bash -e

DAP_APP_NAME="cellframe-node"
DAP_PREFIX="/opt/$DAP_APP_NAME"

# Check profile.d symlink
[ -e "/etc/profile.d/$DAP_APP_NAME.sh" ] || ln -sf $DAP_PREFIX/share/profile.d/$DAP_APP_NAME.sh /etc/profile.d/$DAP_APP_NAME.sh

#unconditianly create directories on pkg instllation
echo "[*] Creating run, lib, var dirs...."
mkdir -p $DAP_PREFIX/var/{run,lib/wallet,lib/global_db,var/plugins} || true

if [ -e /.dockerenv ]
then
    echo "[ ] No logrotate in docker-container"
else
    echo "[!] Enabling logrotate" 
    chmod 644  $DAP_PREFIX/share/logrotate/$DAP_APP_NAME || true
    chmod 644  $DAP_PREFIX/share/logrotate/logrotate.timer || true
    systemctl enable $DAP_PREFIX/share/logrotate/logrotate.timer || true
fi

#set permissions
echo "[!] Set exec permissions"
chmod +x $DAP_PREFIX/bin/$DAP_APP_NAME-cli $DAP_PREFIX/python/bin/pip3* $DAP_PREFIX/python/bin/python3* || true

# Install wheel files if present
for wheel_dir in "$DAP_PREFIX/share/wheels" "$DAP_PREFIX/share"; do
    if [ -d "$wheel_dir" ]; then
        for wheel_file in "$wheel_dir"/*.whl "$wheel_dir"/*.zip; do
            if [ -f "$wheel_file" ]; then
                echo "[!] Installing wheel: $(basename "$wheel_file")"
                if $DAP_PREFIX/python/bin/pip3 install "$wheel_file" --force-reinstall; then
                    echo "[+] Wheel installed successfully"
                    # Test basic import for pycfhelpers
                    if [[ "$(basename "$wheel_file")" == *"pycfhelpers"* ]]; then
                        if $DAP_PREFIX/python/bin/python3.10 -c "import pycfhelpers; print('[+] pycfhelpers import verified')" 2>/dev/null; then
                            echo "[+] pycfhelpers verification passed"
                        else
                            echo "[!] Warning: pycfhelpers import failed, but installation continued"
                        fi
                    fi
                else
                    echo "[!] Warning: wheel installation failed, continuing anyway"
                fi
            fi
        done
    fi
done

echo "[!] Run cellframe-config for configuration..."
$DAP_PREFIX/bin/cellframe-node-config -i $DAP_PREFIX/share/default.setup

echo "[!] Set cfg permissions"
#set rwo permissions to configs
chmod 666 $(find ${DAP_PREFIX}/etc/ -type f)
#set rwx permissions to dirs
chmod 777 $(find ${DAP_PREFIX}/etc/ -type d)

echo "[!] Setting up cellframe-node as service"
$DAP_PREFIX/bin/cellframe-node-config -e service enable

if [ -e "$DAP_PREFIX/bin/cellframe-diagtool" ]; then
    echo "[!] Starting up cellframe-diagtool"
    systemctl --system enable $DAP_PREFIX/share/cellframe-diagtool.service || true
    systemctl start cellframe-diagtool || true

    echo "[!] Starting up cellframe-tray"

    if [ -d /run/user/$SUDO_UID ]; then
        export XDG_RUNTIME_DIR=/run/user/$SUDO_UID
        echo "Use $XDG_RUNTIME_DIR as XDG_RUNTIME_DIR, for tray install"
        su  $SUDO_USER -c "systemctl --user enable $DAP_PREFIX/share/cellframe-tray.service" || true
        su  $SUDO_USER -c "systemctl --user start cellframe-tray.service" || true
    fi
fi

if [ -e "$DAP_PREFIX/share/cellframe-updater.service" ]; then
    echo "[!] Starting up cellframe-updater"
    systemctl --system enable $DAP_PREFIX/share/cellframe-updater.service || true
    systemctl --system enable $DAP_PREFIX/share/cellframe-updater.timer || true
    systemctl start cellframe-updater || true
    systemctl start cellframe-updater.timer || true
fi

echo "[!] Starting up cellframe-node"
$DAP_PREFIX/bin/cellframe-node-config -e service start

echo "[!] Done"
