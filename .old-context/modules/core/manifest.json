{
  "name": "Smart Layered Context",
  "version": "3.0",
  "architecture_version": "chipmunk_optimization_completed",
  "created": "2025-01-10T20:45:00Z",
  "updated": "2025-01-14T18:00:00Z",
  "project": "Chipmunk Performance Optimization (Phase 0 - –ó–ê–í–ï–†–®–ï–ù ‚úÖ)",
  "previous_project": "Smart Layered Context v2.1.2 (–æ—Ç–ª–æ–∂–µ–Ω)",
  "status": "–£–°–ü–ï–®–ù–û –ó–ê–í–ï–†–®–ï–ù - –ì–û–¢–û–í –î–õ–Ø PRODUCTION",
  
  "navigation_system": {
    "file_role": "ROOT_MANIFEST",
    "description": "üó∫Ô∏è –ö–æ—Ä–Ω–µ–≤–æ–π –Ω–∞–≤–∏–≥–∞—Ç–æ—Ä - –æ—Ç—Å—é–¥–∞ –º–æ–∂–Ω–æ –¥–æ–±—Ä–∞—Ç—å—Å—è –¥–æ –ª—é–±–æ–≥–æ —Ñ–∞–π–ª–∞ —Å–∏—Å—Ç–µ–º—ã",
    "cursor_ide_note": "–û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–æ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ Cursor IDE —á–µ—Ä–µ–∑ –ø—Ä–æ–º–ø—Ç—ã",
    "recovery_instructions": {
      "if_ai_lost_context": [
        "–≠—Ç–æ—Ç —Ñ–∞–π–ª - –∫–æ—Ä–Ω–µ–≤–æ–π –º–∞–Ω–∏—Ñ–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã Smart Layered Context",
        "–û—Ç—Å—é–¥–∞ –º–æ–∂–Ω–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–æ–ª–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç –ª—é–±–æ–π –∑–∞–¥–∞—á–∏", 
        "–°–ª–µ–¥—É–π—Ç–µ —Å—Å—ã–ª–∫–∞–º –≤ —Å–µ–∫—Ü–∏–∏ 'context_map' –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –Ω—É–∂–Ω—ã—Ö –º–æ–¥—É–ª–µ–π",
        "–î–ª—è —Ç–µ–∫—É—â–µ–π –∑–∞–¥–∞—á–∏: current_task ‚Üí tasks/active.json –∏–ª–∏ context.reflection/.context/tasks/",
        "–í Cursor IDE: –ø—Ä–æ—Å—Ç–æ –ø–æ–ø—Ä–æ—Å–∏—Ç–µ –ò–ò –∑–∞–≥—Ä—É–∑–∏—Ç—å —ç—Ç–æ—Ç —Ñ–∞–π–ª –∏ –æ–±—ä—è—Å–Ω–∏—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É"
      ]
    },
    
    "navigation_tree": {
      "current_location": "üìç core/manifest.json (ROOT)",
      "parent": null,
      "children": {
        "core_files": [
          "core/standards.json",
          "core/project.json"
        ],
        "modules": [
          "modules/ai_ml/prompt_engineering.json",
          "modules/ai_ml/fine_tuning_workflow.json", 
          "modules/ai_ml/ai_agent_development.json",
          "modules/languages/python/python_development.json",
          "modules/languages/javascript/javascript_development.json",
          "modules/languages/c/c_development.json",
          "modules/methodologies/obsidian_workflow.json",
          "modules/methodologies/documentation_systems.json",
          "modules/methodologies/context_systems_development.json",
          "modules/tools/obsidian_workflow.json",
          "modules/projects/dap_sdk_project.json"
        ],
        "tasks": [
          "tasks/active.json",
          "context.reflection/.context/tasks/current_meta_task.json",
          "tasks/completed/valora_restaking/valora_analysis_completed.json"
        ],
        "documentation": [
          "README.md",
          "USAGE_GUIDE.md",
          "NAVIGATION_DEMO.md"
        ]
      }
    },
    
    "quick_recovery_paths": {
      "lost_in_ai_ml": "üìÇ modules/ai_ml/ ‚Üí core/manifest.json ‚Üí –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–æ–ª–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç",
      "lost_in_languages": "üìÇ modules/languages/ ‚Üí core/manifest.json ‚Üí –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–æ–ª–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç", 
      "lost_in_tasks": "üìÇ tasks/ –∏–ª–∏ context.reflection/ ‚Üí core/manifest.json ‚Üí –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–æ–ª–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç",
      "lost_anywhere": "üè† –õ—é–±–æ–π .json —Ñ–∞–π–ª —Å–æ–¥–µ—Ä–∂–∏—Ç navigation_system ‚Üí core/manifest.json",
      "cursor_ide_recovery": "üé® –í Cursor: –ø–æ–ø—Ä–æ—Å–∏—Ç–µ –ò–ò –∑–∞–≥—Ä—É–∑–∏—Ç—å core/manifest.json –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è"
    }
  },
  
  "context_map": {
    "core_layer": {
      "description": "Always loaded - essential project information",
      "files": [
        "core/standards.json",
        "core/project.json"
      ],
      "auto_load": true,
      "size_estimate": "~15KB total",
      "navigation_links": {
        "standards": "core/standards.json - coding standards –∏ best practices",
        "project": "core/project.json - project overview –∏ architecture"
      }
    },
    "current_task": {
      "source": "context.reflection/.context/tasks/current_meta_task.json",
      "description": "Current active task with progress tracking",
      "auto_load_when": "user starts work session",
      "fallback": "tasks/templates/task_template.json",
      "navigation_links": {
        "active_tasks": "context.reflection/.context/tasks/ - current system development",
        "task_templates": "tasks/templates/ - task creation templates"
      }
    },
    "modules": {
      "description": "Load on demand based on work context",
      "available": {
        "ai_ml": {
          "description": "ü§ñ AI/ML Development Templates",
          "files": {
            "prompt_engineering": "modules/ai_ml/prompt_engineering.json",
            "fine_tuning": "modules/ai_ml/fine_tuning_workflow.json", 
            "ai_agents": "modules/ai_ml/ai_agent_development.json"
          },
          "keywords": ["ai", "ml", "llm", "prompt", "fine-tuning", "agents", "artificial intelligence"]
        },
        "languages": {
          "description": "üíª Programming Language Templates",
          "files": {
            "python": "modules/languages/python/python_development.json",
            "javascript": "modules/languages/javascript/javascript_development.json",
            "c_cpp": "modules/languages/c/c_development.json"
          },
          "keywords": ["python", "javascript", "c", "cpp", "programming", "development"]
        },
        "methodologies": {
          "description": "üìã Development Methodologies",
          "files": {
            "obsidian": "modules/methodologies/obsidian_workflow.json",
            "documentation": "modules/methodologies/documentation_systems.json",
            "context_systems": "modules/methodologies/context_systems_development.json",
            "performance_optimization": "modules/methodologies/performance_optimization.json",
            "defi_security_audit": "modules/methodologies/defi_security_audit.json",
            "intelligent_context_prediction": "modules/methodologies/intelligent_context_prediction.json"
          },
          "keywords": ["methodology", "workflow", "documentation", "obsidian", "context", "performance", "optimization", "profiling", "defi", "security", "audit", "smart-contracts", "intelligent-loading", "context-prediction", "adaptive-systems"]
        },
        "tools": {
          "description": "üõ†Ô∏è Development Tools",
          "files": {
            "obsidian_workflow": "modules/tools/obsidian_workflow.json",
            "slc_evolution_export": "modules/tools/slc_evolution_export.json",
            "slc_evolution_import": "modules/tools/slc_evolution_import.json",
            "slc_analytics": "modules/tools/slc_analytics.json",
            "context_usage_tracker": "modules/tools/context_usage_tracker.json",
            "intelligent_recommendation_engine": "modules/tools/intelligent_recommendation_engine.json",
            "change_detector": "modules/tools/change_detector.json"
          },
          "keywords": ["tools", "workflow", "automation", "evolution", "export", "import", "synchronization", "change-detection", "conflict-resolution", "analytics", "metrics", "performance", "optimization", "usage-tracking", "intelligent-loading", "tf-idf", "semantic-analysis", "recommendations", "nlp", "versioning", "diff", "git-like"]
        },
        "projects": {
          "description": "üèóÔ∏è Specific Project Templates",
          "files": {
            "dap_sdk": "modules/projects/dap_sdk_project.json",
            "cryptography": "modules/projects/cryptography_project.json"
          },
          "keywords": ["project", "dap", "sdk", "cellframe", "blockchain", "crypto", "cryptography", "defi", "smart-contracts", "post-quantum", "security-audit"]
        }
      }
    }
  },
  
  "smart_suggestions": {
    "work_patterns": {
      "ai_ml_development": {
        "description": "AI/ML —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –∏ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è",
        "keywords": ["ai", "ml", "llm", "prompt", "fine-tuning", "agents", "neural", "model"],
        "suggested_modules": ["modules/ai_ml/prompt_engineering.json", "modules/ai_ml/fine_tuning_workflow.json"],
        "suggested_tools": ["tools/scripts/slc_cli.py"],
        "priority": "high"
      },
      "prompt_engineering": {
        "description": "–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø—Ä–æ–º–ø—Ç–æ–≤",
        "keywords": ["prompt", "llm", "gpt", "claude", "optimization", "conversation", "chatbot"],
        "suggested_modules": ["modules/ai_ml/prompt_engineering.json"],
        "suggested_tools": ["tools/scripts/slc_cli.py create ai_ml/prompt_engineering.json"],
        "priority": "critical"
      },
      "python_development": {
        "description": "Python —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞ (AI/ML, web, blockchain)",
        "keywords": ["python", "django", "fastapi", "pytorch", "tensorflow", "cellframe"],
        "suggested_modules": ["modules/languages/python/python_development.json"],
        "suggested_tools": ["tools/scripts/slc_cli.py create languages/python/python_development.json"],
        "priority": "high"
      },
      "knowledge_management": {
        "description": "–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è –∑–Ω–∞–Ω–∏–π –∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏",
        "keywords": ["obsidian", "documentation", "knowledge", "notes", "wiki", "markdown"],
        "suggested_modules": ["modules/methodologies/obsidian_workflow.json", "modules/methodologies/documentation_systems.json"],
        "suggested_tools": ["tools/scripts/slc_cli.py create tools/obsidian_workflow.json"],
        "priority": "medium"
      },
      "crypto_development": {
        "description": "–ö—Ä–∏–ø—Ç–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∞—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –∏ –±–ª–æ–∫—á–µ–π–Ω –ø—Ä–æ–µ–∫—Ç—ã",
        "keywords": ["crypto", "blockchain", "defi", "smart-contracts", "post-quantum", "security", "audit", "valora", "liquid-staking"],
        "suggested_modules": ["modules/projects/cryptography_project.json", "modules/projects/dap_sdk_project.json"],
        "suggested_tools": ["tools/scripts/slc_cli.py create projects/cryptography_project.json"],
        "priority": "high"
      },
      "slk_evolution": {
        "description": "–°–õ–ö —Å–∏—Å—Ç–µ–º–∞ —ç–≤–æ–ª—é—Ü–∏–∏ –∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–π", 
        "keywords": ["evolution", "export", "import", "synchronization", "update", "changes", "conflict", "resolution", "slk-update"],
        "suggested_modules": ["modules/tools/slc_evolution_export.json", "modules/tools/slc_evolution_import.json"],
        "suggested_tools": ["tools/scripts/slc_cli.py export-changes", "tools/scripts/slc_cli.py import-update"],
        "priority": "high"
      }
    }
  },
  
  "system_status": {
    "version": "2.1.2",
    "release_date": "2025-01-14",
    "template_count": 11,  
    "categories": 5,
    "cli_available": true,
    "health_check": "python3 tools/scripts/slc_cli.py validate",
    "self_development_progress": {
      "overall_completion": "82%",
      "tasks_status": {
        "completed": 2,
        "core_implementation": 2,
        "architecture_ready": 1,
        "total": 5
      },
      "critical_systems": {
        "evolution_sync": "75% - –±–∞–∑–æ–≤–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞",
        "intelligent_recommendations": "90% - –ø–æ–ª–Ω–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è",
        "usage_tracking": "90% - –ø–æ–ª–Ω–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è",
        "analytics": "100% - –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–≤–µ—Ä—à–µ–Ω–∞ (–§–∞–∑–∞ 2)", 
        "cli_extensions": "60% - –±–∞–∑–æ–≤–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è"
      },
      "next_priority": "–î–æ—Ä–∞–±–æ—Ç–∫–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å–∏—Å—Ç–µ–º —ç–≤–æ–ª—é—Ü–∏–∏ –∏ –ö–õ–ò"
    }
  },
  
  "recovery_procedures": {
    "context_lost": {
      "step_1": "–ù–∞–π—Ç–∏ –ª—é–±–æ–π .json —Ñ–∞–π–ª –≤ —Å–∏—Å—Ç–µ–º–µ",
      "step_2": "–ù–∞–π—Ç–∏ —Å–µ–∫—Ü–∏—é 'navigation_system' ‚Üí 'recovery_path'", 
      "step_3": "–°–ª–µ–¥–æ–≤–∞—Ç—å —Å—Å—ã–ª–∫–µ –Ω–∞ core/manifest.json (—ç—Ç–æ—Ç —Ñ–∞–π–ª)",
      "step_4": "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å context_map –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –Ω—É–∂–Ω—ã—Ö –º–æ–¥—É–ª–µ–π",
      "step_5": "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å current_task –¥–ª—è —Ç–µ–∫—É—â–µ–π —Ä–∞–±–æ—Ç—ã"
    },
    "quick_commands": {
      "validate_system": "python3 tools/scripts/slc_cli.py validate",
      "list_templates": "python3 tools/scripts/slc_cli.py list",
      "search_templates": "python3 tools/scripts/slc_cli.py search KEYWORD",
      "get_template_info": "python3 tools/scripts/slc_cli.py info TEMPLATE_PATH",
      "create_project": "python3 tools/scripts/slc_cli.py create TEMPLATE_PATH PROJECT_NAME"
    }
  },
  
  "navigation_hints": {
    "need_ai_ml": "ü§ñ For AI/ML work: modules/ai_ml/",
    "need_languages": "üíª For language-specific: modules/languages/",
    "need_methodology": "üìã For workflows: modules/methodologies/",
    "need_current_task": "üìã For current progress: context.reflection/.context/tasks/",
    "need_tools": "üõ†Ô∏è For automation: tools/scripts/slc_cli.py",
    "need_standards": "üìê For coding standards: core/standards.json",
    "need_project_overview": "üèóÔ∏è For project info: core/project.json"
  },
  
  "intelligent_loading": {
    "user_query_analysis": {
      "ai_ml_related": {
        "patterns": ["ai", "ml", "llm", "prompt", "fine-tuning", "agent", "chatbot", "gpt", "claude"],
        "auto_suggest": ["modules/ai_ml/prompt_engineering.json", "modules/ai_ml/ai_agent_development.json"],
        "explanation": "Detected AI/ML work, suggesting AI/ML modules"
      },
      "python_related": {
        "patterns": ["python", "django", "fastapi", "pytorch", "tensorflow", "pandas", "cellframe"],
        "auto_suggest": ["modules/languages/python/python_development.json"],
        "explanation": "Detected Python work, suggesting Python development module"
      },
      "javascript_related": {
        "patterns": ["javascript", "react", "vue", "node", "web3", "ethereum", "frontend"],
        "auto_suggest": ["modules/languages/javascript/javascript_development.json"],
        "explanation": "Detected JavaScript work, suggesting JavaScript development module"
      },
      "documentation_related": {
        "patterns": ["documentation", "docs", "markdown", "wiki", "obsidian", "knowledge"],
        "auto_suggest": ["modules/methodologies/documentation_systems.json", "modules/methodologies/obsidian_workflow.json"],
        "explanation": "Detected documentation work, suggesting documentation modules"
      },
      "crypto_blockchain_related": {
        "patterns": ["crypto", "blockchain", "defi", "smart-contract", "post-quantum", "security", "audit", "valora", "liquid-staking", "cryptography"],
        "auto_suggest": ["modules/projects/cryptography_project.json", "modules/projects/dap_sdk_project.json", "modules/methodologies/defi_security_audit.json"],
        "explanation": "Detected crypto/blockchain work, suggesting specialized cryptography, blockchain modules and DeFi audit methodology"
      }
    }
  },
  
  "deployment_info": {
    "ready_for_deployment": true,
    "deployment_script": "tools/deployment/prepare_release.sh",
    "cli_tool": "tools/scripts/slc_cli.py",
    "deployment_docs": [
      "README.md",
      "USAGE_GUIDE.md", 
      "DEPLOYMENT.md"
    ]
  },
  
  "usage_stats": {
    "most_used_modules": ["ai_ml", "languages", "methodologies"],
    "typical_workflow": [
      "Load core context (manifest + standards + project)",
      "Search templates: slc_cli.py search KEYWORD",
      "Get template info: slc_cli.py info TEMPLATE_PATH", 
      "Create project: slc_cli.py create TEMPLATE_PATH PROJECT_NAME"
    ],
    "optimization_hint": "Use CLI for efficient template management"
  },
  
  "communication_rules": {
    "language_preferences": {
      "primary_language": "russian",
      "guidelines": [
        "–í—Å–µ–≥–¥–∞ –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ",
        "–ò–∑–±–µ–≥–∞—Ç—å –ø—Ä—è–º—ã—Ö –≤—Å—Ç–∞–≤–æ–∫ –∞–Ω–≥–ª–∏–π—Å–∫–∏—Ö —Å–ª–æ–≤ –≥–¥–µ –≤–æ–∑–º–æ–∂–Ω–æ",
        "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ä—É—Å—Å–∫–∏–µ —ç–∫–≤–∏–≤–∞–ª–µ–Ω—Ç—ã —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö —Ç–µ—Ä–º–∏–Ω–æ–≤",
        "–ü—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –∞–Ω–≥–ª–∏—Ü–∏–∑–º–æ–≤ - –¥–∞–≤–∞—Ç—å —Ä—É—Å—Å–∫–æ–µ –ø–æ—è—Å–Ω–µ–Ω–∏–µ",
        "–°–∏—Å—Ç–µ–º–∞ –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è –°–õ–ö (–°–∏—Å—Ç–µ–º–∞ –°–ª–æ—ë–Ω–æ–≥–æ –ö–æ–Ω—Ç–µ–∫—Å—Ç–∞), –Ω–µ –°–ö–°"
      ],
      "technical_terms_policy": "–ü—Ä–µ–¥–ø–æ—á–∏—Ç–∞—Ç—å —Ä—É—Å—Å–∫–∏–µ –∞–Ω–∞–ª–æ–≥–∏, –∞–Ω–≥–ª–∏—Ü–∏–∑–º—ã —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏"
    },
    "quality_control": {
      "report_verification": {
        "rule": "–õ—é–±–æ–π –æ—Ç—á–µ—Ç –æ –ø—Ä–æ–¥–µ–ª–∞–Ω–Ω–æ–π —Ä–∞–±–æ—Ç–µ –¥–æ–ª–∂–µ–Ω –ø—Ä–æ–≤–µ—Ä—è—Ç—å—Å—è –¢–†–ò–ñ–î–´ –Ω–∞ –ø—Ä–∞–≤–¥–∏–≤–æ—Å—Ç—å",
        "verification_steps": [
          "–ü—Ä–æ–≤–µ—Ä–∫–∞ 1: –°–æ–ø–æ—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–ª–µ–Ω–∏—è —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ —Ñ–∞–π–ª–∞–º–∏ –∏ –∫–æ–¥–æ–º",
          "–ü—Ä–æ–≤–µ—Ä–∫–∞ 2: –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –∑–∞—è–≤–ª–µ–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å",
          "–ü—Ä–æ–≤–µ—Ä–∫–∞ 3: –£–±–µ–¥–∏—Ç—å—Å—è —á—Ç–æ –ø—Ä–æ–≥—Ä–µ—Å—Å –Ω–µ –∑–∞–≤—ã—à–µ–Ω"
        ],
        "mandatory": true,
        "applies_to": "–≤—Å–µ –æ—Ç—á–µ—Ç—ã –æ —Å—Ç–∞—Ç—É—Å–µ, –ø—Ä–æ–≥—Ä–µ—Å—Å–µ –∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è—Ö"
      }
    }
  },

  "ai_optimization": {
    "context_loading_strategy": {
      "always_load": [
        "core/manifest.json (this file)",
        "core/standards.json", 
        "core/project.json"
      ],
      "load_on_ai_work": ["modules/ai_ml/*.json"],
      "load_on_language_work": ["modules/languages/{language}/*.json"],
      "load_on_methodology_work": ["modules/methodologies/*.json"],
      "load_rarely": ["docs/*.md", "tools/templates/*"]
    },
    "memory_optimization": {
      "core_files_size": "~15KB total",
      "module_files_size": "~15-25KB each",
      "recommendation": "Load core + 1-2 modules maximum per session"
    },
    "session_patterns": {
      "ai_development": "manifest + standards + project + ai_ml modules",
      "language_development": "manifest + standards + project + language module",
      "documentation_work": "manifest + standards + project + methodology modules",
      "new_project": "manifest + appropriate template module"
    }
  }
} 