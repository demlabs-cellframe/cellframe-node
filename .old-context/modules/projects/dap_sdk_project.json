{
  "type": "specialized_template_module",
  "domain": "dap_sdk_project",
  "version": "2.1.0",
  "created": "2025-01-14T19:30:00Z",
  "updated": "2025-01-14T19:30:00Z",
  "imported_from": "context-old v2.0",
  "template_source": "–î–∞–º–ø –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ DAP SDK (.dumps/dap-sdk.17816.0/)",
  
  "navigation_system": {
    "file_role": "PROJECT_TEMPLATE_DAP_SDK",
    "description": "üîê DAP SDK / Cellframe –±–ª–æ–∫—á–µ–π–Ω —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞ —Å –ø–æ—Å—Ç-–∫–≤–∞–Ω—Ç–æ–≤–æ–π –∫—Ä–∏–ø—Ç–æ–≥—Ä–∞—Ñ–∏–µ–π",
    "recovery_path": {
      "parent": "core/manifest.json",
      "siblings": ["projects/cryptography_project.json"],
      "children": ["Specialized blockchain project generation"]
    },
    "quick_navigation": {
      "üè† Return to root": "core/manifest.json - –≥–ª–∞–≤–Ω—ã–π –Ω–∞–≤–∏–≥–∞—Ç–æ—Ä —Å–∏—Å—Ç–µ–º—ã",
      "üíª C/C++ development": "languages/c/c_development.json - —Å–∏—Å—Ç–µ–º–Ω–æ–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ",
      "üìä Performance optimization": "methodologies/performance_optimization.json - –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏",
      "üîê Crypto projects": "projects/cryptography_project.json - –∫—Ä–∏–ø—Ç–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–µ–∫—Ç—ã"
    },
    "usage_hint": "slc_cli.py create projects/dap_sdk_project.json my_blockchain_app"
  },
  
  "template_info": {
    "name": "DAP SDK / Cellframe Blockchain Development",
    "description": "–°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —à–∞–±–ª–æ–Ω –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –¥–µ—Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π —Å –ø–æ—Å—Ç-–∫–≤–∞–Ω—Ç–æ–≤–æ–π –∫—Ä–∏–ø—Ç–æ–≥—Ä–∞—Ñ–∏–µ–π",
    "version": "2.1.0",
    "domain": "blockchain_cryptography",
    "specialization": "post_quantum_crypto",
    "applicability": "Production-ready –±–ª–æ–∫—á–µ–π–Ω –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å –∫–≤–∞–Ω—Ç–æ–≤–æ-—É—Å—Ç–æ–π—á–∏–≤–æ–π –∫—Ä–∏–ø—Ç–æ–≥—Ä–∞—Ñ–∏–µ–π",
    "target_projects": [
      "Decentralized Application Platform (DAP)",
      "Post-quantum blockchain networks",
      "Quantum-resistant multi-signature systems",
      "High-performance cryptographic libraries",
      "Cross-platform C applications"
    ]
  },
  
  "project_identity": {
    "full_name": "DAP SDK",
    "description": "Decentralized Application Platform Software Development Kit with quantum-resistant cryptography",
    "primary_languages": ["C", "C++"],
    "architecture": "Modular post-quantum blockchain platform",
    "license": "Cellframe License",
    "target_platforms": ["Linux", "macOS", "Windows"]
  },
  
  "legacy_knowledge": {
    "source": "context-old v2.0 - Production-tested expertise",
    "chipmunk_optimization": {
      "algorithm": "Lattice-based multi-signature scheme",
      "status": "‚úÖ PRODUCTION READY - 100% test pass rate",
      "phase_1": "Hash function optimization (secp256k1_sha256 integration)",
      "phase_2": "Vectorization infrastructure (block processing 4/8 elements)",
      "phase_3": "Aggressive SIMD optimization (AVX2/NEON target)",
      "performance_baselines": {
        "key_generation": "310ms per signer (baseline)",
        "signing": "32.8ms per signature",
        "throughput": "2.3 signatures/second",
        "target_improvement": "3-5x performance boost via SIMD"
      }
    },
    "post_quantum_suite": {
      "primary": "Chipmunk (lattice-based multi-signature)",
      "supporting": ["Kyber (KEM)", "Dilithium (signatures)", "Falcon (compact signatures)", "MSRLN (key exchange)", "SPHINCS+ (hash-based)"],
      "philosophy": "Post-quantum algorithms ALWAYS have priority over classical"
    }
  },
  
  "architecture": {
    "core_modules": {
      "crypto": {
        "description": "–ö—Ä–∏–ø—Ç–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∏ –∞–ª–≥–æ—Ä–∏—Ç–º—ã",
        "focus": "Post-quantum cryptography implementation",
        "key_algorithms": ["Chipmunk", "Kyber", "Dilithium", "Falcon"],
        "classical_deprecated": ["ECDSA", "RSA - compatibility only"]
      },
      "core": {
        "description": "–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–∞",
        "components": ["API framework", "Memory management", "Error handling"]
      },
      "net": {
        "description": "–°–µ—Ç–µ–≤—ã–µ –∏ –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–æ–Ω–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã",
        "features": ["HTTP server/client", "JSON-RPC", "P2P communication"]
      },
      "global_db": {
        "description": "–°–∏—Å—Ç–µ–º–∞ –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö",
        "support": "SQLite (stable), PostgreSQL (partial)"
      },
      "io": {
        "description": "–í–≤–æ–¥/–≤—ã–≤–æ–¥ –∏ —Å–æ–±—ã—Ç–∏—è",
        "status": "Core functionality working"
      }
    },
    
    "build_system": {
      "primary": "CMake",
      "configurations": {
        "debug": "build_debug/ - Debug build with symbols",
        "release": "build.release/ - Optimized release build",
        "test": "build_test/ - Test configuration with full suite",
        "ci": "build_ci/ - CI/CD pipeline build",
        "asan": "build_asan/ - AddressSanitizer for memory debugging"
      }
    }
  },
  
  "development_environment": {
    "supported_platforms": ["macOS", "Linux", "Windows"],
    "primary_languages": ["C", "C++"],
    "build_system": "CMake",
    "testing_framework": "Custom DAP test framework",
    "profiling_strategy": {
      "macos": "Release builds + integrated micro-benchmarks",
      "linux": "Callgrind profiling with RelWithDebInfo builds"
    },
    "quality_assurance": {
      "test_suites": ["crypto-test", "core-test", "net-test"],
      "crypto_status": "‚úÖ 100% PASS - Production ready",
      "core_status": "‚úÖ 100% PASS - Stable",
      "net_status": "‚ö†Ô∏è WARNINGS - Functionally stable"
    }
  },
  
  "security_framework": {
    "post_quantum_priority": {
      "rule": "–ü–æ—Å—Ç-–∫–≤–∞–Ω—Ç–æ–≤—ã–µ –∞–ª–≥–æ—Ä–∏—Ç–º—ã –í–°–ï–ì–î–ê –∏–º–µ—é—Ç –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç",
      "rationale": "–ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –∫ –∫–≤–∞–Ω—Ç–æ–≤–æ–π —É–≥—Ä–æ–∑–µ –≤–∞–∂–Ω–µ–µ —Ç–µ–∫—É—â–µ–π –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏",
      "policy": "Chipmunk, Kyber, MSRLN - –æ—Å–Ω–æ–≤–Ω—ã–µ –∞–ª–≥–æ—Ä–∏—Ç–º—ã –¥–ª—è production"
    },
    "security_practices": {
      "memory_management": "Always zero sensitive memory before freeing",
      "constant_time_ops": "Constant-time comparison for sensitive data",
      "secure_random": "Use DAP SDK random functions, not system rand()",
      "no_openssl_policy": "–°—Ç—Ä–æ–≥–∞—è –ø–æ–ª–∏—Ç–∏–∫–∞ '–ù–ï–¢ OpenSSL' - —Ç–æ–ª—å–∫–æ DAP SDK –∫—Ä–∏–ø—Ç–æ–≥—Ä–∞—Ñ–∏—è"
    }
  },
  
  "performance_optimization": {
    "methodology": "3-phase optimization strategy",
    "current_bottlenecks": {
      "ntt_operations": "55.3% of total runtime in Chipmunk",
      "memory_allocation": "chipmunk_keypair: 52KB heap allocation",
      "logging_overhead": "log_it() runtime overhead",
      "modular_arithmetic": "Barrett reduction vs compiler % optimization"
    },
    "optimization_techniques": {
      "simd_vectorization": "AVX2/NEON block processing 4/8 elements",
      "memory_optimization": "Stack allocation vs heap for temporary data",
      "algorithm_tuning": "Manual Barrett reduction 2.4x faster than compiler",
      "cache_optimization": "Memory layout optimization for hot paths"
    },
    "benchmarking": {
      "framework": "Integrated micro-benchmarks",
      "environments": "Apple Silicon M-series baseline",
      "regression_testing": "Continuous performance monitoring"
    }
  },
  
  "project_structure": {
    "directories": {
      "src/crypto/": "Post-quantum cryptographic implementations",
      "src/core/": "Framework core components",
      "src/net/": "Network and communication layer",
      "test/": "Test suites and benchmarks",
      "build_*/": "Build configurations",
      "docs/": "Technical documentation"
    },
    "key_files": {
      "CMakeLists.txt": "Main build configuration",
      "crypto/src/chipmunk/": "Primary Chipmunk implementation",
      "crypto/test/crypto/": "Crypto test suite",
      "README.md": "Project overview and setup"
    }
  },
  
  "deployment_readiness": {
    "production_status": {
      "core_crypto": "‚úÖ PRODUCTION READY",
      "chipmunk_specific": "‚úÖ PRODUCTION READY - 100% test pass rate",
      "database": "‚úÖ READY (SQLite), ‚ö†Ô∏è PostgreSQL needs dependency",
      "networking": "‚úÖ READY (warnings only)",
      "overall_status": "‚úÖ CORE DEPLOYMENT READY"
    },
    "next_milestones": [
      "Complete Chipmunk SIMD optimization (Phase 3)",
      "Achieve 3-5x performance improvements",
      "Platform-specific optimizations",
      "Security audit completion"
    ]
  },
  
  "template_usage": {
    "create_command": "slc_cli.py create projects/dap_sdk_project.json my_blockchain_app",
    "generated_structure": [
      "CMakeLists.txt with DAP SDK configuration",
      "src/crypto/ with post-quantum algorithm stubs",
      "src/core/ with framework foundation",
      "test/ with crypto test framework",
      "docs/ with DAP SDK documentation templates"
    ],
    "next_steps": [
      "Configure post-quantum algorithm selection",
      "Set up cross-platform build system",
      "Implement performance benchmarking",
      "Add security validation tests"
    ]
  },
  
  "integration_points": {
    "related_templates": {
      "performance_optimization": "methodologies/performance_optimization.json",
      "c_development": "languages/c/c_development.json",
      "cryptography": "projects/cryptography_project.json"
    },
    "suggested_workflow": [
      "1. Generate DAP SDK project structure",
      "2. Load performance optimization methodology",
      "3. Apply C/C++ system programming patterns",
      "4. Implement crypto-specific optimizations"
    ]
  },
  
  "core_philosophy": {
    "post_quantum_priority": {
      "rule": "–ü–æ—Å—Ç-–∫–≤–∞–Ω—Ç–æ–≤—ã–µ –∞–ª–≥–æ—Ä–∏—Ç–º—ã –í–°–ï–ì–î–ê –∏–º–µ—é—Ç –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç",
      "rationale": "–ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –∫ –∫–≤–∞–Ω—Ç–æ–≤–æ–π —É–≥—Ä–æ–∑–µ –≤–∞–∂–Ω–µ–µ —Ç–µ–∫—É—â–µ–π –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏",
      "policy": "Chipmunk, Kyber, MSRLN - –æ—Å–Ω–æ–≤–Ω—ã–µ –∞–ª–≥–æ—Ä–∏—Ç–º—ã –¥–ª—è production"
    },
    "security_first": "–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –ø—Ä–µ–≤—ã—à–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏",
    "no_openssl_policy": "–°—Ç—Ä–æ–≥–∞—è –ø–æ–ª–∏—Ç–∏–∫–∞ '–ù–ï–¢ OpenSSL' - –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ–ª—å–∫–æ DAP SDK –∫—Ä–∏–ø—Ç–æ–≥—Ä–∞—Ñ–∏—é",
    "quantum_resistance": "–í—Å–µ –Ω–æ–≤—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∫–≤–∞–Ω—Ç–æ–≤–æ-—É—Å—Ç–æ–π—á–∏–≤—ã–º–∏"
  },
  
  "current_development_focus": {
    "primary_task": "Chipmunk Performance Optimization",
    "current_phase": "PHASE 2 - VECTORIZATION OPTIMIZATIONS",
    "progress": "25% - –≥–æ—Ç–æ–≤–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ –¥–ª—è Phase 3",
    "priority": "HIGH",
    "description": "–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –ø–æ—Å—Ç-–∫–≤–∞–Ω—Ç–æ–≤–æ–≥–æ –∞–ª–≥–æ—Ä–∏—Ç–º–∞ Chipmunk –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –∫—Ä–∏–ø—Ç–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–π —Å—Ç–æ–π–∫–æ—Å—Ç–∏",
    
    "optimization_roadmap": {
      "completed_phases": [
        "PHASE 1: Hash function optimization (secp256k1_sha256)",
        "Static inline critical functions",
        "DEBUG_MORE disabled by default",
        "NTT vectorization infrastructure",
        "Manual Barrett reduction implementation"
      ],
      "current_phase_details": {
        "focus": "Vectorization optimizations for NTT operations",
        "target_improvement": "2-3x performance boost",
        "key_components": ["NTT s1: 20.1%", "NTT s0: 19.4%", "InvNTT v0: 15.8%"]
      },
      "next_phase": "PHASE 3: Aggressive SIMD optimization",
      "future_targets": ["3-5x performance boost", "AVX2/NEON vectorization", "cache optimization"]
    }
  },
  
  "module_architecture": {
    "crypto": {
      "description": "–ö—Ä–∏–ø—Ç–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∏ –∞–ª–≥–æ—Ä–∏—Ç–º—ã",
      "status": "‚úÖ STABLE - 100% PASS, Chipmunk production ready",
      "priority": "CRITICAL",
      "algorithms": {
        "post_quantum": {
          "chipmunk": "Lattice-based multi-signature scheme - PRIMARY FOCUS",
          "kyber": "Post-quantum key encapsulation mechanism",
          "dilithium": "Lattice-based digital signatures",
          "falcon": "Lattice-based signatures",
          "msrln": "Microsoft Research lattice-based cryptography",
          "sphincsplus": "Hash-based signatures"
        },
        "classical_deprecated": {
          "ecdsa": "For compatibility only - marked deprecated",
          "rsa": "For compatibility only - marked deprecated"
        }
      }
    },
    
    "core": {
      "description": "–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–∞",
      "status": "‚úÖ STABLE - 100% PASS",
      "components": ["Framework core", "Memory management", "Threading", "Utilities"]
    },
    
    "net": {
      "description": "–°–µ—Ç–µ–≤—ã–µ –∏ –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–æ–Ω–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã",
      "status": "‚ö†Ô∏è WARNINGS - —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ —Å—Ç–∞–±–∏–ª–µ–Ω",
      "components": ["HTTP server", "JSON-RPC", "P2P networking", "Encryption services"]
    },
    
    "global_db": {
      "description": "–°–∏—Å—Ç–µ–º–∞ –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö",
      "status": "‚ö†Ô∏è PARTIAL - SQLite OK, PostgreSQL needs dependency",
      "components": ["SQLite backend", "PostgreSQL backend", "Data serialization"]
    },
    
    "io": {
      "description": "–í–≤–æ–¥/–≤—ã–≤–æ–¥ –∏ —Å–æ–±—ã—Ç–∏—è",
      "status": "‚ö†Ô∏è WARNINGS - core functionality working",
      "components": ["Event system", "File I/O", "Network I/O"]
    }
  },
  
  "build_configurations": {
    "primary_platform": "macOS darwin 24.5.0",
    "build_system": "CMake",
    "configurations": {
      "debug": {
        "path": "build_debug/",
        "description": "Debug build with symbols",
        "usage": "Development and debugging"
      },
      "release": {
        "path": "build.release/",
        "description": "Optimized release build", 
        "usage": "Performance testing and production"
      },
      "test": {
        "path": "build_test/",
        "description": "Test configuration",
        "usage": "Running test suites"
      },
      "ci": {
        "path": "build_ci/",
        "description": "CI/CD pipeline build",
        "usage": "Continuous integration"
      },
      "asan": {
        "path": "build_asan/",
        "description": "AddressSanitizer build",
        "usage": "Memory error detection"
      }
    }
  },
  
  "performance_context": {
    "chipmunk_baseline": {
      "environment": "Apple Silicon M-series, release builds",
      "metrics": {
        "key_generation": "413ms per signer",
        "signing": "41ms per signature", 
        "throughput": "1.0 signatures/second"
      },
      "bottlenecks": {
        "ntt_operations": "55.3% of total runtime",
        "top_functions": [
          "NTT s1: 20.1%",
          "NTT s0: 19.4%",
          "InvNTT v0: 15.8%"
        ]
      }
    },
    
    "optimization_strategy": {
      "profiling_approach": {
        "macos": "Release builds + integrated micro-benchmarks",
        "linux": "Callgrind profiling with RelWithDebInfo builds"
      },
      "target_improvements": {
        "phase_2": "2-3x performance boost via vectorization",
        "phase_3": "3-5x performance boost via aggressive SIMD"
      }
    }
  },
  
  "testing_framework": {
    "test_suites": ["crypto-test", "core-test", "net-test"],
    "framework": "Custom DAP test framework",
    "current_status": {
      "crypto_module": "‚úÖ 100% PASS RATE",
      "core_module": "‚úÖ 100% PASS RATE", 
      "net_module": "‚ö†Ô∏è WARNINGS - –Ω–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ —Å—Ç–∞–±–∏–ª–µ–Ω",
      "global_db": "‚ö†Ô∏è PARTIAL - SQLite –ø—Ä–æ—Ö–æ–¥–∏—Ç, PostgreSQL –Ω—É–∂–Ω–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å",
      "io_module": "‚ö†Ô∏è WARNINGS - core —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å —Ä–∞–±–æ—Ç–∞–µ—Ç"
    },
    
    "performance_testing": {
      "implementation": "crypto/test/crypto/chipmunk_microbench.c",
      "purpose": "Performance regression testing",
      "status": "‚úÖ ACTIVE"
    }
  },
  
  "cryptographic_standards": {
    "hash_functions": {
      "primary": "secp256k1_sha256 - optimized version integrated from secp256k1",
      "secondary": "SHA3/Keccak via XKCP",
      "performance": "secp256k1_sha256 significantly faster than dap_hash_fast"
    },
    
    "memory_security": {
      "allocation": "DAP_NEW*/DAP_DELETE macros",
      "cleanup": "Always zero sensitive memory before freeing",
      "comparison": "Constant-time comparison for sensitive data"
    },
    
    "random_generation": {
      "policy": "Use DAP SDK random functions, not system rand()",
      "implementation": "crypto/src/rand/",
      "quality": "Cryptographically secure random number generation"
    }
  },
  
  "development_workflow": {
    "daily_development": {
      "build_validation": "Multiple configuration testing",
      "performance_monitoring": "Continuous performance regression testing",
      "security_validation": "Regular security audits of crypto implementations"
    },
    
    "code_review_focus": [
      "Post-quantum algorithm correctness",
      "Constant-time implementation verification",
      "Memory security validation",
      "Performance impact assessment"
    ],
    
    "optimization_cycle": [
      "Profile with release builds + micro-benchmarks",
      "Identify bottlenecks in crypto operations",
      "Implement vectorization/SIMD optimizations",
      "Validate cryptographic correctness",
      "Measure performance improvements"
    ]
  },
  
  "current_milestones": {
    "immediate": [
      "Complete Chipmunk SIMD optimization (Phase 3)",
      "Achieve target performance improvements",
      "Document optimization results"
    ],
    "short_term": [
      "Finalize all crypto algorithm optimizations",
      "Complete integration testing",
      "Prepare production documentation"
    ],
    "long_term": [
      "Full post-quantum crypto suite deployment",
      "Platform-specific optimizations",
      "Security audit completion"
    ]
  },
  
  "team_guidelines": {
    "crypto_development": {
      "priority": "Post-quantum algorithms have absolute priority",
      "testing": "All algorithms must pass 100% test suite",
      "performance": "Profile before and after any crypto changes",
      "security": "Constant-time implementation required"
    },
    
    "code_integration": {
      "callbacks": "All crypto algorithms must register full callback sets",
      "serialization": "Implement all ser/deser functions consistently",
      "documentation": "Document all performance-critical changes"
    },
    
    "platform_support": {
      "primary": "macOS development with cross-platform validation",
      "testing": "Validate on all target platforms before merge",
      "optimization": "Platform-specific optimizations welcome but optional"
    }
  },
  
  "context_loading_strategy": {
    "for_crypto_work": ["crypto.json", "chipmunk performance data"],
    "for_core_development": ["core.json", "build configurations"],
    "for_networking": ["net.json", "protocol specifications"],
    "for_database": ["global-db.json", "schema definitions"],
    "for_performance": ["performance profiles", "optimization roadmap"],
    "for_security": ["crypto standards", "security audit results"]
  },
  
  "success_metrics": {
    "crypto_performance": "Chipmunk optimization targets achieved",
    "test_coverage": "100% pass rate on all crypto tests",
    "security_validation": "Security audit passed",
    "cross_platform": "Successful builds on Linux, macOS, Windows",
    "production_readiness": "Core crypto components deployment ready"
  }
} 