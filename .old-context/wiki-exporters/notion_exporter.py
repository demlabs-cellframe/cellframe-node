#!/usr/bin/env python3
"""
Notion Exporter
–≠–∫—Å–ø–æ—Ä—Ç –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ –≤ —Ñ–æ—Ä–º–∞—Ç Notion
"""

class NotionExporter:
    """–≠–∫—Å–ø–æ—Ä—Ç–µ—Ä –¥–ª—è Notion"""
    
    def export_function(self, function_data: dict) -> dict:
        """–≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é –≤ —Ñ–æ—Ä–º–∞—Ç Notion blocks"""
        blocks = [
            {
                "type": "heading_1",
                "heading_1": {
                    "rich_text": [{"type": "text", "text": {"content": function_data['name']}}]
                }
            },
            {
                "type": "paragraph",
                "paragraph": {
                    "rich_text": [
                        {"type": "text", "text": {"content": f"–ö–∞—Ç–µ–≥–æ—Ä–∏—è: {function_data.get('category', 'utilities')}"}}
                    ]
                }
            },
            {
                "type": "code",
                "code": {
                    "language": "c",
                    "rich_text": [{"type": "text", "text": {"content": function_data.get('signature', '–°–∏–≥–Ω–∞—Ç—É—Ä–∞ –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞')}}]
                }
            }
        ]
        
        return {"blocks": blocks}
    
    def export_batch(self, functions: list, output_file: str):
        """–≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç –ø–∞–∫–µ—Ç —Ñ—É–Ω–∫—Ü–∏–π"""
        import json
        
        all_blocks = []
        for func in functions:
            notion_data = self.export_function(func)
            all_blocks.extend(notion_data['blocks'])
        
        with open(output_file, 'w', encoding='utf-8') as f:
            json.dump({"blocks": all_blocks}, f, ensure_ascii=False, indent=2)
        
        print(f"‚úÖ –≠–∫—Å–ø–æ—Ä—Ç –≤ Notion: {output_file}")

if __name__ == '__main__':
    exporter = NotionExporter()
    print("üìù Notion Exporter –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é")
