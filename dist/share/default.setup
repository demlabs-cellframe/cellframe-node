# Cellframe-node default setup files

# commands: 
# var: saves VALUE to VARIABLE. Access to VARIABLE is possible in _value_ parts of commands throug ${VARIABLE}.   
#   var VARIABLE=VALUE  
#   var VAR_COPY=${VARIABLE}
# Predefined variables:
#   ${HOST_OS} -> Linux | Windows | Macos
#   ${HOSTNAME} -> hostname of a machine
#   ${CONFIGS_PATH} -> /opt/cellframe-node/ for linux, 
#                      Common Documents (usually C:\Users\Public\Documents\cellframe-node\) for Windows
#
# fromtemplate: create and populate config from "share/configs" templates  
#   fromtemplate <configname> <defaut|ensure>
#       fromtemplate cellframe-node default
#       fromtemplate riemann ensure
#       
#   operation "default" - check if config already exists, and do nothing if it is.
#   operation "ensure" -  re-create config from template even if it exists.  
#
# network: manipulate network config state
#   network <netname> <default|ensure> <on|off>  
#       network     Backbone    ensure     off
#       network     riemann     default     on
#   
#   Puts a confing in a desired state: <netname.cfg> for "on" and <netname.cfg.dis> for "off"
#   operation "default" - check if config already exists, and do nothing if it is. If config not exists - like "fromtemplate" command.
#   operation "ensure" -  check if config already exists, and swith it do desired state. If config not exists - like "fromtemplate" command.
#
# config: manipulate configuration files
#   config <configname> <section> <param> <default|ensure> VALUE
#
#   config  cellframe-node  server      enabled  default  false   
#   config  cellframe-node  global_db   driver   default  ${DB_DRIVER}
#   config  riemann  general   newparam   ensure  mynewval
#   
#   operation "default" - check if value already set, and do nothing if it is. Set value otherwise.
#   operation "ensure" -  set a value to config no matter what.
#
# if: conditions
#   if ${VAR1}==${VAR2}
#       #do somthin
#   endif


# Setup Script
fromtemplate cellframe-node default

network     Backbone    ensure     off
network     KelVPN      ensure     off 
network     riemann     default     on
network     raiden      default     on
network     mileena     default     on
network     subzero     default      off    #subzero is devnet, force-to disable it 

# config commands works with cellframe-node / network/.cfg|.cfg dis files, not templated one
# all configs at this stage should be initialized by "network" & "fromtemplate" commands

config  cellframe-node  general                 auto_online         default     true
config  cellframe-node  general                 debug_mode          default     false
config  cellframe-node  server                  enabled             default     false
config  cellframe-node  server                  listen_address      default     [127.0.0.1:8079]
config  cellframe-node  notify_server           listen_address      default     [127.0.0.1:8080]
config  cellframe-node  bootstrap_balancer      http_server         ensure      true

config cellframe-node  global_db        driver           default     ${DB_DRIVER}
config cellframe-node  plugins          enabled          default     false

# all os except win uses unix socket for cli
if ${HOST_OS} != Windows
    config cellframe-node  conserver    listen_unix_socket_path     default     ${CONFIGS_PATH}/var/run/node_cli
endif

# windows use tcp/ip for conserver
if ${HOST_OS} == Windows
    config cellframe-node  conserver    listen_port_tcp          default    12345
endif

if Linux != ${HOST_OS}
    config cellframe-node  plugins       enabled          ensure     false
endif

config  Backbone     general     node-role   default     full
config  KelVPN       general     node-role   default     full
config  raiden       general     node-role   default     full
config  riemann      general     node-role   default     full
config  mileena      general     node-role   default     full
config  subzero      general     node-role   default     full
 
