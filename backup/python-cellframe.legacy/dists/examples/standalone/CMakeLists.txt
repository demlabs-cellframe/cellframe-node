cmake_minimum_required(VERSION 3.10)

FIND_PACKAGE(PythonInterp)

if (PYTHONINTERP_FOUND)
  if (UNIX AND NOT APPLE)
    if (PYTHON_VERSION_MAJOR EQUAL 3)
        FIND_PACKAGE(CellFrame COMPONENTS python${PYTHON_VERSION_SUFFIX})
        FIND_PACKAGE(PythonInterp 3)
        FIND_PACKAGE(PythonLibs 3 REQUIRED)
    else()
        FIND_PACKAGE(CellFrame COMPONENTS python)
        FIND_PACKAGE(PythonInterp)
        FIND_PACKAGE(PythonLibs REQUIRED)
    endif()
  else()	
    if (PYTHON_VERSION_MAJOR EQUAL 3)
        FIND_PACKAGE(CellFrame COMPONENTS python${PYTHON_VERSION_MAJOR}${PYTHON_VERSION_MINOR})
        FIND_PACKAGE(PythonInterp 3)
        FIND_PACKAGE(PythonLibs 3 REQUIRED)
    else()
        FIND_PACKAGE(CellFrame COMPONENTS python${PYTHON_VERSION_MAJOR}${PYTHON_VERSION_MINOR})
        FIND_PACKAGE(PythonInterp)
        FIND_PACKAGE(PythonLibs REQUIRED)
    endif()
  endif()
else()
    message("Python not found")
endif()

message(STATUS "PYTHON_LIBRARIES = ${PYTHON_LIBRARIES}")
message(STATUS "PYTHON_EXECUTABLE = ${PYTHON_EXECUTABLE}")
message(STATUS "PYTHON_INCLUDE_DIR = ${PYTHON_INCLUDE_DIR}")
message(STATUS "Boost_LIBRARIES = ${Boost_LIBRARIES}")

ENABLE_TESTING()
INCLUDE_DIRECTORIES(${CellFrame_INCLUDE_DIRS} ${PYTHON_INCLUDE_DIR})
#LINK_LIBRARIES(${CellFrame_LIBRARIES} ${PYTHON_LIBRARY}) # Deprecated but so convenient!

ADD_SUBDIRECTORY(0.Beginning
ADD_SUBDIRECTORY(1.Stock)
ADD_SUBDIRECTORY(2.Warehouse)
ADD_SUBDIRECTORY(3.Stuffs)
ADD_SUBDIRECTORY(4.Logistic)
ADD_SUBDIRECTORY(5.Accounting)
ADD_SUBDIRECTORY(6.Managment)
ADD_SUBDIRECTORY(7.Currency)
ADD_SUBDIRECTORY(8.Exchange)
ADD_SUBDIRECTORY(9.Support)
ADD_SUBDIRECTORY(10.Identification)
ADD_SUBDIRECTORY(11.Authorithation)
ADD_SUBDIRECTORY(12.Chat)
