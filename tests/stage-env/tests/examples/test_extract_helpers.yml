# Example: Built-in Save Helpers
# Demonstrates convenient save_* helpers for common data types

name: Save Helpers Example
description: Shows save_hash, save_wallet, save_node helpers
tags: [example, save_helpers, extraction]
version: "2.0"

network:
  topology: default

includes:
  - ../common/create_test_cert.yml
  - ../common/set_net_default.yml

defaults:
  node: node1
  wait: 2s

setup:
  - cli: wallet new -w extract_test

test:
  # Example 1: save_wallet (auto-pattern + checksum validation)
  - cli: wallet info -w extract_test
    save_wallet: my_wallet_addr
    # Автоматически извлекает и валидирует wallet address!
  
  # Example 2: save_hash for token declaration
  - cli: token_decl -token AUTOTEST -total_supply 1000000 -decimals 18 -signs_total 1 -signs_emission 1 -certs test_cert
    save_hash: token_hash
    # Извлекает hash и валидирует формат 0x[hex]{64}
  
  # Example 3: save_node for node address
  - cli: net get_cur_addr
    save_node: node_addr
    # Извлекает node address с :: separators
  
  # Example 4: Multiple save helpers in sequence
  - cli: wallet new -w wallet2
  
  - cli: wallet info -w wallet2
    save_wallet: wallet2_addr
  
  - cli: token_emit -token AUTOTEST -value 1000 -addr {{wallet2_addr}} -certs test_cert
    save_hash: emission_hash
  
  # Example 5: save (raw output) vs save_hash (extracted)
  - cli: token info -name AUTOTEST
    save: full_token_info         # Saves entire output
  
  - cli: tx_create -token AUTOTEST -from {{emission_hash}}:0 -value 500 -fee 0.1
    save_hash: tx_hash            # Extracts only the hash

check:
  - python: |
      # Wallet address is validated!
      wallet_addr = ctx.get_variable('my_wallet_addr')
      assert len(wallet_addr) >= 75, "Wallet address validated (min 75 chars base58)"
      assert wallet_addr.startswith('W'), "Cellframe addresses start with W"
      
      # Hash is validated!
      token_hash = ctx.get_variable('token_hash')
      assert token_hash.startswith('0x'), "Hash has 0x prefix"
      assert len(token_hash) == 66, "Hash is 0x + 64 hex chars"
      
      # Node address is validated!
      node_addr = ctx.get_variable('node_addr')
      assert '::' in node_addr, "Node address has :: separator"
      
      # Raw output vs extracted hash
      full_info = ctx.get_variable('full_token_info')
      assert 'AUTOTEST' in full_info, "Full info contains token name"
      
      tx_hash = ctx.get_variable('tx_hash')
      assert len(tx_hash) == 66, "Transaction hash extracted"


