# Example: Built-in Extract Helpers
# Demonstrates auto-pattern extraction for common types

name: Extract Helpers Example
description: Shows automatic pattern detection and validation
tags: [example, extract, helpers]
version: "1.0"

network:
  topology: default

includes:
  - ../common/networks/single_node.yml

defaults:
  node: node1
  wait: 2s

setup:
  - cli: wallet new -w extract_test

test:
  # Example 1: Wallet address (auto-pattern + checksum validation)
  - cli: wallet info -w extract_test -net stagenet
    extract_to:
      my_wallet_addr:
        type: wallet_address  # No pattern needed! Auto: "addr:\s+(\S+)"
  
  # Example 2: Token name (auto-pattern)
  - cli: token_decl -net stagenet -token AUTOTEST -total 1000
    extract_to:
      token_hash:
        type: hash  # Auto: "(?:hash|tx):\s*((?:0x)?[A-Fa-f0-9]{64})"
  
  # Example 3: Multiple extractions from one command
  - cli: token info -net stagenet -name AUTOTEST
    extract_to:
      token_name:
        type: token_name  # Auto: "token:\s*([A-Z0-9_]+)"
      total_supply:
        type: number      # Auto: "(\d+(?:\.\d+)?)"

check:
  - python: |
      # All values are automatically validated!
      wallet_addr = ctx.get_variable('my_wallet_addr')
      assert len(wallet_addr) >= 80, "Wallet address validated"
      
      token_hash = ctx.get_variable('token_hash')
      assert len(token_hash) == 64, "Hash is 64 chars"
      
      token_name = ctx.get_variable('token_name')
      assert token_name == "AUTOTEST", "Token name extracted"
      
      total_supply = ctx.get_variable('total_supply')
      assert float(total_supply) == 1000, "Total supply correct"

