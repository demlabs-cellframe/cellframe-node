variables:
    GIT_SUBMODULE_STRATEGY: recursive
    GIT_SUBMODULE_UPDATE_FLAGS: --force

stages:
    - build
    - version_increment
    - publish
    - deploy

.ci-polygon:
  tags:
     - ci-polygon
.ci-ansible:
  tags:
     - ci-ansible
    
.build:  
  extends: .ci-polygon
  stage: build
  timeout: 3 hours 30 minutes
  dependencies: []
  before_script:
    - echo "This is befor-scrip for build tasks"
  rules:
    - if: $CI_COMMIT_REF_NAME =~ /-asan$/
      variables:                                   
        DAP_ASAN: "1"  
    - if: $CI_COMMIT_REF_NAME =~ /-ubsan$/
      variables:                                   
        DAP_UBSAN: "1"  
    - if: $CI_COMMIT_REF_NAME =~ /-tsan$/
      variables:                                   
        DAP_TSAN: "1"
    - if: $CI_COMMIT_REF_NAME =~ /.*$/
      variables:                                   
        DUMMY_VAR_FOR_ALLOW_JOB: "1"
  artifacts:
    paths:
      - build_*/*.deb

.publish:
  extends: .ci-polygon
  image: demlabs/amd64/debian-buster:linuxbuilder
  stage: publish
  before_script: /opt/buildtools/prepare_environment.sh 
  

.deploy:
  extends: .ci-ansible
  stage: deploy
  rules:
    - if: $CI_COMMIT_REF_NAME == "master"
      when: manual
      allow_failure: true

  allow_failure: true

windows.release:amd64:
    extends: .build
    image: demlabs/amd64/debian-bullseye:windowsbuilder 
    before_script: /opt/buildtools/prepare_environment.sh amd64-linux
    script:
      - ./prod_build/build.sh --target windows release #-DBUILD_DIAGTOOL=ON

macos.release:amd64:
    extends: .build
    image: demlabs/amd64/debian-bullseye:osxbuilder
    before_script: /opt/buildtools/prepare_environment.sh amd64-osx
    script:
      - ./prod_build/build.sh --target osx release #-DBUILD_DIAGTOOL=ON
      - ./prod_build/pack.sh --target osx release --sign /opt/buildtools/sign/macos/demlabs.sh
      - /opt/buildtools/deploy_files.sh pub_cellframe macos/cellframe-node/$CI_COMMIT_REF_NAME/ build_*/*.pkg 
    artifacts:
      paths:
        - build_*/*.pkg

linux.debug:amd64:
    extends: .build
    image: demlabs/amd64/debian-buster:linuxbuilder
    before_script: /opt/buildtools/prepare_environment.sh amd64-linux
    script:
      - ./prod_build/build.sh --target linux debug -DBUILD_WITH_PYTHON_ENV=ON -DBUILD_DIAGTOOL=ON
      - ./prod_build/pack.sh --target linux debug
      - /opt/buildtools/deploy_files.sh pub_cellframe linux/cellframe-node/$CI_COMMIT_REF_NAME/ build_*/*.deb 

linux.rwd:amd64:
    extends: .build
    image: demlabs/amd64/debian-buster:linuxbuilder
    before_script: /opt/buildtools/prepare_environment.sh amd64-linux
    script:
      - ./prod_build/build.sh --target linux rwd -DBUILD_WITH_PYTHON_ENV=ON -DBUILD_DIAGTOOL=ON
      - ./prod_build/pack.sh --target linux rwd
      - /opt/buildtools/deploy_files.sh pub_cellframe linux/cellframe-node/$CI_COMMIT_REF_NAME/ build_*/*.deb 

linux.updtr:amd64:
    extends: .build
    image: demlabs/amd64/debian-buster:linuxbuilder
    before_script: /opt/buildtools/prepare_environment.sh amd64-linux
    script:
      - ./prod_build/build.sh --target linux release -DBUILD_WITH_PYTHON_ENV=ON -DBUILD_DIAGTOOL=ON -DADD_UPDATER=ON
      - ./prod_build/pack.sh --target linux release
      - /opt/buildtools/deploy_files.sh pub_cellframe linux/cellframe-node/$CI_COMMIT_REF_NAME/ build_*/*.deb 

linux.release:amd64:
    extends: .build
    image: demlabs/amd64/debian-buster:linuxbuilder
    before_script: /opt/buildtools/prepare_environment.sh amd64-linux
    script: 
      - ./prod_build/build.sh --target linux release -DBUILD_WITH_PYTHON_ENV=ON -DBUILD_DIAGTOOL=ON
      - ./prod_build/pack.sh --target linux release
      - /opt/buildtools/deploy_files.sh pub_cellframe linux/cellframe-node/$CI_COMMIT_REF_NAME/ build_*/*.deb 
      - /opt/buildtools/deploy_files.sh pub_cellframe linux/cellframe-node/$CI_COMMIT_REF_NAME/  build_linux_release/*-amd64.deb --redirect-from linux/cellframe-node/$CI_COMMIT_REF_NAME/latest-amd64
      - anybadge -l "node version" -v "$(source version.mk; echo "$VERSION_MAJOR.$VERSION_MINOR.$VERSION_PATCH")" -f node-version-badge.svg -c blue
      - /opt/buildtools/deploy_files.sh pub_cellframe linux/cellframe-node/$CI_COMMIT_REF_NAME/ ./node-version-badge.svg || true

linux.release:armhf:
    extends: .build
    image: demlabs/arm32v7/debian-bullseye:linuxbuilder

    before_script: /opt/buildtools/prepare_environment.sh armhf-linux
    script: 
      - ./prod_build/build.sh --target linux release
      - ./prod_build/pack.sh --target linux release
      - /opt/buildtools/deploy_files.sh pub_cellframe linux/cellframe-node/$CI_COMMIT_REF_NAME/ build_*/*.deb 
      - /opt/buildtools/deploy_files.sh pub_cellframe linux/cellframe-node/$CI_COMMIT_REF_NAME/  build_*/*armhf*.deb --redirect-from linux/cellframe-node/$CI_COMMIT_REF_NAME/latest-armhf --just-redirect

linux.updtr:armhf:
    extends: .build
    image: demlabs/arm32v7/debian-bullseye:linuxbuilder
    
    when: manual
    allow_failure: true
    
    before_script: /opt/buildtools/prepare_environment.sh armhf-linux
    script: 
      - ./prod_build/build.sh --target linux release -DADD_UPDATER=ON
      - ./prod_build/pack.sh --target linux release
      - /opt/buildtools/deploy_files.sh pub_cellframe linux/cellframe-node/$CI_COMMIT_REF_NAME/ build_*/*.deb 
      - /opt/buildtools/deploy_files.sh pub_cellframe linux/cellframe-node/$CI_COMMIT_REF_NAME/  build_*/*armhf*.deb --redirect-from linux/cellframe-node/$CI_COMMIT_REF_NAME/latest-armhf --just-redirect

linux.release:arm64:
    extends: .build
    image: demlabs/arm64v8/debian-bullseye:linuxbuilder
    before_script: /opt/buildtools/prepare_environment.sh arm64-linux
    script: 
      - ./prod_build/build.sh --target linux release
      - ./prod_build/pack.sh --target linux release
      - /opt/buildtools/deploy_files.sh pub_cellframe linux/cellframe-node/$CI_COMMIT_REF_NAME/ build_*/*.deb 
      - /opt/buildtools/deploy_files.sh pub_cellframe linux/cellframe-node/$CI_COMMIT_REF_NAME/  build_*/*arm64*.deb --redirect-from linux/cellframe-node/$CI_COMMIT_REF_NAME/latest-arm64 --just-redirect
  
linux.updtr:arm64:
    extends: .build
    image: demlabs/arm64v8/debian-bullseye:linuxbuilder
    before_script: /opt/buildtools/prepare_environment.sh arm64-linux
    
    when: manual
    allow_failure: true
    
    script: 
      - ./prod_build/build.sh --target linux release -DADD_UPDATER=ON
      - ./prod_build/pack.sh --target linux release
      - /opt/buildtools/deploy_files.sh pub_cellframe linux/cellframe-node/$CI_COMMIT_REF_NAME/ build_*/*.deb 
      - /opt/buildtools/deploy_files.sh pub_cellframe linux/cellframe-node/$CI_COMMIT_REF_NAME/  build_*/*arm64*.deb --redirect-from linux/cellframe-node/$CI_COMMIT_REF_NAME/latest-arm64 --just-redirect
  

